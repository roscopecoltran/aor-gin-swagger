// Code generated by go-bindata.
// sources:
// config.yaml
// templates/.DS_Store
// templates/api.gotmpl
// templates/dockerfile.build.gotmpl
// templates/dockerfile.dist.gotmpl
// templates/main.gotmpl
// templates/makefile.gotmpl
// templates/migrate.gotmpl
// templates/model-generate.gotmpl
// templates/model-gorm.gotmpl
// templates/model.gotmpl
// templates/parameter.gotmpl
// templates/restapi.gotmpl
// templates/service.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\xcf\x6e\xd4\x30\x10\xc6\xef\x3c\xc5\x28\xa7\xdd\x43\x53\xce\xb9\x21\x15\x24\x90\x40\x2b\xd1\x63\xa5\xdd\xc1\x9e\xb8\xa6\xfe\x27\x8f\x17\x04\x91\xdf\x1d\xc5\xc9\xa6\x4a\xda\x85\x14\x28\xdc\x9c\x78\xbe\xf1\x6f\x3e\x8f\xc7\xe0\x37\x7f\x4c\xcd\x0b\x00\x0c\xc1\x68\x81\x49\x7b\xd7\x7f\x02\x5c\x80\x43\x4b\x0d\x08\xef\x5a\xad\x8e\x91\xca\x5f\x00\xf6\xc7\x28\xa8\x81\xaa\xeb\xa0\xbe\xb6\xe1\x4a\x47\xc8\xf9\x32\x91\x0d\x06\x13\xf1\x65\x24\x4e\x18\x74\xad\x7c\xb2\xc1\x54\xa3\x2c\x61\x54\x94\x8a\xec\xd0\x75\xf0\xd9\x6b\xf7\x46\x1b\xda\x61\xba\x85\xfa\xba\x6c\x42\xfd\x91\xe2\x17\x8a\x3b\x14\x77\xa8\x08\x72\x3e\xe4\x7c\xd2\xb7\xda\xd0\x7e\x20\xaa\x06\xa4\x5a\xf9\x6a\x46\x4a\xf6\x13\x49\x49\x72\xcf\x81\xc4\x82\x16\x99\x29\x35\xfc\x15\x95\xa2\xf8\x8e\xbd\x7b\xdd\x07\x3f\x03\xdb\x0c\xe2\x01\x22\x97\x24\x6b\x9d\x7c\x5e\x17\x87\xec\x73\x3e\x8b\xda\xad\xa5\xeb\x63\x7f\x03\xef\xa6\x12\x56\xde\x54\xb0\x91\xc8\xb7\x14\xf5\x77\x82\x4d\x40\x16\x68\xfa\x65\xfd\x01\x2d\x6d\xb7\x90\xf3\xc5\xe0\xd5\x19\xf8\xf1\xf0\x05\xbd\x56\x11\xd3\xea\x46\x1d\xc3\xff\x4d\x0d\x43\xf2\xc7\x2a\x99\x28\x1e\xb6\x8a\x16\xab\x8b\x19\xc3\xff\xdb\x85\xdc\x9f\x3f\x2f\x43\xfa\x33\x4f\xb1\x24\xbb\x9a\x76\xff\x66\x67\x4b\x7f\x7a\x79\xd6\x4b\x32\x3c\x1f\x68\x92\x5a\xed\x74\x3f\xe8\x1e\x05\x2b\x92\xa7\x40\xbd\xef\x05\xbf\x64\x1a\x32\x6c\xd8\xe1\xdd\x59\x87\x0f\x39\x8f\xdc\x3e\x50\x2c\xb3\x78\xc1\x1e\x30\xa2\xa5\x44\x91\xd7\xf6\xc5\xa4\xf8\x79\x67\xe8\x16\x54\x82\x8d\x21\xd7\x17\xa6\x78\x0b\x2f\x21\xe7\x95\x17\x51\xbf\xda\xbd\x9d\xd6\xa7\xc5\x20\x27\xc3\xf4\x84\x44\x0b\xb1\x93\x7f\x6c\xe8\xfe\xde\xb2\xe2\xed\x8f\x00\x00\x00\xff\xff\x6d\x2e\x36\xbc\xf2\x06\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1778, mode: os.FileMode(420), modTime: time.Unix(1511542445, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDs_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xd8\x31\x0a\x02\x31\x10\x85\xe1\x37\x31\x45\xc0\x26\xa5\x65\x1a\x0f\xe0\x0d\xc2\xb2\x9e\xc0\x0b\x58\x78\x05\xfb\x1c\x5d\x96\x79\x60\x60\xd5\x4e\x8c\xcb\xfb\x40\xfe\x05\x37\x2a\x16\x31\x23\x00\x9b\xee\xb7\x13\x90\x01\x24\x78\x71\xc4\x4b\x89\x8f\x95\xd0\x5d\x1b\x5f\x43\x44\x44\x44\xc6\x66\x9e\xb4\xff\xf5\x07\x11\x91\xe1\x2c\xfb\x43\x61\x2b\xdb\xbc\xc6\xe7\x03\x1b\xbb\x35\x99\x2d\x6c\x65\x9b\xd7\x78\x5f\x60\x23\x9b\xd8\xcc\x16\xb6\xb2\xcd\xcb\x4d\xcb\x38\x7c\x18\xdf\xd9\x38\xa1\x18\xa7\x10\x2b\x6c\xfd\xce\x77\x23\xf2\xef\x76\x9e\xbc\xfc\xfe\x9f\xdf\xcf\xff\x22\xb2\x61\x16\xe7\xcb\x3c\x3d\x07\x82\xf5\x0d\x00\xae\xdd\xf5\xa7\x43\x40\xf0\x3f\x0b\x0f\xdd\x5a\x1d\x04\x44\x06\xf3\x08\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func templatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_templatesDs_store,
		"templates/.DS_Store",
	)
}

func templatesDs_store() (*asset, error) {
	bytes, err := templatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1511443706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x39\xdd\x72\xdb\x36\xd6\xd7\xe4\x53\x9c\x72\x92\x94\xf4\xc8\x54\xdb\x4b\xcd\xe7\xf9\x26\xb1\xdd\xd4\x8d\x93\x78\x2c\x65\x73\xb3\x33\x2d\x4c\x1e\x49\xd8\x50\x00\x0b\x80\xb6\x65\x0d\xdf\x7d\xe7\x1c\x80\x14\x25\xb3\xde\x26\x17\x32\x08\x9c\xff\x7f\x20\xb5\x28\xbe\x89\x15\xc2\x6e\x07\xf9\xdb\x9b\xab\x9b\xf0\xd9\xb6\x71\x2c\x37\xb5\x36\x0e\xd2\x38\x4a\x0a\xad\x1c\x3e\xba\x24\x8e\x12\x85\x6e\xba\x76\xae\xa6\xb5\xb6\xfe\x77\x6a\xe5\x4a\x89\x8a\x3e\xec\xd6\x16\xa2\xe2\xa5\x93\x1b\xe4\x2d\x67\xa4\x5a\x31\xe8\x72\xe3\x92\x38\x8e\x92\x95\xae\x84\x5a\xe5\xda\xac\xa6\x8f\x53\x2d\x1a\xb7\xfe\xc5\xef\x4b\xb7\x6e\xee\xf2\x42\x6f\xa6\x2b\xa9\x4e\x89\xad\x91\x77\xd3\xba\x36\x7a\x99\x3c\x3f\x5f\x69\x25\x0b\x5a\x11\xf2\x4a\x2a\x4f\x09\x86\x60\x4f\xa2\x12\xaa\xd4\x0c\x3e\xce\xc8\x68\x5b\xe8\x1a\x0b\x5d\x39\x23\xd4\x54\x68\x73\x4a\xc0\xf6\x41\xac\x56\x68\xa6\xa2\x96\xc9\x77\x21\x14\x5a\x2d\xe5\xea\xfb\x70\x4a\xe1\xc4\x9d\xb0\xf8\x7d\x58\x1b\x59\x96\x15\x3e\x08\x83\xa4\xd3\x74\x0a\x4f\xa2\x8e\x78\x51\xe9\x95\x69\x6c\x1c\x55\x7a\x75\x60\x0d\x2b\x4d\x53\x5b\x54\x53\x0f\x10\xd0\x2e\x70\x29\x9a\xca\x5d\xb1\xbf\x6d\x1c\xed\x76\x46\xa8\x15\x42\x7e\x78\xd0\xb6\xbb\x5d\x6d\xa4\x72\x4b\x48\x5e\xff\x95\x40\xde\xb6\x04\x8b\xaa\xa4\xc5\x74\x0a\xcf\x08\xbc\xfa\x86\xdb\x09\xbc\xba\x17\x55\x83\x30\x3b\x83\x7c\x40\x89\xce\xda\x96\xe2\x6e\x48\xd3\xc3\x0e\x09\x67\x71\x3c\x9d\xc2\xad\x6e\x1c\x5a\x28\x71\x29\x15\x5a\x10\x55\x05\x6e\x8d\x60\xfc\xb6\x5e\xf2\xd7\xdb\x9b\x2b\xb0\x68\xee\x65\x81\x79\xec\xb6\x35\x76\x68\xd6\x99\xa6\x70\xb0\x8b\xa3\x93\x95\x54\xf9\xa5\x5a\x49\x85\x03\x3d\x3f\xd7\x68\x84\x93\x5a\xb1\x64\x50\x0b\x8a\x61\xf9\x84\x90\x7f\x12\x1b\x4a\x86\x01\x05\x4f\x82\x09\x9b\xf7\x46\x37\x75\x1c\x45\xbb\x1d\xc8\x25\xe4\x6f\x1b\xb7\xd6\x46\x3e\x61\x09\x6d\x4b\x1f\x40\xa0\xbf\x09\x55\x56\x68\x7e\x6d\x54\x11\x07\xa5\xa2\xe8\x46\x5b\x07\xcf\x29\xb5\x1d\x44\xdc\xb2\xda\x3e\x96\x1a\x83\x5f\xb1\xaa\x3e\x28\xfd\xa0\x00\x95\xb8\xab\xc8\x04\xaa\xdc\x1f\x5b\x98\xe6\x0f\x58\x55\xa7\xdf\x02\x4c\x59\x6b\xa9\x9c\xcd\xe3\x65\xa3\x0a\x48\x0d\x9c\x78\x53\x64\x23\x24\xd3\x35\x8a\xca\xad\x49\x40\x20\xf0\x34\x83\x3b\xad\xab\x8c\xb4\x7d\xe8\xf9\xce\xce\xc0\xe4\x2c\x66\x9a\x0c\x99\x25\x59\x1c\x91\x59\x7a\xc8\xfc\xfd\xe5\x22\x4d\xa6\xb6\x58\xe3\x46\x9c\x96\xd2\x16\xfa\x1e\xcd\x36\x99\x78\xe2\x85\x7b\xf4\x8a\x9f\xfb\x9a\xc2\x6c\xa2\xa8\x87\x23\x46\x03\x6b\x47\xd1\x9c\x09\x7d\xb9\xbd\x06\xf0\x95\x04\xfe\xfc\x8f\xd5\x6a\x96\x78\x0e\x7f\x34\xa6\x4a\xfe\x1c\x40\x2e\xc8\xf1\xa3\x90\x14\x12\x01\xf4\xcb\x15\x13\xa4\x7f\x87\xa0\x8d\xdc\x13\x6c\x8f\x04\x98\x01\x24\xd3\x90\x7c\x39\x81\x27\x93\x23\xbe\x33\x48\xc2\xf9\xe9\x2f\xf9\x4f\xfe\xb8\xa5\x9f\xc2\x3d\xe6\xbf\xcf\x3f\x7f\x4a\xa9\x74\xe6\x73\x27\x5c\x63\x3f\x7f\x98\xc0\x9b\x5e\xef\x2c\x8e\xa2\x36\x1b\x31\xa4\xf7\x4e\x32\x01\xbf\x08\xe1\x34\x70\x5a\x96\x51\xe0\xc4\x91\xe9\x2c\x7f\x20\xe1\x4b\x56\x27\xa9\xe6\xac\xfe\xb1\x5c\xde\x28\xe9\xdc\x93\x22\xc9\x99\x4b\x16\xe2\xf2\x40\x14\x90\x96\xd3\xcf\x6f\xc2\x6f\x8b\xc5\x0d\xac\xc3\x51\x63\xb1\x84\xa5\x36\x0c\x30\x0c\x9b\xa0\x16\x11\xe3\x24\xa6\x04\xf2\xa1\x5d\x86\xa0\xfd\x3b\x75\x0f\x63\xf4\x28\xc3\x48\x2d\x0f\xca\x81\xb4\xc7\x8a\x23\x83\xae\x31\xea\xc5\x20\x0c\x1a\x1c\x47\xe0\x6f\x7e\x9b\x18\x76\x61\x12\x9c\x32\x0c\x13\x0f\x35\x0b\x3c\xb7\x69\x16\xbc\x4f\xbf\x72\x09\x3f\xf8\xfd\x3c\x10\xf3\x38\x63\x61\x31\xf7\x15\xec\x8b\x12\xf7\x42\x56\x64\x91\x09\xbc\xf1\xc8\x19\x53\x04\xac\x2c\xbe\x40\x80\xe3\x6a\x88\x40\xe1\xe1\xfd\x16\x68\x77\x1e\x93\xca\xa1\x59\x8a\x02\xc1\xad\x85\x83\x4d\x63\x1d\xdc\x21\xc8\x4d\x5d\xe1\x06\x95\xc3\x12\xa4\x02\x6d\x4a\x34\xe0\x34\xd4\x46\xdf\xcb\x12\x89\xd0\x5d\x63\xa9\x10\x5b\xea\x34\xb2\xe8\x3d\xfc\xbc\x02\xf7\x1c\x7b\x56\xbb\x38\x98\x6a\x1b\x9c\xf8\x3d\x85\xf8\x99\xe7\x42\xe9\xbd\x11\x46\x6c\x2c\xb4\xed\x04\x6a\xbf\x3c\xd9\xed\xf2\x30\xcd\xb4\x6d\x3e\x4a\xcc\x23\xed\x76\x54\x2f\xa1\x6d\x33\x38\x11\xb5\xcc\x6f\xd1\xd6\x5a\x59\x1c\x96\x62\x0e\xc8\x95\x54\xf2\x09\x6f\x84\x5b\xa7\xb5\x70\xeb\x90\x23\x59\x57\x40\x76\x7d\x88\x85\x81\x27\xbf\xc5\xba\x12\x05\xa6\xc7\xdf\x84\x3d\x81\x64\x97\x4c\x20\x99\x25\x13\x38\xfd\x39\x9b\x40\xd2\xd2\xa7\xff\x3a\xae\xfe\xa1\x8d\x0d\xca\xfd\xa0\xf9\x8d\xda\x9e\x05\x3e\xc2\x4f\xc3\x69\xe7\x93\x49\x48\x38\xee\x54\xe4\x88\x09\x38\xfd\x0d\x15\x55\xc6\x4e\xb7\xd0\x36\x48\x39\xe4\xae\x49\xc9\x41\xe6\xff\x84\x0f\x69\xd6\x6d\xe6\x5f\x2c\xa6\xdc\xcc\xd0\x17\xb3\x34\x3b\x3c\xdb\x4f\x2a\xf9\x35\x4f\x1e\xd7\x9a\xea\x0a\x81\xc5\x91\xbd\x2f\xce\x59\x52\xa2\xed\x65\xce\xfd\x46\x1c\x53\xe6\xf4\xe7\x34\xa0\xe6\xe7\x9f\x6f\xe7\xf9\xa5\xaf\x14\x9c\x04\xe3\x6c\x08\x2c\xed\x2a\xe3\x01\x91\x8b\x77\xff\x00\xfd\x22\x0c\x64\x21\xca\xd2\x6e\x40\xcb\x2f\xde\x8d\x12\x25\xc9\x7e\xff\xba\x38\xa0\xbc\xdc\xb8\xfc\x86\x67\x9b\x34\xf9\x62\xf1\xf7\xaf\x8b\xff\x87\xd7\x0e\xfe\x4d\x45\xf9\x6f\x31\xb3\x21\x62\xa5\xd2\x64\x8e\x85\x41\xf7\x01\xb7\x33\x18\xc5\xeb\xcf\x59\xac\x28\x04\xc5\xec\x0c\xde\x78\xd7\xed\xfc\xb4\x33\x03\xaf\x28\x49\x3e\x9a\x6e\x1e\x71\x3c\x51\x86\x43\x0a\x9c\x85\xc0\xeb\x86\x01\x1e\x00\x38\x0b\x15\x42\xfe\x11\xdd\x5a\x97\x90\xbc\xbf\x5c\x24\xf0\xcf\xa9\x3e\x73\x1f\xd9\x5d\x39\xea\xa9\x36\xed\xc7\x49\xa9\x4a\x7c\x9c\xc0\x2b\xb7\xad\x79\x9c\x3c\xd7\xca\x36\x1b\xb4\x1f\xb1\x94\xdc\x7f\xb9\x6c\xc8\x65\x80\x6c\xdb\x49\xc8\xe1\x64\xb7\x23\x24\x5e\xf0\x46\x96\xc5\x7d\xde\x8f\x8e\x6f\x7d\x3b\xe2\xec\xd8\xf9\x21\xef\x15\xab\xc3\xe2\xcf\xce\x20\x3d\x52\x29\xa3\x5b\x93\x87\xb3\x58\x34\x46\xba\xed\x05\xcd\xab\x92\x2d\xcc\x02\xcf\x47\xf6\x3b\xa4\xe0\x93\x0e\x04\xb8\x02\xbe\x2a\x71\x49\x98\xac\xcf\x38\xdd\xce\x9c\xfd\x1c\x8a\x7f\x31\x5a\x4f\x89\xc7\x13\xbc\x31\xba\xb6\x39\x0f\x47\x49\xb8\x08\x79\x24\xd6\x69\xd1\x25\xfe\xec\xac\x2f\x02\x31\xf7\xad\xc3\xe3\xb3\x33\x48\x12\xdf\x7b\x8e\x0e\xe0\xf0\x72\xf0\xf7\x12\x04\x0c\xe6\xdd\xf3\xe7\x10\x19\x98\xb7\x6d\xd9\x1d\xc0\xc5\xc6\x8b\xcb\x1b\x29\x71\x1e\xc4\xc9\x9c\xee\x47\x96\x4f\x9e\x45\x09\xdf\x9d\xbc\xd9\x19\xea\x85\xd8\x60\xd0\x41\x74\x70\xeb\x0e\x6c\x2f\xc3\x30\xed\x1b\x6e\x27\xfe\xec\xd0\x30\xbe\xd7\xd3\x6f\xe6\xfd\xe0\x43\xeb\x05\xf5\x8e\x83\xff\x25\x33\x1c\xd1\xec\x6f\x09\xd1\x8b\xe9\xc5\x77\x8c\x3e\x5b\xc7\x61\x06\x39\xfc\x3f\x69\xe5\xbb\x5d\x48\xef\xb6\x4d\x07\xcd\xf0\xe8\x56\x48\x7b\x64\x42\x38\x68\xc0\xef\xc2\xc0\x70\x4d\xf3\xc2\x78\x6b\xef\x9a\xd7\xe8\x29\x75\x8a\xfe\xae\x19\xfa\xac\x97\x38\x34\x4b\x6a\x7f\xdd\xf5\x70\x7c\x14\xe1\x9d\x7e\xae\x0b\x8d\x2d\x34\xb8\x38\xf2\x8d\x07\x4e\x42\xe7\x89\x08\x17\x0d\x9c\xf8\xc1\x8a\x3f\xe2\x68\x21\x5d\xd5\x5d\x2e\xe2\xe8\x5f\x68\xac\xd4\x5d\xbf\x0f\x72\x7c\xc2\x07\x62\xc4\xe9\xc9\x2a\x58\x10\xa0\xf0\x61\xa4\x3f\x7b\xd0\xd4\xde\x17\xfb\x96\x7c\x28\x46\x06\x27\x84\xb6\xe3\x6e\xf3\x43\xe8\x8d\x17\x78\xd7\xf0\xb8\x11\x51\xcb\x9d\xa3\xfb\xa8\xcb\xae\xfd\x56\x28\x2c\xd2\x77\x68\x52\xa2\x96\xdc\x0b\xde\xde\x5c\x11\x82\x57\x76\xf6\x7c\x32\xb8\x2f\x26\x3d\x7d\x8a\xb8\x0b\x69\xb9\x1d\x75\x02\xf5\x69\xcb\xa9\xe1\xf7\x3a\x32\xb4\xc3\x86\x99\x41\xb2\xdb\x41\x7e\xa5\x96\x3a\xf7\x96\x6a\x5b\xbe\x03\x05\x43\x0d\xcf\x3b\xdb\x79\x88\xd6\x3f\x44\xf8\x8a\x0b\xfc\xdc\x03\x64\xf8\xfd\x4d\x96\x06\xd1\x92\x15\xdf\xe8\x12\xd9\x1e\xcf\xcc\xc1\x78\xf9\x2d\xae\xa4\x75\x68\x52\x1e\xe6\x7c\x50\xfb\x1e\x38\x01\x25\xab\xac\xe7\x66\xd1\x85\x87\x12\xfa\xb3\xf2\x33\xee\x02\x1f\xdd\xaf\xda\x6c\x84\x73\x68\xe0\x41\xba\x35\x28\x0d\x85\xae\xb4\xf1\xef\x29\x64\xf0\x1e\x20\x7d\x43\x3b\x07\x38\xbb\x60\xba\x73\x46\x99\x81\x33\x0d\xb6\x99\x77\x45\x1e\x82\xea\x0c\xde\x0c\xc2\x8a\x44\x7f\x5b\x96\x66\x06\xdd\xbf\xce\x11\x65\x69\xd0\x5a\xb2\x60\xb8\xe2\x04\x90\xe7\x9a\x91\x6f\x51\x94\x0b\xb9\x41\xdd\xb8\x19\xc0\xcf\x3f\xc1\x09\x38\xb9\x41\x2a\xc2\x5a\x95\x04\xf1\xd5\x48\x87\x3d\xc8\x08\x44\x18\x6b\xba\x40\xe8\x5f\x08\xba\x68\x60\x2b\x0f\x98\x8f\xbc\x25\xd8\xfb\x22\x5c\x71\xb6\x7b\x4b\xf7\x70\xe1\x72\xf4\xd4\xfb\x35\x1e\x92\x1b\xde\x77\x9f\x9e\x5d\x78\x87\x94\xc9\x9e\xa1\x08\x88\x5a\x86\xcc\xbb\x6d\x14\x98\x46\x1d\xa6\x3f\x5d\x4f\x1d\x3c\xc8\xaa\x82\x8a\xc2\x42\x81\x56\x80\xd2\xad\xd1\xf8\x9b\xaa\xf6\x7f\xe7\x50\x62\x8d\xaa\xa4\x49\x5e\x2b\x22\x47\x54\x42\x36\xd6\xc2\xd2\x3d\xd6\xe9\x90\xb2\xdd\xb3\x8a\xe0\xf4\xcc\x88\x73\x9a\x01\x1a\xa3\x0d\x99\x88\x62\x82\x82\x7c\x49\xd3\x9b\xb9\x27\x92\x3f\xbe\xb6\x70\x0a\xaf\xed\x8f\xc4\x5e\x78\xbf\xc2\x6b\x9b\x4c\x40\xf8\x54\xa1\x45\xc8\x09\x5a\x7a\xd1\x39\x02\x32\xf6\x89\x08\xc6\xce\xaf\x14\x0f\x01\xc8\xc2\x93\x3f\x3a\x3b\x74\x38\xd7\xac\xe6\x5b\x55\x72\x74\xa5\x61\x2c\x7c\x11\x68\x71\x3d\x4f\x7b\x06\x8b\xeb\xf9\x39\x1a\xf7\xab\xf4\x42\xed\x77\x3f\xe0\x96\x36\xbb\xdb\xc9\x7c\xdd\xb8\x52\x3f\x28\x6f\xdc\x95\x11\x05\x2e\x9b\xaa\xda\x82\xed\x0e\x0e\xfd\x70\x6c\xb4\x0e\x7f\x68\xb9\x63\x31\x7b\x98\xf0\x00\x9d\xbf\x13\xc5\xb7\x95\xd1\x8d\x2a\x69\xb8\xef\xfd\xfe\x55\xba\xf5\x5c\xae\xba\x07\x89\xb1\x28\xe0\x54\x9e\x5f\xbd\x5f\x5c\xde\x7e\xf4\xcf\x13\xe4\x17\xd1\x38\xbd\x11\x4e\x16\xa2\xaa\xb6\x71\x5f\x82\xca\x1c\x16\x6b\xdc\xa3\xee\xa3\x87\x6e\x5b\xa2\xa7\xe3\xdf\xbd\xf9\x2d\x6e\xc4\x00\x5d\x14\x3d\xe0\x5d\x6f\x83\xe9\x14\xae\xdc\x8f\x16\x6a\x6d\xad\xa4\x62\xe7\x34\xe8\x9a\x26\x39\x92\x80\x23\x0d\x84\xda\x82\x6a\x36\x77\x68\xf6\xb6\x24\xdb\xf9\x79\xef\x61\x2d\x8b\x35\xcb\xc4\xf2\x3e\x62\xd1\x38\x04\xad\x10\xee\xb6\xfc\x47\x2c\xa9\x74\x05\xc6\x41\x85\xb5\xb0\x70\x87\xa8\xf6\x04\x6d\x53\x14\x68\x2d\x4b\x3c\x12\xcf\x87\x16\x4d\x7b\xb4\x3c\xcf\xc3\xfb\x0b\x3b\x6d\xe0\x3b\x2b\x57\xe7\xfc\x76\xb2\x11\xdf\x30\x2d\xd6\x42\x81\xb6\xf9\x9c\x2d\x34\x81\x9f\x33\x86\x50\xa2\xca\x3f\x69\x27\x97\xdb\x94\xe1\x27\x10\xfe\xc3\x20\x0f\x26\xa5\xcc\x5e\xe9\xee\x8d\x87\xe2\xfb\xff\x4e\x19\x92\x2a\xcf\x3e\x1e\x28\xaa\x53\x82\x45\x63\x88\xa7\xc8\x39\x07\x39\x55\x68\xeb\x87\x33\xaa\xf5\x8c\xbf\xdf\xe1\x9a\x7b\x69\x8c\x2f\xbb\xe7\x95\xb6\xa1\xa4\x75\x71\x87\xc6\xc4\xe1\xbd\x24\x8e\xc8\xd3\x7f\x4c\x60\xe9\x9f\x3e\x79\xb4\xec\xad\xc0\x17\x47\xcf\x79\xc9\x6c\x47\xf8\x8e\x12\x0d\x7b\x4a\x56\x21\x78\xef\xe5\x66\x06\x4b\x77\xb6\xd2\xf1\x7f\x03\x00\x00\xff\xff\x1f\xd1\x37\x2a\x8b\x19\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 6539, mode: os.FileMode(420), modTime: time.Unix(1511532930, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerfileBuildGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x28\xc9\x57\x48\xc9\x07\x04\x00\x00\xff\xff\x99\xcc\x53\xef\x07\x00\x00\x00")

func templatesDockerfileBuildGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileBuildGotmpl,
		"templates/dockerfile.build.gotmpl",
	)
}

func templatesDockerfileBuildGotmpl() (*asset, error) {
	bytes, err := templatesDockerfileBuildGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dockerfile.build.gotmpl", size: 7, mode: os.FileMode(420), modTime: time.Unix(1511532136, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDockerfileDistGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x52\x56\x28\xc9\x57\x48\xc9\xe7\x02\x04\x00\x00\xff\xff\xbf\x7e\xeb\xbb\x08\x00\x00\x00")

func templatesDockerfileDistGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDockerfileDistGotmpl,
		"templates/dockerfile.dist.gotmpl",
	)
}

func templatesDockerfileDistGotmpl() (*asset, error) {
	bytes, err := templatesDockerfileDistGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/dockerfile.dist.gotmpl", size: 8, mode: os.FileMode(420), modTime: time.Unix(1511532137, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xc1\x8a\xdb\x30\x10\x86\xcf\xd6\x53\x4c\xc5\xee\x62\x43\x56\xb9\x07\xf6\xb0\x6c\x68\x37\xd0\x2e\xa6\x29\xf4\xd2\xcb\xc4\x19\x2b\x62\x65\x29\x1d\xc9\x5e\x8a\xd1\xbb\x17\xd9\x6e\x08\xdb\x4b\x7b\x0b\x99\xff\x1b\xcd\xff\xf9\x8c\xcd\x2b\x6a\x82\x0e\x8d\x13\xc2\x74\x67\xcf\x11\x4a\x51\xc8\xb6\x8b\x52\x14\xd2\x7a\x2d\x85\x28\xa4\x36\xf1\xd4\x1f\x54\xe3\xbb\x35\xfb\xd0\xf8\x33\x35\xde\x46\x46\xb7\x46\xcf\xf7\xda\xb8\xfb\xf0\x86\x5a\x13\xaf\x1b\xef\x5a\xa3\xe5\x7f\x31\x47\x8c\x78\xc0\x40\x52\x14\xe3\xc8\xe8\x34\x81\xda\x52\x8b\xbd\x8d\xbb\xe9\xa4\x90\xd2\x38\x9e\xd9\xb8\xd8\x82\xbc\xfd\x29\x41\xa5\x94\xb3\xe4\x8e\xf3\x8f\x19\xba\x79\xa5\x5f\x2b\xb8\x19\xd0\xf6\x04\x9b\x07\x50\x57\x74\x9e\xa5\x04\xe3\x08\xd7\x7b\xe6\xec\xf5\xb2\x4a\x88\x01\x39\x3b\xc0\xb3\x79\x9a\xca\x64\x48\x3d\xd6\xbb\x7a\x91\x95\x92\x9a\x07\x39\xdc\xf6\xae\x99\xf4\x95\x15\x8c\x42\x14\xa6\x85\x59\xc1\x92\x51\x5b\x3a\xf4\x1a\x46\x51\x14\x6d\x17\x55\x3d\x3d\x5e\xca\xcf\x26\x44\x72\xc6\x69\xf0\x6e\x03\xb7\xc3\x0f\x27\x57\xef\xc0\xda\x73\xac\xde\x61\xdb\xc5\x14\x84\x88\xb1\x0f\x1b\xb8\x8d\x13\xf9\xc7\xa0\xda\x4f\xff\x57\xa2\x48\x42\x14\xc4\x9c\x35\x5c\x8a\xa8\x1a\x39\x50\x59\x4d\x57\xe6\xe1\x87\x07\x70\xc6\x4e\xc7\x59\xaf\xd5\x47\x8c\x68\x4b\x62\x5e\xf8\xcb\xd6\x27\x26\x8c\xf4\x0d\x0f\x96\x42\x19\xb9\xa7\x15\x2c\xdf\xee\x13\x39\x62\x8c\x74\xfc\xe2\x8f\x64\x83\x52\xaa\x12\x45\x18\x9a\xfc\xee\x5d\xf6\xf6\x82\x5d\x36\xb6\x27\x1e\x88\xc7\x67\x42\x1b\x4f\x1b\x68\xd1\x06\x4a\x93\xe3\x9c\xfc\x5b\xf0\x0b\xbd\x3d\xd6\xbb\x32\x0c\xcd\x0a\xee\x2e\x05\xaa\xa5\xd4\xd4\x49\x7d\xed\xdd\x77\x13\x4f\x7b\xa3\x9f\xd1\x1d\x2d\xf1\x3f\x37\x4b\xbf\x03\x00\x00\xff\xff\x01\x4c\xb8\x3a\xf8\x02\x00\x00")

func templatesMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainGotmpl,
		"templates/main.gotmpl",
	)
}

func templatesMainGotmpl() (*asset, error) {
	bytes, err := templatesMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.gotmpl", size: 760, mode: os.FileMode(420), modTime: time.Unix(1511537226, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMakefileGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\xcb\x6e\xdb\x30\x10\x3c\x7b\xbf\x62\x11\x08\x88\x58\x80\x54\xcf\x02\x8c\xd4\xb1\xd5\xd4\xa8\x5f\x90\x93\x22\x39\x19\xb4\x45\x31\x2c\x28\x52\x10\x69\xa7\x01\xfa\xf1\x05\xf5\x48\x04\x1f\xaa\x0b\xb9\x5a\x72\x66\xb9\x33\xcb\x76\x3f\xb6\x9b\x97\x14\x8f\x67\xa5\x0b\xf4\xc2\x79\x94\xc2\x88\x86\x7b\x81\x27\x2d\xb8\x01\xc8\x9e\x67\xeb\xdd\x2a\x3b\x6c\x66\xeb\x0c\xef\xa6\xc8\x6d\x43\x85\xf1\xca\xbf\x7f\xa4\xf6\xbb\x6c\xbe\x0f\x39\x96\x04\x08\x97\xb8\x37\x2e\xa5\x68\xd8\x6f\x67\x0d\xc0\xfd\x72\x33\xcb\x5f\x0e\x8b\x65\x8e\x18\x4e\x45\xf1\xfc\x29\x5f\x2c\x73\x92\x1c\x95\x19\xb2\x2d\xfc\x80\x2f\x95\xa1\x3d\x06\xed\xeb\xb1\x0d\xec\xb7\x4f\xf9\x3c\xdb\x63\xfb\x05\x18\xf7\x2a\xb4\xc6\x52\x99\x02\x19\x52\xc3\x2b\x81\xb7\x5f\x98\xb4\xb7\x04\x1e\xb6\xbb\x9f\x0f\xfd\xd1\xd1\x59\x69\x51\x2b\xe7\x91\x25\x8c\x31\xfc\x8b\xb2\x11\x35\xd2\x0b\x26\x17\x61\x0a\xdb\x24\x04\x1e\xb3\xf5\x6e\x35\x7b\xec\x68\xae\x48\xbc\xa8\x6a\xcd\xbd\x70\x09\x52\xff\x5e\x0b\x2c\xc7\xac\xbe\xaa\xf5\x2d\x81\xfb\xa7\xe5\x6a\x71\xf8\xbe\x9a\x05\xfa\xbb\x29\xd2\x0b\xac\x16\x7d\x88\x5d\x03\xe8\x33\x56\x5c\x19\x76\x11\x8d\x53\xd6\x4c\xa3\xf8\x57\x96\xef\x97\xdb\x0d\x41\xfa\x86\xd4\x01\x14\xa2\xe4\x67\xed\x7b\x61\x42\x5c\xbb\x14\xa5\x56\x85\x80\x89\xb4\x28\x85\x0f\x65\xd3\x33\x4a\xe5\x5f\xcf\x47\x76\xb2\x55\x22\xed\xd0\xb4\xf1\xf6\x54\x15\x83\x1e\xe3\xab\xa3\x7b\x6b\xee\xbc\x68\x2a\x65\x0a\x97\x74\x14\xd0\x2e\x29\x4c\xda\x15\x95\x71\x9e\x6b\x8d\x94\x3a\xdf\xa8\x9a\x76\xcd\x02\x68\x1d\x92\xc2\xe4\x5b\x53\x61\x14\x7f\xca\x4c\x92\x8f\x28\xc8\x4a\x00\x82\x2d\xd2\x96\xbe\xf5\x18\xbd\x60\x14\x77\x12\x11\x80\xc1\x71\x29\x1e\x95\x29\xb8\xe7\x4c\x5a\x80\xcf\x7d\x8a\x27\x6b\x4a\x25\xd9\x3b\xaf\x34\x46\xf1\x87\x44\xa4\x7f\x50\x6f\x58\x06\xd0\x57\xda\x51\x0d\x65\x03\xb4\x5d\x4c\xf1\xba\xaa\x21\x26\x63\x66\x8c\xe2\xde\x68\x04\x26\xf3\x87\xed\x21\xdb\xcc\xee\x57\xd9\x62\xfa\x35\xb8\xa7\x1b\x14\x6a\xff\xfb\xde\x90\xfc\x74\x01\x41\xaa\x8b\x52\x73\xe9\xf0\x26\x8a\x7b\x2f\x90\x1b\x00\xf1\x87\x57\xb5\x0e\x6d\x66\xd7\x00\x94\xf2\xba\xd6\xea\xc4\xbd\xb2\x06\xa3\x78\x3c\x84\x04\x69\x39\xfa\xd5\x0e\x1f\xf9\x17\x00\x00\xff\xff\xa8\xbf\x90\x6c\xc9\x03\x00\x00")

func templatesMakefileGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMakefileGotmpl,
		"templates/makefile.gotmpl",
	)
}

func templatesMakefileGotmpl() (*asset, error) {
	bytes, err := templatesMakefileGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/makefile.gotmpl", size: 969, mode: os.FileMode(420), modTime: time.Unix(1511532146, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMigrateGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\xc1\xaa\xc2\x30\x10\x45\xd7\x9d\xaf\x18\x0a\xef\xf1\x0a\x8f\xfc\x81\x3b\x41\x5c\xe8\x0f\x88\x8b\xa1\x9d\x86\x60\x93\xc6\x49\x54\x70\x98\x7f\x97\xd6\x85\xee\x2e\xdc\x73\x38\x99\xfa\x0b\x79\xc6\x48\x21\x01\x84\x98\x67\xa9\xf8\x07\x8d\xaa\x50\xf2\x8c\x6e\xcb\x23\xdd\xa6\xba\x5f\x9f\x62\xa6\x9a\x25\xa4\x3a\x62\xfb\x73\x6d\xd1\x99\x2d\x2c\xa7\xc1\x0c\x3a\x80\x3b\xc9\x62\x97\x07\x79\xcf\xb2\xe3\xc4\x42\x95\x87\xc3\x3c\xf0\x54\x70\x83\xa7\x73\x48\x95\x65\xa4\x9e\xd5\xf4\x2b\xf3\x26\xcc\x7e\xe3\x3a\x9c\x2a\x66\x2a\x3d\x4d\xe1\xc9\xe8\x8e\x14\x19\xcd\xd4\xfe\x3f\xb5\xc6\xa0\x7b\x05\x00\x00\xff\xff\x16\xc5\x72\xa3\xbe\x00\x00\x00")

func templatesMigrateGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMigrateGotmpl,
		"templates/migrate.gotmpl",
	)
}

func templatesMigrateGotmpl() (*asset, error) {
	bytes, err := templatesMigrateGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/migrate.gotmpl", size: 190, mode: os.FileMode(420), modTime: time.Unix(1511537211, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGenerateGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x96\xcd\x6e\xdc\x36\x10\xc7\xcf\xe2\x53\x4c\x74\x08\x28\x23\x10\x2f\x45\x0f\x29\x7c\xb0\xe3\xb6\x97\x36\x0d\xe2\xb6\x97\xa2\x08\x28\x69\x56\xcb\xac\x48\x2e\xc8\x91\x3f\x2a\xe8\xdd\x0b\x52\xda\xf5\xaa\xe1\xa6\x9b\x85\x61\x1f\x0c\x99\x9c\x99\xff\x70\x7e\xe3\xc1\x08\x01\x0e\x57\x25\xac\x89\xb6\xfe\xad\x10\xad\xa2\x75\x5f\x95\xb5\xd5\x62\xf3\x28\xef\xf5\xa3\x32\x44\x6b\x54\x46\x38\xbc\xc3\xee\x53\x6b\x9d\x16\x55\x67\x2b\xa1\xa5\x27\x74\xa2\x45\x83\x4e\x12\x7e\xd2\xb6\xc1\xae\x6c\x2d\xdb\xca\x7a\x23\x5b\x84\x61\x98\xbf\xde\x4b\x8d\xe3\xc8\x94\xde\x5a\x47\xc0\x59\x96\x0f\x43\x23\x49\x56\xd2\xe3\x87\x4d\x3b\x8e\x39\xcb\xf2\x03\xe1\xcf\xca\xfc\xb3\xee\x45\x90\x0a\x37\xe8\x9c\x75\x3e\x67\xd9\x30\x90\xd2\x93\xc7\xd2\x21\xa6\x36\xfd\xce\x59\xc1\x86\x21\xe6\x72\x4b\xae\xaf\x69\x1c\xd9\xaa\x37\x35\x70\x0d\x17\x8b\x8b\x29\xab\x02\xae\x71\x65\x1d\xbe\x73\x28\x09\xb9\xaf\xed\x16\xe1\x22\x48\x97\xb7\xe1\xbb\x80\x28\x0f\x03\x03\x21\xe0\xc6\x82\xb7\x1a\x69\xad\x4c\x0b\x55\x74\x84\x3a\x7a\x32\x00\x87\xd4\x3b\x03\x46\x75\xec\x34\xcd\x3f\xb6\xcd\x0b\x6a\x5e\xad\x08\xdd\x73\x4b\x0a\x01\x57\x4d\x93\xd0\x03\x65\x3c\x3a\x02\x09\x06\xef\x21\x6d\x40\x16\x76\x6d\x00\xd2\x34\x73\x64\x1f\x82\x76\xd2\xd3\x1c\x02\x9b\x9d\xfb\x6f\xd5\x67\xdc\xbb\x5b\x03\xbe\xaf\x6b\xf4\xbe\x9c\x1e\x9e\xce\x83\xeb\x94\x78\x01\x3c\x71\xfa\x66\x2a\x42\x01\x03\xcb\xee\xa4\x0b\x7f\x4d\x27\x2c\x53\x2b\x78\xb5\xcb\xb5\xbc\xb9\x2e\xdf\xe3\xfd\x47\xac\xad\x6b\xb8\x8e\xe6\xd9\x5c\x15\x3d\xc7\xf0\xc1\x82\xe7\x5b\xa7\xb4\x74\x8f\xb0\xc1\x47\xf0\x6b\xdb\x77\x0d\x54\x08\x55\x27\xcd\x26\x2f\x58\x36\x02\xcb\xe8\x01\xde\x5e\xc2\x61\xec\x6b\x6c\x95\xe1\x45\x14\x0d\x29\x5c\x02\x3d\x94\x73\x7f\xbe\xd6\x45\xf9\x63\x10\xf8\x21\x5e\xbd\xba\x0c\x1c\x02\xb5\xf0\x93\xd1\x43\xf9\xd1\x76\x5d\x25\xeb\x0d\x2f\xe6\xb3\x45\x62\x0c\x20\x1b\x83\x66\xf9\xce\x6a\xad\x28\xa8\x2c\x0d\x22\xd2\xa9\x4b\x52\xd0\xfa\x78\x03\xf2\x4c\xa2\x21\xd9\x2f\xc0\x1d\x43\x74\x34\x0b\xfe\x75\x7c\x49\x7a\xcf\x03\xcf\x58\x3a\x17\xe0\xad\xbc\x7b\x29\x7c\x37\xd8\x61\x1a\xdf\x74\x93\x84\xb7\x72\x56\x3f\x23\xbc\xa3\x39\xf0\x79\xd4\x7c\x49\xe9\xc4\x42\x4e\x91\xcf\x2f\xe5\xbe\x8e\x93\xd9\xbe\x92\x4b\x8b\x58\xc8\x9f\x91\x12\x2f\xf0\xe1\x1c\x64\xd7\x9d\x51\x47\xe5\x09\xec\x2a\xe9\xf8\x54\xda\xa9\xb2\x47\xc4\x43\xf3\xff\xf5\x77\xaa\xfd\x97\xc3\x8b\xb3\x2c\x3b\x28\x6e\x96\x98\xa1\x1e\x92\x81\x58\x56\x9c\x0c\xe3\x27\x65\x1a\xfe\x3a\x15\xfb\x4c\x3a\xa9\x50\xff\xd7\xfb\xc7\x7d\xbe\x42\x71\x82\xf8\xed\x08\xd3\x2e\x09\x78\x1f\xac\x27\xae\x1a\xe8\x95\xa1\xef\xbf\x3b\x69\x64\xf1\x34\xa7\x94\xe2\x92\xee\xe9\xc0\x7e\x91\x9e\x92\xc0\xde\x80\x6a\xce\x64\xb6\xb5\x9e\xce\x60\xb4\x43\x14\x0b\xf6\xab\x6a\xdd\xb1\x69\x3f\xb0\xec\xf0\x5d\x57\x3d\xd9\xd9\x7c\xff\x92\x43\x87\x61\x2c\xf6\xcb\x50\x72\x36\xfd\x2e\xab\x2e\x2e\xa5\xbc\x00\x4f\x2e\x2c\x39\xc3\xd3\x62\x93\xa7\xda\x29\xff\x6f\xc4\x05\x9f\xf4\xc2\xf5\xa7\xec\x54\xdc\xb6\xee\xe0\x22\xee\xa6\xe5\x7c\xa2\xac\x89\xff\xa6\x42\x3c\x1d\x80\xeb\x3b\xf4\xb0\x46\x87\x6c\xfc\x37\x00\x00\xff\xff\x55\xd6\x51\xc9\x95\x0b\x00\x00")

func templatesModelGenerateGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGenerateGotmpl,
		"templates/model-generate.gotmpl",
	)
}

func templatesModelGenerateGotmpl() (*asset, error) {
	bytes, err := templatesModelGenerateGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-generate.gotmpl", size: 2965, mode: os.FileMode(420), modTime: time.Unix(1511546691, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGormGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x6d\x6f\xe2\x46\x10\xfe\x6c\xff\x8a\x91\x95\x4b\xed\x2b\x5a\xd2\xaf\x27\xd1\x0a\x82\x73\x41\xe2\xe0\x1a\xa8\x4e\x55\x14\x55\x7e\x19\x93\xed\xd9\x6b\xb3\x5e\xd3\x72\x2b\xfe\x7b\xb5\x2f\xbc\x18\x28\xc7\xc5\x52\x84\x3d\x33\xfb\xcc\x3c\xcf\xec\xee\xa4\x8a\x92\xaf\xd1\x02\x41\x4a\xf2\xf9\xeb\x62\x12\x15\xb8\xd9\xb8\x6e\xf7\xed\x8f\xdb\xed\xc2\xfc\x71\x34\x83\x87\xd1\x38\x84\xd1\x0c\xfa\x7f\xcc\xa7\xf0\x31\x9c\x84\x4f\xfd\x79\x38\x84\x78\x0d\x8b\x92\x17\x0b\x64\x1d\x18\x4e\x27\x3f\xcd\x21\x1c\x8e\xe6\x30\x9a\x83\x59\x6b\x9f\xfe\xe4\x4f\xb8\x7f\xec\x4f\x3e\x86\x33\x15\x16\xc2\x63\xf8\x14\xc2\x97\xd1\x78\x0c\x83\x10\xc6\xd3\xd9\x1c\x0e\x1f\xbd\xf6\xed\x35\xbb\x52\xd2\x0c\x18\x82\xbf\x55\x21\x00\xcf\x96\xe9\x6d\x36\x2e\x2d\xaa\x92\x0b\xf0\x16\x54\xbc\x36\x31\x49\xca\xa2\xfb\xa9\x7c\x8d\x0a\x4c\x07\x51\x5d\x63\xd1\xdd\xc6\xba\x52\x22\x4b\xcf\xaf\xf8\x9b\xb2\x6f\xaf\x8d\x0e\xf5\x76\xfe\xac\x10\x9e\x4a\xcf\x23\xb6\x40\x20\x33\xc1\x9b\x44\xd4\xaa\x07\x4e\xd6\xb0\x04\x7c\x01\xef\xa5\xb4\x76\xd3\x9e\x00\x66\xd1\x0a\xfd\x34\x86\xf7\x0a\x8b\x0c\x07\x01\x20\xe7\x25\x07\xe9\x3a\x0e\x47\xd1\x70\x06\x69\x4c\x74\x94\x08\x48\xa8\x7c\xae\x73\x19\x72\x88\x39\x8a\x2b\x40\x6d\x5c\x1b\x56\xac\x2b\xbd\x83\x7e\x6f\x90\xaf\x07\x0d\xcd\x53\xe4\x06\x18\x6a\x9d\x45\x83\x94\x3c\x45\x0e\xcf\x2f\xb5\xe0\x94\x2d\x5c\xc7\xf9\xe7\x15\x39\x1a\x43\x93\x08\x15\xe2\x54\x1c\x33\xfa\x2f\xec\x42\x9c\x55\x94\x37\x08\x94\x09\xe4\x59\x94\xa0\xdc\xb8\x8e\xa3\xfe\x72\x5a\x50\xa1\xec\x0a\x38\xcb\x6a\xb4\x1f\x7b\x96\xcb\x58\xd3\x3c\xad\x29\x80\x58\x7d\x6a\x47\x9b\xf0\xf6\x6d\xcb\x19\x3e\xf4\x20\x8d\x5d\xc7\xc9\x4a\x0e\x7f\x75\xc0\x14\xfc\xa1\x07\xa6\x5b\xcb\x98\x18\x8b\x2e\x5d\xc5\xf7\x80\xa3\x20\x5f\x94\xd1\xd7\x2e\x62\x08\xd9\xa5\x44\xb3\x09\x2c\x05\x0b\x6a\x64\x39\x04\x35\x96\x23\xd0\xa9\x32\xfa\xda\xb5\x05\xd8\x3b\xc7\x4a\x0d\x7f\x19\x13\x2d\x4b\x40\xa6\x5a\x11\x65\x30\xda\x04\xfb\x1e\x72\xbc\x56\xa5\xfb\xb2\x61\xa2\x2d\x90\x4f\x99\xe8\x98\x7d\x11\xe8\x02\x57\x11\x87\xc4\xb6\x81\x63\xad\x68\x2c\x63\xd2\xd2\x37\x20\x9f\xca\x14\x73\xff\xf6\x68\xcf\xc9\x4d\x40\x4c\x8a\xdb\x44\xd5\x47\x33\xe0\x58\x93\x27\x4c\x4a\x9e\x4e\x4a\xf1\x50\x36\x2c\xf5\x4d\x1a\x27\x81\x1e\xdc\xed\x69\x2b\x22\x49\x47\xc7\x9f\xec\xee\x0b\x8c\x1e\x28\xaf\x8f\x19\x1d\x1f\x85\x16\x3d\xbb\x07\x4e\x4b\xbf\x44\xd7\x64\xe1\x46\xf5\x8b\xac\x4c\x03\x19\xcd\xdb\xcc\x38\x8a\x1f\xe7\xa6\x6d\x53\x86\x3f\x42\x6f\xbb\x61\xa0\x07\xbf\x98\xf4\xda\x6d\x69\x69\xc4\x7e\x9e\x2b\x52\x86\x49\x8e\x4c\xf3\x82\x5f\xe1\x6e\xc7\x40\x55\x7c\xcb\x51\x3c\xdf\xbd\xe8\xd5\x6d\x2e\x8c\xe6\xd6\x7a\x3d\x0b\x93\xf3\x90\xc5\xf3\xcb\x15\x5d\x3a\x09\xd2\x6d\xda\xf3\x39\x69\x13\x4b\x7d\x55\xf8\xee\x2a\x6b\xe9\x7f\x7d\xcd\xe6\xf0\xed\x2e\xa4\xe0\x7f\x02\x8f\x15\xd7\xbf\xfb\xa4\xcb\xf8\xca\x74\xf6\x6c\xef\x2f\xbd\xef\x25\xb4\x91\x3d\x30\x2f\xa7\x29\xa5\xbc\x59\x1e\xad\x56\x92\x9d\x81\x54\xb1\x76\x52\x3d\x50\xcc\x53\x35\xa8\x9c\x56\xc9\x27\x48\xaa\x64\x7d\x21\x4a\x99\x44\x79\x0e\x37\xe4\x11\xf3\x0a\x79\x4d\xe6\x54\x60\x4e\xbf\x6d\xb1\x4c\xb0\x5f\xc1\x6e\x16\xdf\x9c\x1d\xc6\xf6\x8d\xd8\x49\xfb\x99\x63\x4a\x93\x48\x60\x07\xcc\xac\x90\xd2\xe0\xcd\xd7\x95\x4e\x7e\xbe\x28\xb3\x7d\xf7\x57\x78\x0f\xa2\xaa\x42\x96\xfa\x5b\x4b\xe7\x70\x74\x9d\x19\x4c\x67\x27\x93\xb3\x31\xd1\x59\x21\xc8\xac\xe2\x94\x89\xcc\xf7\xde\xad\xe0\xdd\x0a\x7e\xf3\x3a\xe0\x49\x49\xee\xcb\xbc\x29\x98\x29\xc2\xeb\x40\x15\x74\xf6\x68\xfa\x75\x13\x1c\x1c\x2c\xd5\x22\xdd\xa3\xef\x8b\xac\x07\xc4\x60\x7d\xa5\xcc\x51\x9d\x40\x5c\x96\xf9\x65\x7d\x76\xb3\xc9\x1b\x86\xb3\x7b\x4f\x99\x68\x06\x6a\xad\xe1\x69\xfc\x3d\xf0\xfa\xd6\xab\x4b\x75\x76\x33\xec\x50\x55\x6d\x39\xd5\x00\x3c\xf8\x19\x76\x63\xed\x88\xb7\xb3\xfd\x77\xca\xfe\xfe\x17\x00\x00\xff\xff\xc5\x4a\x2e\xf8\xae\x0a\x00\x00")

func templatesModelGormGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGormGotmpl,
		"templates/model-gorm.gotmpl",
	)
}

func templatesModelGormGotmpl() (*asset, error) {
	bytes, err := templatesModelGormGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model-gorm.gotmpl", size: 2734, mode: os.FileMode(420), modTime: time.Unix(1511542084, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x51\xcd\x4e\xf3\x40\x0c\xbc\xf7\x29\x46\xb9\x37\xb9\x7f\xb7\x7e\xa2\x48\x3d\x80\x10\xf0\x02\x56\xd6\xa4\x2b\x6d\x76\xc3\x7a\x11\x05\x2b\xef\x8e\x92\x6e\xaa\x2d\x3f\x12\xaa\xb8\xd9\x1e\x7b\xec\x19\xab\x22\x71\x3f\x38\x4a\x8c\x6a\xcf\x64\x38\x56\xa8\x31\x8e\xab\x95\x2a\xec\x13\xea\x9d\x6f\xdd\x8b\xe1\x9b\x60\xd8\x4d\x75\x40\x75\x3d\x21\xfc\x8c\xfa\x96\x7a\x46\xb5\x19\xec\x3d\xcb\x10\xbc\x70\x85\x71\x6c\x1a\x6c\xee\x76\x4b\x05\x56\x90\xf6\x8c\xb8\xe4\x29\x80\xfc\xd4\x81\x96\x9c\xab\x33\x21\x3b\xe1\x23\xfd\x69\x41\xbd\x93\xed\x61\x08\x31\xb1\xc1\x3a\x43\x40\xd3\x40\x15\x03\x49\x4b\xce\xbe\x73\xbe\x61\x1c\x71\x26\xc5\x84\x56\x52\xb4\xbe\xcb\x6a\x8e\xb3\x99\xd8\x87\x34\x91\xff\x27\xe1\xc7\xb7\x61\x5e\xdb\x34\x90\x57\xea\x3a\x8e\xff\xfa\x59\xa9\xea\x89\xb9\x18\x5e\xae\x2c\xda\x8d\x95\x36\xda\xde\x7a\x4a\x21\x96\x63\x73\x7c\x55\xa2\xd7\x96\x9d\xf9\x44\xe8\x4d\xa9\x3a\xa7\x3f\x85\x85\x40\x69\xf7\xdc\x53\xf1\xab\x48\xbe\x63\xd4\xdb\x43\x8a\xf4\x30\x83\x72\xf6\xae\xd2\xcd\x23\xd9\x37\xdf\xbd\xd4\xdc\x8b\x8d\xfd\x53\x53\xbf\xda\xf6\x5b\x03\x55\x73\xcf\x47\x00\x00\x00\xff\xff\x46\xdc\x0d\xe4\x10\x03\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 784, mode: os.FileMode(420), modTime: time.Unix(1511522185, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x73\xdb\xb6\x93\x7f\x6d\x7d\x8a\xfd\xeb\xda\x0c\x99\x93\xa9\xdc\xff\x3a\x7d\xa1\xab\x3b\xd3\x38\x4e\xe3\x6b\x9a\xe4\xe2\x26\x7d\x91\xc9\xb4\x30\x09\x49\x68\x48\x80\x06\x20\xdb\x3a\x0d\xbf\xfb\xcd\x02\xe0\x03\x28\x88\x96\x1c\xf7\xda\xeb\x35\x6f\x22\xe2\x61\xb1\xfb\xc3\x62\x9f\x00\x6f\x36\x90\xd1\x39\xe3\x14\xc6\x2a\x67\x29\x2d\x89\x24\xc5\x35\xc9\x59\x46\xb4\x90\xe3\xaa\x1a\x6d\x36\xc0\xe6\x20\x24\x24\x3f\x32\x7e\xae\x69\xa1\x20\xf9\x91\xdc\xda\x5f\xb6\x3f\x25\x05\xcd\xd9\x7f\x53\x48\x5e\x91\x82\x42\x55\x5d\xe0\xc7\xec\x04\x18\xd7\x5f\x7f\x15\xe5\x94\x47\x96\x0a\xe1\x19\x44\x5c\x68\x48\xce\xd5\x77\x52\x92\x75\xec\x3e\x5f\x10\xf5\x8c\xa9\x54\xb2\x82\x71\x5c\x38\x6e\x86\x9d\x73\x4d\xe5\x9c\xa4\xb4\x6d\xba\xd0\x92\x92\x22\xc6\x9f\xaf\x56\x79\x4e\x2e\x73\x5c\xf3\xf1\x66\x03\x94\x67\x50\x55\x9b\x0d\x24\xef\x49\xbe\xa2\x67\xb7\xa5\xa4\x4a\x31\xc1\xa1\xaa\xe2\x78\xd4\x8c\x70\x42\xb5\x12\x55\xd5\x88\xcd\x81\x4a\x89\x5c\x3b\xf1\x69\xd3\x8d\xdc\x27\x6f\x88\x5e\x42\x55\x4d\x60\xb3\x81\x52\x32\xae\xe7\x30\xfe\xf2\x6a\x0c\xc9\x4b\x91\x12\x6d\xd7\x30\x9d\x41\x34\x4c\x4f\x77\xbd\xf8\x3f\xcc\x72\xff\x38\x01\xce\x72\xd8\x8c\x00\x24\xd5\x2b\xc9\xb1\x75\x54\x05\x58\xed\x40\x1e\x62\xd5\x75\x3f\x10\xab\x0d\xbd\xc3\x19\x7d\xc7\xd9\xd5\x8a\x0e\xf1\xda\x19\x71\x18\xbb\x7f\xb4\x06\x1d\x88\xc4\x19\x5f\x15\x3b\x20\xc0\xae\xff\x53\xb2\x5b\xfd\x75\x12\x1d\x02\x44\xfb\xab\xb6\x33\x0e\x04\x26\xf8\x1b\xe4\x58\xb3\x6b\x3a\xb6\x43\xdc\x91\x7c\x49\xf9\x42\x2f\x77\x1e\x49\xdb\xed\x2c\x4a\x0d\x60\x07\xcb\xcd\x86\xe6\x8a\x56\xd5\x78\xbc\xd9\x50\x9e\xed\x09\xae\x0f\x47\xd4\xc5\xa3\x0f\x87\x59\x6d\x6b\x4a\xdc\x45\xd0\xf6\x9e\xae\x94\x16\xc5\x73\x21\x0b\xa2\x35\x95\x50\x55\xc9\x85\x96\x8c\x2f\xa2\x76\xb0\x3d\x6d\xad\xd0\x77\x62\x6b\x44\xaa\xc1\x22\xb7\x83\x60\xd5\xdd\x7f\x2d\xb0\x5a\xa1\x0f\x02\xeb\x8d\xa1\xcb\xc3\x50\xb9\xce\xbf\x0e\x50\xbf\x6e\x36\xad\xc4\xbf\x1e\xa6\x55\x8c\xb3\x62\x55\xec\x3c\x80\xd8\x69\xb9\xa1\x57\x90\x5c\xdc\x90\xc5\x82\xca\x9f\xd6\x25\x85\x31\xe3\x9a\x2e\xa8\xc4\xf3\x7c\xce\x75\xc3\xce\x43\xc3\x3a\xb4\x2e\xb3\xeb\xe6\x0a\xe1\x9b\xe7\x82\xb4\x6c\x7c\xfd\x55\x14\xc2\x78\x78\x57\xe2\xfa\x84\x5a\x4c\xcc\xd7\xd9\x6d\x9a\xaf\x14\xbb\xa6\x4d\xf3\xa1\xc7\x76\x00\x60\xdb\xf9\xff\x0e\xe0\x1a\x93\x1e\xc0\x75\xf3\x61\x00\xaf\x72\xcd\xca\x9c\xbe\x9e\xef\xc0\xb8\xe9\x7f\x38\xe0\x0c\x12\x9f\x03\x40\x87\xe7\x83\x84\x45\xa7\x3c\x1c\x65\x3c\xa4\x66\x7c\x5e\x10\x72\x08\x2c\x07\x7b\x86\x96\xf7\x7f\xb9\x1e\xd7\xb8\xec\x0d\x65\xfd\x7f\x13\xa7\x94\x52\x94\x54\xea\x75\x2f\x25\xea\x04\x78\xe7\xaa\x89\x60\x2c\xb4\x9a\x16\x65\x4e\xf4\xae\x20\x27\xb1\xa3\xfc\x28\x31\x24\x5f\x68\x33\x6d\xbf\xd1\x58\xb3\x83\x28\xf3\x78\xb3\x69\xf6\xa8\xaa\xc6\xb6\xc1\x9d\x5b\x3b\xde\xb4\x86\xd0\x6d\x20\x9c\xc0\xdc\x8c\x54\xc3\x48\x05\xf8\x36\xdb\xdf\x17\x3c\x94\x45\x76\x05\x3f\xee\x85\x85\x35\xda\x97\x8c\x67\x65\x0d\x95\x99\x3f\xde\x19\x41\xb6\x6b\xe0\x2c\x6b\x95\x46\xd7\x44\xa2\x0e\x5c\x13\xc9\x31\x97\x49\x4e\x97\x2c\xcf\x02\x91\xec\x5b\x13\xc9\x7e\x2f\x8c\x5d\xab\xaa\xd1\x5c\x48\x68\x73\x5c\x3b\xeb\x05\x51\xef\x9b\x0d\x54\x75\xeb\xa9\xe0\xd7\x54\xe2\x0e\xb9\x86\xd0\xd6\x21\xf1\x73\x9e\xd1\xdb\xf7\xc4\x7d\x3a\x4b\xf9\x8b\xaf\xab\x77\xf2\xf9\x1e\x77\x5f\x12\xbe\xa0\x7b\x0d\x3f\x35\x3b\xd6\x17\xa4\xde\x24\x44\xdd\xf4\xd6\xa2\xec\xa4\x32\x3b\x01\x75\x43\x16\xc9\x45\x99\x33\xfd\x74\x6d\x45\x8b\xf6\x62\x78\xdb\x7e\xd4\xb8\xe5\x39\x4d\x11\x4a\x4b\x0d\xc3\x1a\xcb\x4d\x48\x6d\xea\x2d\xb5\x93\xc1\x31\x7e\x6c\x61\x6c\xe4\x40\x0d\xec\xef\x4a\xd3\x79\x27\xab\x93\xfa\x74\x75\x10\x69\xc8\x58\x6f\x7a\xb7\xb8\x28\x83\x3b\xa7\x9d\x33\xd3\x3d\x35\x42\xaa\xe4\x9c\x9b\x73\x80\xda\x16\xb5\xab\xed\x4c\xfb\x6c\xb7\x67\x77\xc7\xed\xb4\x46\x6b\xc7\xfb\xe9\x10\xb2\xe8\xe1\xd7\xc2\xb6\xad\xbb\xf7\x80\xcf\x59\x8e\xe4\x0d\x91\x8a\xfe\x75\x51\xdb\x1f\x19\xa7\x53\x77\xc3\x60\xe9\x39\xd3\xe6\x96\xb2\x1f\xfd\x93\xb1\xcb\x0d\xf9\xe7\x63\x1f\xbb\x77\x02\xa4\x2c\x29\xcf\xf6\xda\xa8\xb7\xfb\x62\xd5\xb5\xd1\x25\x49\x3f\x11\x6b\xb0\x92\x37\xee\x37\x8a\x34\x9d\xc2\x4f\x4b\xa6\x60\xce\x72\x0a\x37\x44\xc1\x82\x72\x2a\x89\xa6\x19\x5c\xae\x41\x2f\xa9\xb1\x39\x0b\x2a\x41\x0b\x91\x27\x38\xfe\x2c\x63\x9a\xf1\x05\xe8\x66\x5e\xc1\x16\x4b\x0d\xa5\x14\xd7\x14\xe6\x2b\x6d\x48\x2d\x29\x87\xb5\x58\x81\xa4\xc7\x72\xc5\x3d\x4a\xf5\x12\x90\x8a\xa2\x20\x3c\x1b\x8d\x58\x51\x0a\xa9\x21\x1a\x01\x8c\x39\xd5\xd3\xa5\xd6\xe5\x18\xf1\x1e\x2f\x98\x5e\xae\x2e\x93\x54\x14\xd3\x05\xe3\xc7\x0b\xc1\x59\x8a\xbf\xc6\xfd\x4e\x71\x2c\x4a\xca\x49\xc9\xa6\x56\x51\x07\x06\xd4\x8e\x7b\x60\x88\x5c\x71\xcd\x8a\x3d\x46\x4c\x0b\x96\x65\x39\xbd\x21\x72\x68\x30\x4a\xde\xef\x96\x42\xa5\xa2\xa4\xa9\xc8\xb5\x24\x7c\x4a\x84\x3c\x46\x09\x1d\x48\x53\x52\x32\x83\x80\xd2\x72\x5e\xe8\x9d\x84\x4d\xaf\x19\x38\x9d\xc2\x33\x3a\x27\xab\x5c\x9f\x1b\x34\x95\xd5\x3e\xeb\xa7\x12\xbf\xcb\xba\x3f\xef\xa0\xd6\xda\xda\x28\xfe\x74\x0a\x01\x42\x5f\x7c\xa2\xeb\x09\x7c\x71\x8d\xea\x86\x47\x2a\xf1\x28\x62\x2f\x9e\xb5\x1e\x71\x37\xbc\xb7\x44\x6c\xb4\xef\xe9\x4a\x31\x4e\x95\x7a\x29\x16\x2c\xc5\x79\x44\xa5\xc4\xab\x7c\x02\xbd\xa5\xe9\x4a\x53\x65\x94\x28\x15\x92\x42\x8e\x83\x41\xcc\x4d\x8b\xa4\x78\x1c\x33\x24\x26\xc5\x4a\x53\xa4\x5f\x0a\xc6\x75\x32\x9a\xaf\x78\xba\xc7\x0a\xd1\x1c\x70\x64\x94\xea\x5b\x78\xbc\x60\x1c\x5d\x8e\xa6\xb7\xba\x09\xd0\x25\x31\x25\xd3\x09\x94\xf6\xe7\xe3\x20\x19\x3b\xae\x11\x30\x86\xc7\xa4\x64\xc9\x5b\xaa\x4a\xc1\x15\x8d\x01\x29\xbf\x20\x3c\xcb\xa9\x7c\x8e\x8c\x6d\x46\x47\xce\xb6\x1a\x3e\xb7\x96\x8f\x71\xc4\x51\x9f\x89\xe9\xb4\x3d\x40\x8e\x9d\xb9\x14\x05\x48\x7a\xb5\xa2\x4a\x8f\x8e\x8e\x5c\xeb\xec\x04\x1e\x0d\xf1\x59\x8d\x8e\x8e\x9c\xb7\xb0\x33\x12\x74\xf0\x6f\x2d\x19\x64\x26\x1e\x1d\x1d\xf5\x1d\xc2\x91\x99\xf3\xfa\xf2\x37\x9c\x46\xa5\x4c\xa2\xc7\xce\x31\x9c\x8a\xa2\x14\x8a\x69\x7a\x86\xdf\x38\xf7\xa8\x94\xe2\x32\xa7\x05\x0e\x45\x24\xde\xd8\x4f\x43\xe4\xe8\x27\xa6\x73\x3a\x03\x18\xbf\xe3\xa5\x14\x29\x55\xca\xa4\x1e\x67\x5c\x33\xbd\x4e\xc6\x13\x33\xe8\x42\x13\xbd\x52\x33\x60\x5c\x47\x76\xd9\xe4\x54\x64\x34\x8a\x63\xdb\xff\x8c\x6a\xc2\xf2\x19\xb8\x3e\xb3\x72\x64\xfb\x50\xba\xa3\x54\xdf\x26\x3f\x4b\xa6\xa9\x4c\x5e\x50\x92\x51\x19\xc5\xc9\x05\xd5\xd1\xd8\x20\xcc\xf5\x31\xba\x1f\x0c\xce\x49\x59\xe6\xcc\xfa\xa8\xa9\xe3\xfa\x5f\x7f\x53\x82\x8f\xe3\x9a\xcc\x7f\x5e\xbc\x7e\x15\xb9\xae\xc4\xf2\x35\x01\xf7\x6d\x06\xd9\xad\x1c\xd9\x95\x5b\x2d\xc7\x0e\x55\x1a\x97\x8c\x98\xee\x52\x29\x97\xe5\x20\x25\x75\xc3\x74\xba\x04\x9c\x66\xa4\x35\xa8\xa7\x44\x51\x40\xb3\xe8\xd6\x7e\x25\x9c\x08\xb3\x9a\xc1\xef\x2e\x85\xd4\x3f\x33\xbd\xb4\x03\xa2\x66\x3e\xd2\xcc\xec\xf1\x9f\x79\xd2\x34\x23\x26\x76\xb1\xa7\x22\x5b\xc7\x56\x80\x6a\x64\x7d\xc3\x80\xfe\x40\x2a\xb8\x26\x8c\x2b\x20\x79\x6e\x0e\xe2\xa5\x58\xf1\xac\xd1\x49\x21\x4d\xe3\x66\x03\xcb\x55\x41\xb8\x77\xa2\xd1\x6f\x1a\xb0\x71\x0d\xbd\x2e\x59\x4a\xf2\xdc\xb8\x1b\x45\x81\x48\x0a\xe2\x12\x49\xd3\xcc\xaa\x36\xb1\x92\x3b\xd5\x1c\x4d\xa7\x38\xcd\x19\xca\x99\x59\x8f\x6a\x2a\x95\x71\x6e\x6e\x89\x91\xc6\xc0\x62\x88\x7d\xa5\xe5\x2a\xd5\xb0\x19\x79\x76\xb2\x3d\x66\x8f\xdd\x56\x3d\xa3\x98\x3a\x97\x2e\x7c\xc1\x25\xb6\x5a\xbc\x32\x20\x72\xc9\x24\x75\x56\xb4\xfe\x9a\x81\x96\x2b\xda\x1f\xeb\x6a\x28\x76\xa8\xfb\x98\xd5\x41\x74\xbf\xd2\x02\x55\xf5\x0d\x78\x97\x01\x6d\xc7\x16\x61\x5b\xfd\x72\x84\xed\x47\x80\x70\x33\xea\xdb\x1e\xe1\xa6\x63\x8b\x70\x53\x0b\x71\xb4\xdd\x37\xbc\x9e\xcf\xec\x45\x5a\x77\x40\x40\x5e\x5b\x20\x6e\x24\x06\xfb\xed\xe6\x76\xba\x03\x12\x79\x53\x19\xf7\xa7\x76\xba\xfb\x53\x5d\xb1\xd5\x4e\x74\x1f\x33\x17\x09\xd5\x3d\x01\x4e\x9b\x8b\x32\xcb\xa8\xf9\x6c\xf8\xac\x3b\x03\x6c\x76\xe7\x31\xee\xcd\x6b\x3b\xfb\xf3\x7a\x77\x73\x00\xb6\x21\xac\x36\x9d\x70\x7a\x04\x70\xee\x84\xe9\xb4\xf6\x27\x04\xf2\xbc\x11\x40\xdb\x0a\xb6\xd9\xd2\x09\x0c\xee\xd3\x7b\x41\x94\x0b\x28\x2c\x25\xf7\x31\xdb\x2e\xf5\xb4\xc3\xba\xb1\xc5\xe3\x69\x93\x2b\x9a\x4a\xd4\x45\xba\xa4\x05\x71\x51\x49\x7b\x60\xcf\x9f\xb9\x60\xe2\xc1\xae\xd8\x9e\xb3\x9c\x9a\x23\x7e\xc8\xad\x9b\x4b\x53\xba\x25\x83\x70\xa0\xd2\xe7\xd4\x8a\x95\x9c\xab\xa7\x44\x51\x24\xe1\xaf\xd2\x1b\x54\x33\x32\xb0\x78\x9b\x94\x80\x2d\x8a\x55\xa3\x51\x20\x3e\x18\x30\x7b\xcf\xa5\x28\x4e\xf5\x2d\x2c\xa8\xb6\xf1\x54\xe9\x59\x43\x63\x6e\xb1\x79\xc1\xb8\x31\xf0\xf4\xb6\x0e\xa3\xee\x26\x1a\x08\x60\x86\x02\x25\xf4\x6b\x76\xf5\x09\xfc\x82\x0e\x12\x1d\xd3\xf7\xe8\x9d\x6d\x2b\xfa\x5e\x17\x1f\xb9\xf8\x24\x1a\x22\x17\x77\x2b\x61\x26\xb2\x6c\xa3\x19\xb8\x14\x7a\x09\x18\xde\x28\xb3\x3d\x75\x06\xa0\x80\xd4\x71\xd3\x04\x98\x06\xa2\xd4\xaa\x30\x81\x26\xd1\x98\x9d\x94\x39\xbd\xc5\x3c\x87\x2f\x14\x30\xfc\x2a\x28\xd7\x40\xc0\x95\xa0\x70\x17\x23\x1b\x82\x27\x6f\xe9\x82\x29\x2d\xd7\xb1\x4d\x94\x31\x64\xb1\xca\x87\xac\xa0\x33\x54\x86\x00\x98\x50\x58\xe1\x62\x37\x2c\xcf\x61\xa5\x28\x62\x4f\x4c\x06\x55\x50\xbd\x14\x19\xa0\x33\x54\x16\x74\x93\x62\xbf\xa5\x29\x65\xd7\x54\xd6\x6a\x36\x88\x02\xf4\x82\xb8\xde\x86\x58\xe6\x30\xb1\xbf\x26\x12\xdd\x3e\x7c\xf8\x68\xda\xda\xe2\x4d\xa3\x49\xae\x86\x60\x0a\x4f\x56\xc8\x57\xf4\xc6\xda\x04\xd5\x29\xf0\x8e\xda\xa9\x2f\x88\xfa\xaf\x15\x95\xeb\x86\xc4\x95\x99\xed\x72\x25\x9b\xa4\x2a\xe4\xaa\xf6\xe5\xc9\xbb\xb7\x2f\x13\x33\x25\x8a\x77\x51\xc4\x15\x1b\x82\x6d\xf9\xb5\x4b\xc5\x54\x39\xac\xe7\x21\x52\xe3\x84\xe8\xdf\xff\x09\xdf\x7c\x03\xff\x7c\xd2\xaf\x9d\x76\x43\x5a\x13\x55\x9c\x49\xf9\x4a\xe8\x66\xb2\x2b\x7a\xd4\xff\x3a\x85\xd6\xba\xa9\x6a\x0a\x36\xbb\x38\x31\x0c\x6c\x17\x6d\x87\xa9\x8e\x8e\x2a\x5f\x66\x83\x56\x23\xf8\x08\x60\x9e\xdd\x85\x26\x4e\x8b\xbb\x49\x56\x1f\xd2\x7e\x94\xe3\x9b\x61\xaf\x70\x6c\x2b\xc9\xed\x76\xe2\x6e\x06\x15\x6f\x02\x57\xcb\x4f\x3b\x7a\xcc\xb9\xbe\x52\x78\xac\x5f\xff\xd0\x7d\x56\xd1\x29\x36\xb9\x62\x5f\x4f\xcb\x4d\x32\x12\x70\x07\xd1\xe1\x4c\xec\xac\xa2\x83\x39\x00\x4d\xf1\x45\x52\x65\xea\x67\x6d\x95\xa9\x2d\xcd\x9d\x2b\x64\xbc\x06\x42\x86\xed\xff\xec\x04\x3e\x7c\x54\xa6\x7a\xbf\xc1\x6d\x31\xc3\x3d\xa9\xab\x7b\x8b\x1d\x5e\x72\x62\xe2\x83\x87\x12\xd1\xe6\x48\xb5\x90\xf7\xe3\xb3\xab\x8e\x96\xde\x07\x73\xcc\x4e\x09\x17\x1c\xe3\x7c\xdb\xf8\x03\x5d\x7b\xc0\x7c\x7c\x58\x49\x1a\x9b\x61\x74\xd9\xb5\xd5\xbe\xdf\xea\xf7\xd6\x0b\xab\xf0\xbb\x2b\xcb\xee\x24\x74\xd6\x71\x11\x24\xba\x43\xaf\xef\xe6\x1d\xd3\xe6\x57\xf4\x26\xfa\xea\xc9\x93\x09\x8c\x25\x25\x19\xe3\x0b\x5b\x52\xfb\xf2\x0a\xe6\x84\xe5\x98\x38\x7c\x79\x3d\xde\xaa\xab\x46\x3e\x9f\x71\x5d\xfa\x8d\x0d\x1c\x16\x09\xbb\x70\x68\xef\xc2\xda\xdb\x5a\x16\x14\x6a\xf3\x8c\x68\x32\x0b\x42\x32\x01\x0b\x4a\xb8\xd7\xf6\x55\xbd\x6d\xa9\xaa\x79\xb6\xeb\x78\x66\xc3\xe6\x63\x9e\x3d\xa8\xfd\xb8\x0f\x1f\x9f\xa3\x94\x3d\x3b\xdc\xd7\xd4\xbf\x2d\x6e\xf8\x10\x63\x98\xd6\x3b\xc8\x7f\x6b\x90\x1f\x1c\x39\x88\x9e\x8a\xcc\xe9\x4b\x9b\x47\xb1\x79\x73\x98\x5f\x10\x33\xa2\x6b\x98\xe3\xce\x8d\x64\x3f\xff\x70\x15\x80\x7d\x4d\x46\xd7\x1e\xe2\x32\xde\x91\xef\xb0\xb9\x95\x0a\x75\x9a\xce\x6e\x4b\x21\xb5\xa9\x98\x5c\x8a\x6c\xed\x5d\x01\xfe\x28\x32\x9a\xab\xf6\xc6\x22\x79\xc7\x0b\x22\xd5\x92\xe4\x9b\x0d\x46\xa5\xac\xac\xfb\xea\xcb\xa4\xad\x29\x5b\xb7\xe2\x17\x39\x4b\xdb\x9c\x3a\xea\x8b\x30\xb1\x65\x64\x8c\x99\x31\x1b\x90\x01\x93\x0e\xc1\x5a\x4f\x33\xec\xe4\x04\x98\x48\xce\x5e\x3f\x6f\xc2\x3e\xd3\x5a\x9b\xfc\x7a\xd6\xde\xcf\x4c\xe3\x91\x8d\x10\x9d\x3d\xb7\x7c\xef\x54\x9b\x16\x7f\x0c\xf1\x11\xd1\xde\xbd\x3a\xf4\x62\x57\x4c\x94\x4c\x41\xf0\x11\x0e\xee\xa9\xe8\xc1\xa2\xee\xf4\x74\x5d\xb1\xef\xf4\x65\x43\x68\x38\x38\x9c\x97\xf3\x2e\x2d\x86\x1d\xad\x09\xce\x6d\x91\xf8\x33\x79\x98\xc0\x78\xec\x1c\xee\x0e\x7c\x7a\xbb\xd5\x3d\xca\x7d\xff\x1c\x74\x04\xf5\x1d\xa2\xfd\x8c\x02\x45\x85\x6e\x79\xc3\x7b\x57\x90\x33\xa2\x68\xd6\xb9\x4e\xb6\x89\xec\xeb\xcb\xdf\x68\xaa\xe3\xd8\x66\x76\xf0\x8b\x7d\x38\xec\xbf\x88\xd8\xca\x35\xbb\x2f\x1d\xf6\x34\x0a\xb5\x22\xf8\xc6\x75\x78\x9d\xc4\x65\xd4\x34\x1a\x30\x94\x83\xc6\xd2\xfe\xbb\x94\x94\x7c\x1a\xd5\x19\x55\x60\x1f\xbc\x1f\xce\xd5\xec\x03\x6e\xd3\xd1\xa0\xdb\xb4\x6c\xc3\xdb\x4a\x8e\x07\x6a\x4f\xd9\x06\x24\xdb\xd6\x25\x83\x6e\x4e\x39\x0e\x8c\xf1\x10\x3e\x69\xe8\x1c\x62\xbd\x0f\x2c\x58\x55\xd5\xa3\x86\x89\x4b\x6b\xec\x2d\x73\xfd\xbb\xc3\x40\x2d\xbc\xab\xf3\xff\x3b\x26\xa2\xea\xf2\xb4\x75\xab\xdf\xfe\xee\x22\xf9\x6d\x03\xa4\xff\xea\xa1\xb9\xdc\x6a\x1f\x1f\x59\x3b\x22\xa9\x4a\x92\xa4\xf6\xd6\x6e\x12\x67\xb9\xab\xcc\x7d\x91\xe6\x44\x29\x03\xf8\xec\x04\xa2\xde\x26\xc4\xee\xf5\xd4\x56\x56\xde\xe6\xe4\x46\xf9\x3c\x1f\xef\x15\x31\xbd\xbf\x02\xea\x3e\x7a\x0b\x3f\x5e\x1b\xae\x29\x75\x98\xf5\xcb\x49\xc1\x7c\x94\xdc\x60\x86\xd0\x24\xbc\x13\x58\x12\xf5\x03\x5d\xc3\xa5\x10\x79\x13\xef\xc0\x8e\xea\xd8\xc6\x0b\x62\xea\x52\x6c\x93\x62\xc7\x9e\xea\xb0\x39\xfc\xc3\x11\x0f\xed\xcd\xbd\xdc\xa9\xa7\x04\xa6\x14\x46\x6e\xc0\x4a\xd2\x51\x09\x2b\xa3\xa7\x16\xe4\x06\x13\x25\xdb\xf1\xa1\x3b\xe8\xf8\xdf\x3e\xb6\x74\xf7\x11\xcc\x76\x7e\x97\xe7\xe2\xe6\xac\x28\xf5\xda\xd4\x73\x7c\xf3\xd1\x3c\x31\xac\x27\xb9\xa7\x81\xfb\xff\x7d\x8a\x24\x37\xe1\x98\xb3\x53\x80\x0a\x44\xde\x11\xf4\x39\x07\x6b\x08\x2d\xd3\x35\x3b\xf1\x2e\xfe\x0d\x4c\x27\x30\x1e\xc3\x06\xa6\x53\xa0\xd8\x5f\x97\x3e\x4b\xa2\xec\x9d\xa1\xd0\x4b\x2a\xa1\x7d\x8f\xa9\xba\x0e\xd1\xbb\x62\x70\x2f\x08\x7d\x2b\x50\x55\xf5\x00\xaf\x84\xd5\x4b\xf3\xdb\xb8\xa7\x8d\x8b\x84\xb2\x29\xae\xbd\x73\x6d\xec\x60\xf7\x00\x79\xa5\xf7\xa8\xae\xb7\x0f\x5f\x6f\x6c\x3f\x3c\x8d\x7d\x9b\x1d\xfe\x03\x9e\x80\x1d\xbe\xfb\x8a\xc3\x9e\xf7\xc6\x32\xc3\xf6\x7d\x46\xd7\x58\x87\xf2\x74\xc7\x7a\x3f\xa8\x6c\x0c\xd8\xb6\x55\x6f\x2e\x93\xda\xf7\x78\x66\x4b\xfd\x37\x7b\xdd\xd7\x7a\xa8\x7d\xf7\x7a\x55\xb6\xf7\x1f\x5f\x79\x9d\xcd\x56\x5b\xbd\x6f\x45\x18\x42\x7d\x97\x83\x33\xa2\x6d\xa5\xeb\xdb\x46\xd5\x87\x60\xeb\xdd\x9d\xc7\xa0\xf7\x00\xb8\xcb\xe7\x9f\x1a\xa1\x7b\x5c\xbd\x0d\xdc\xb3\xd5\xdf\x35\xe8\xfe\x85\x57\x64\xe0\xb4\x37\x3d\x2d\xb7\xb1\xcd\x6b\xec\xab\xf8\x7b\xee\xa7\x24\x37\x5b\xfa\xec\x0c\x4d\xf7\x45\xf1\x5d\x75\xcf\xda\x24\x07\x0b\x03\x43\x49\x7e\xc0\xe0\xd6\x8c\x78\x61\x83\x15\xb3\x9b\x14\xfc\xf9\x1c\x77\x2f\xb6\xfb\xdd\x1d\x74\x63\x7c\xe8\x55\xe0\x7e\x7a\x5c\xac\x72\xcd\xc6\xd6\xce\xed\xf1\x1c\x7b\xd6\x38\x70\x3f\x55\xbe\xba\x0e\xc7\xc9\x7b\x84\x05\xbb\xa6\x86\x43\x05\x38\x06\x17\x2c\xec\xf9\x42\x74\xd7\xe3\xef\x1d\xcb\x06\x9e\xe1\x06\x1e\x7a\x6f\x1d\x05\x53\xa8\xb9\x3b\x3c\x69\x81\xd8\x8b\x75\x2f\x3d\xf9\xdd\x14\xc3\x0b\x4b\x76\x3c\x54\xc8\xe8\xfc\x7d\xfd\x6e\x31\xfc\x92\xbe\xe3\xcf\xf7\xc3\xf0\x7e\x58\x3c\x7a\x64\xa6\xd4\xfc\x74\x15\x69\xa7\x71\xab\x07\x7b\x05\x9e\xcf\xdd\x07\xce\xf2\x7e\xda\xd6\xc5\x75\xf0\x8f\x00\x9a\x51\x3b\x8d\xf1\xdd\x2f\x99\xbd\x7b\x5e\x53\x96\xfb\x63\x4d\xf1\xb6\x2d\xf6\xff\xb4\x06\xa3\xae\xfe\x5f\xa0\x84\x39\xbf\x8f\xc5\xde\x43\x9e\x3b\xf2\xa9\x3d\xde\xa6\x07\x3d\x4e\xf0\xaf\xc2\xdd\xaf\xe9\x14\xae\x59\x31\x83\xb9\x3e\x59\x88\xd1\xff\x04\x00\x00\xff\xff\x5a\xfa\x7c\xbd\x96\x42\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17046, mode: os.FileMode(420), modTime: time.Unix(1511532440, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRestapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x6f\xe3\x2e\x14\x3c\x9b\x4f\xf1\x7e\x3e\x34\xf6\x4f\xb5\x13\xf5\xb2\x52\xa5\x1c\xb2\xfd\xa3\xad\x9a\x43\xb4\xc9\xee\x9e\x09\x7e\xd8\x28\x18\x2c\xc0\xa9\xa2\x36\xdf\x7d\x05\xb6\x5b\x27\xe9\xee\x61\x89\x14\x89\x07\xcc\xc0\xcc\x3c\x37\x94\xed\x68\x89\xf0\xfa\x0a\xf9\x62\xf5\xb4\xea\xa7\xc7\x23\x21\xa2\x6e\xb4\x71\x90\x90\x28\xe6\xb5\x8b\x09\x89\xe2\x52\x37\xbb\x32\x17\x6a\x4a\x25\x32\x57\xe9\x9a\xda\xe9\x4e\xa8\xb2\x11\x2a\xdf\xdf\xc4\x24\x25\x84\x69\x65\xc3\xa1\x02\x39\x6d\xa5\x5b\x14\x85\x41\x6b\x61\x0e\xf1\xed\x97\xd9\x6c\x16\x36\x4d\xa7\x70\xa7\x15\x17\x25\x14\xc8\x85\x42\x0b\xae\x42\x60\x5d\x49\x37\x4e\x68\x65\x81\x6b\x13\xca\x8b\xd5\x13\x58\x34\x7b\x34\x39\x71\x87\x06\x87\xa3\xd6\x99\x96\x39\x78\x25\xd1\xc0\xf1\x31\xac\x33\x42\x95\x24\xba\xc7\x6d\x5b\xc2\x78\x6c\xb5\x96\x24\x7a\x52\x16\x59\x6b\xf0\xdb\x66\xb3\x1a\xd7\x17\xad\xab\xee\x85\xa5\x5b\x89\xc5\xb8\xbe\x59\xae\xef\xd0\xb8\x47\x21\xf1\x8c\x61\xb3\x5c\x3f\xe3\x61\xb4\xf0\xbe\xf2\x0b\xa5\x7c\x56\xfa\x45\xbd\x03\xf6\x58\x7a\x87\xea\xc7\xf7\xe5\xb0\xf1\x18\xf4\x58\x51\x63\x11\x1a\xff\x6f\x7b\x25\x5a\x43\xbd\x12\xc0\x8d\xae\x81\xe9\xba\xa6\xaa\x90\x42\x21\x70\x49\x4b\x9b\x13\xde\x2a\x06\x09\x83\xff\x3b\x41\xd2\x0e\x23\x49\x01\x8d\xd1\xc6\x0b\x33\x78\xf3\x28\x69\x99\xc4\x85\x17\x23\xbe\x86\xf8\x41\xf9\xfb\x40\x98\x83\xd4\x65\x29\x54\x09\x54\x15\xd0\x34\x46\x73\xa8\xd1\x19\xc1\x6c\x1e\xa7\xf9\x57\xad\xe5\x4f\x6a\x92\x2b\x96\x07\x29\xd3\x73\x4c\xda\x49\xef\x51\x07\x17\x9c\x06\x29\xac\x43\x05\x5a\x5d\x03\xe6\x65\x0e\xc1\x79\xd0\x06\x66\x79\xf8\x85\xb9\xc7\x27\x51\x74\xdf\xe5\x24\x39\xcd\x4b\x9a\xaf\x83\x3a\x3d\xf9\x50\x3d\xa7\x17\xbd\x8f\x59\xe5\x5c\xe3\x2f\xb1\x46\xb3\x17\x0c\x41\x2b\x79\x00\xef\xee\xd9\x2b\xc6\xc6\x5f\xa0\x39\x69\x33\x86\xc6\x65\x5c\x48\xf4\x68\x2b\xea\x2a\xff\x9e\xcd\x72\x0d\xde\x7f\xf0\x0b\xd0\x5a\x2c\xe0\xa5\x42\x15\x62\xe9\xb5\xf3\x68\xeb\xfe\x3d\x27\xf7\x1e\xe5\xe6\x53\xb6\x1d\x1e\x3e\x25\x7b\xc6\xc3\xbf\x70\xf5\x49\xbc\xa0\x2a\xba\x04\x66\x2f\x28\x65\xb6\xf3\x99\xf4\x84\x7d\x2e\x81\xb6\x4e\xd7\xd4\x09\x06\xd3\xfc\x63\x07\x18\xb4\xba\x35\x0c\x6d\x4f\x36\x52\xf1\x22\xda\x7f\x64\xa4\xad\xab\xce\xb8\xaa\xd0\xd9\x54\xca\xbf\x31\x8c\x1b\xf1\x52\x39\xdf\x41\x59\x6b\x64\xe7\xb8\x83\xf7\x96\x0a\x72\x39\x0d\x7b\x2a\x45\x41\x1d\x82\xf6\x84\x37\x10\x4e\xd8\x4f\x55\xeb\x8f\x8e\x48\xfa\x36\x22\x24\x12\x1c\xfe\x3b\xcd\x0c\x5c\x5d\x41\x72\xe2\x2b\xcc\xe7\x10\xc7\xf0\xf6\x06\x63\x0b\xba\x6a\xea\x9b\x30\x32\xe8\x5a\xa3\x80\xd7\x2e\x7f\xf0\x9d\xc9\x93\x78\x92\x65\x27\x61\x9b\x84\xf6\xeb\xab\x43\x28\x26\x50\xb7\xd6\xc1\x16\xc1\x36\xc8\x04\x17\x43\x14\x26\x59\x76\x12\xfc\x39\xa7\xd2\xe2\x24\x4e\x49\x74\x24\x64\xe0\x53\x42\x92\xa3\xff\xb4\xec\x45\x7d\x0b\xdc\xcd\x4b\x4d\x7e\x07\x00\x00\xff\xff\x04\x82\x5f\xc7\xef\x05\x00\x00")

func templatesRestapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRestapiGotmpl,
		"templates/restapi.gotmpl",
	)
}

func templatesRestapiGotmpl() (*asset, error) {
	bytes, err := templatesRestapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/restapi.gotmpl", size: 1519, mode: os.FileMode(420), modTime: time.Unix(1511531403, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x57\x4b\x6f\xdb\x38\x10\x3e\x4b\xbf\x62\x4a\x74\x03\xc9\x48\xe4\x1e\xf6\x94\x85\x51\xa4\x71\xba\x49\x17\x4d\xb2\x71\xbb\x3d\x14\x45\x40\x4b\x63\x99\x89\x44\xaa\x24\x95\x47\x05\xfd\xf7\x05\x49\x3d\xfd\x48\xdb\x4b\x22\xcd\xf7\x7d\xf3\xe0\xd0\xe2\xb0\xa0\xf1\x3d\x4d\x11\x72\xca\xb8\xef\xb3\xbc\x10\x52\x43\xe0\x7b\x84\xa3\x9e\xae\xb5\x2e\x88\xef\x11\xcd\x72\x24\xbe\xef\x91\x94\xe9\x75\xb9\x8c\x62\x91\x4f\xa5\x50\xb1\x28\x30\x16\x99\x96\x94\x4f\xa9\x90\x47\x29\xe3\x47\xea\x91\xa6\x29\xca\x29\x2d\x18\xf9\x2d\x41\x2c\xf8\x8a\xa5\x26\x4a\x55\x49\xca\x53\x84\x68\x8e\x2b\x5a\x66\xfa\xc2\x26\xa5\xea\xba\xaa\x0a\xc9\xb8\x5e\x01\xf9\xe3\x3b\x81\xa8\xae\x0d\x17\x79\xe2\x1e\x9c\xe8\xf5\x3d\x3e\x1f\xc2\xeb\x07\x9a\x95\x08\xc7\x33\x88\x06\x6a\x83\xd5\x35\x54\x15\x0c\xfd\x38\xee\xd0\xd9\x38\x6f\x93\x64\x2a\x38\x8b\xcd\x13\xf1\xbd\xbb\x47\x7d\x9b\xb1\x25\x0c\x39\x49\x2a\xd9\x1d\xcd\x1e\xe8\xf4\xee\x51\x1f\xa5\x62\xa3\xf4\x3b\xc6\x7f\xac\xcb\x69\x2a\x64\xbe\x81\xdc\xbf\xb9\x2f\x97\x25\x9f\x16\x05\xf1\x43\xdf\x5f\x95\x3c\x86\x53\x89\x54\xe3\x95\xfc\x5c\x24\x54\xe3\x87\x47\xfd\x49\xdc\x23\x0f\x92\x25\x4c\x8c\x87\x68\xfe\xee\x10\xee\x1e\xf5\x67\x85\x12\x26\xb9\x48\x30\x53\xd1\x07\xf7\x1e\x42\xb0\x14\x22\x3b\x04\x94\x52\xc8\x10\x2a\xdf\x7b\xa0\x12\xf0\x89\x29\xcd\x78\x0a\x63\xb6\xef\xb1\x15\x24\xcb\xe8\xcb\x1a\x25\x06\xa4\x54\x28\x6f\x39\xcd\x11\x66\xf0\x16\x4e\x2e\xe7\x80\x39\x65\x99\x79\x23\x5d\xc4\xc8\xfc\x31\xa4\xde\x72\x66\x58\x61\xf4\x9e\x49\xa5\x83\x83\x36\x56\x18\xdd\x60\x2c\x64\x72\x29\xf4\x7b\x51\xf2\x24\xb0\xd9\x78\x28\xa5\x69\x4b\xb2\x8c\x5c\x99\x41\xe3\x25\x8c\xce\x4c\xca\xbe\xe7\x49\xd4\xa5\xe4\xa6\x02\x98\xcd\x80\x33\x57\x8d\xef\xd5\x76\xe9\x47\x39\xc0\xac\x2b\xad\xb3\xf5\xac\xb3\x26\xfb\x8e\x62\x0d\xbe\x37\x9d\x76\xa9\x5f\xcc\x87\xf8\xc5\x7c\x04\xba\x04\x93\x13\x3d\xe4\x74\x46\xbf\x4d\x74\x45\x33\x85\x87\xa6\xa2\x05\x7d\xd8\xaa\xa7\xf6\x7d\xfd\x5c\xa0\xd9\x74\xd1\xa5\x49\xb9\xae\x17\x28\x1f\x50\x82\xd2\xb2\x8c\xb5\x59\x94\x73\xa4\x99\x5e\x83\xe9\x9c\xe1\xdb\x4d\x10\x28\x98\x6c\x69\x42\x70\xd4\xe7\x20\xb4\x6c\x23\x6e\xb2\x50\x91\x83\x8c\x83\xfe\x17\x74\x55\xa0\xa4\x9a\x09\xae\xea\x7a\xe4\xf7\xf5\xa6\x63\xf3\xa3\xa0\x2a\xa6\x19\xfb\x81\x5d\xd4\x20\xd6\x4f\x30\x49\x19\x8f\x4e\x05\xd7\xf8\xa4\xab\x0a\xd8\x0a\xa2\x6b\x2a\x69\xae\xa0\xae\x0f\x01\x0a\xf7\x3c\xa9\xaa\xe8\xda\x7d\x4b\xea\x3a\xda\xe9\xcd\xa9\xaa\x0a\x90\x27\x50\xd7\x21\x4c\x68\xc1\xa2\x1b\x54\x85\xe0\x0a\xa1\xf2\xed\xea\x27\xb8\x2c\x53\x38\x02\x9d\x17\x19\x3c\x50\xa9\x7c\xdf\x33\xf6\x8f\xa8\xd7\x22\x39\xb6\x0b\xe9\x9e\xc1\xfc\x66\x0d\x74\x4e\xd5\xbf\x25\xca\x67\x17\xc0\x51\xc6\xb6\x21\xf5\xbd\x90\xf9\x06\xb3\x37\x6d\x12\xff\x33\xdf\x86\x1d\xec\x81\x7d\x24\x61\xd9\x16\xbb\x33\x0d\x89\x0b\x2d\x91\xe6\x8c\xa7\x6d\xf9\x1d\x7f\x0b\xe9\x64\x5f\x98\x5e\x37\x7d\x70\xec\x81\xe1\xf7\x93\xf8\x44\xd3\x06\x37\x4f\x60\x3f\x7b\xc6\xde\x34\xd1\x41\xcd\x4b\x27\xba\xa6\x7a\xdd\x22\x7a\xdd\x99\x6f\x84\xd0\x23\xdd\xc0\xd0\x91\x4e\x4a\xbd\x16\x92\xfd\xc0\xa6\x89\xfd\x7b\x1f\xdc\xec\x94\xe3\xe1\x6f\xc5\x99\x17\x5a\x9a\x3a\x29\xe3\x0a\xc8\x8a\xf1\xe4\x24\xcb\xc8\x5b\xc3\x53\x5a\xde\xc6\x2d\xe4\x44\x1d\x61\xbf\xfc\x8a\xe3\xcb\x72\x43\xd8\x2d\x37\x6b\x7e\x31\xdf\xaf\x6e\xf0\xbe\xa4\x91\x5a\xe2\x4a\xa2\x5a\xef\x97\xb7\x84\xdd\xc1\xd5\x33\x8f\xf7\x6b\x2d\xba\x5b\x58\xda\xa3\x64\xbf\xb4\xc1\x77\x8b\x31\x61\x7a\xbf\xd4\xa2\xbb\x85\xb1\xfd\x56\xee\x97\x36\xf8\x6e\x31\x4d\x92\xfd\x4a\x03\xee\x96\x65\x4c\xbd\x90\xac\x45\x77\x0b\x53\x7c\x41\x67\xc0\xbe\xa5\xe7\x54\x5d\x4b\x5c\xb1\xa7\x8d\x86\xae\xa9\xba\x2d\x1c\xb0\xaf\x9d\x03\xe9\xb0\x27\xdb\xca\xcd\x8e\x0c\x84\x7d\x3f\xb6\x65\xe3\x6e\x0c\x44\xfd\xd6\xd9\x16\x8d\x37\xce\x40\x34\x6c\xe0\xb6\x6c\xb3\x7d\x03\x61\xd7\xbc\x6d\xd5\xa8\x75\x03\x49\xdf\xb8\x6d\xcd\xb8\x6d\x03\x51\xd7\xb4\x6d\x4d\xdb\xb2\x4d\x49\x82\x19\xee\xaf\xa9\x41\x47\xbd\x5e\x94\x2b\xab\x1c\x9d\x3c\xbd\x03\xe5\x60\xe7\x60\x70\x34\x39\xfd\xd9\x93\x96\x34\xd6\x0b\x2d\xcd\xfc\xe5\xaa\x27\x9f\x15\xe3\x29\x39\x6e\x77\x1b\x3a\xce\x68\x85\x1a\x4e\x57\xc1\x86\x1f\xb7\x22\x3f\x71\x34\x22\xed\xf3\x64\xd7\xe9\x27\x8e\x86\x9c\xa6\xb4\x6e\xc4\x70\xc7\x4a\xeb\xfc\x62\xee\x3e\xdf\x17\xf3\x2e\xde\x47\x3b\x73\x8e\x8e\x87\x91\xa9\x23\xee\xfa\xf8\x9b\xe9\x75\x60\x69\x07\xd8\x61\x08\x43\x91\xa8\x3a\x13\x7c\xfd\xb6\x83\xd5\xcf\xf6\xde\x74\xe2\x7b\x5e\x51\x44\xd7\xe6\x12\x90\xf1\x80\x14\xcd\x61\x49\x0e\x9b\x69\x26\xb4\x63\x68\x73\xfc\x1e\xcf\x20\xa7\xf7\x18\xe4\xb4\xf8\xaa\xec\xa2\x7d\x73\xff\x0c\x2b\x59\x1a\x3c\xd6\x4f\xd1\xc7\x52\xe9\xbf\x51\x07\x24\x59\x92\x30\x0a\xda\x51\xdd\x91\xda\x11\x3b\xce\x4a\xa5\x37\xa7\xec\x64\xd9\xbd\x77\x19\x44\x73\xaa\xe9\x42\x94\x32\xc6\xe8\xd4\x89\x2e\xed\xd0\xbd\x0d\xcf\x97\x06\xe9\xe6\xef\xef\x66\xea\xb9\x41\x5b\x03\x5b\x41\xfb\xda\xd0\xe0\xd5\x0c\x08\xb1\x93\x78\x57\xe1\x57\xa2\x34\xd5\xa5\x22\xdf\x60\x06\xc4\xde\x1c\xc8\x18\xcf\x55\xea\xc0\x79\x59\x64\x2c\xa6\x1a\xcd\x8a\xbb\xf0\x86\x5a\x03\x66\x76\x82\xf3\x6c\xb1\xcd\x64\x7f\x90\x74\x49\x86\xfb\xe3\xa9\x32\x8e\x51\x29\xeb\xc6\xf7\xbc\xc9\xd4\x8d\x81\x5b\x03\xdd\xe6\x34\xd7\x4c\x23\x43\x4a\xff\xde\x32\xce\x91\x26\x28\x47\xc3\xd0\xc0\xd2\xb2\x36\x27\xc2\xf1\x38\xe8\xdb\x0d\xf3\x2b\x8d\x6e\x76\x62\x99\x69\xd5\x6f\x42\x77\xd1\x7a\x69\x37\x31\xae\x51\xae\x68\x8c\x55\x1d\xda\x2b\x59\x7f\x47\x5a\x60\x86\xb1\x0e\xc8\x84\x98\xfe\xf2\x24\x38\x68\xfc\x37\xd7\x8b\xbf\x2c\xf7\x95\xbd\x26\xd9\xe5\xef\xd7\xd8\xf5\xd1\x2c\x31\x4a\xe9\xd8\x41\xd8\x5f\xaf\x0e\x86\xb3\x77\x75\x2a\x12\x3c\x86\x3f\xdf\xbc\x39\x84\x77\x22\x79\x3e\x86\xd6\x4f\x6d\xef\x5d\xbd\xd7\x26\xbc\xf5\xdb\x3c\xfb\x3f\x6d\xec\x0b\x21\xd7\x5a\x17\xd1\xc2\xaa\xae\xfe\xd9\x11\xdc\x6e\x87\x5f\xd3\x5f\x0a\x7d\x91\x17\x19\xe6\xc8\x35\x26\xad\x2f\x72\x29\x34\x0c\xec\xa4\xf6\x6b\xbf\xfd\x18\xfc\x1f\x00\x00\xff\xff\x2c\x17\xdc\xda\xfd\x10\x00\x00")

func templatesServiceGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceGotmpl,
		"templates/service.gotmpl",
	)
}

func templatesServiceGotmpl() (*asset, error) {
	bytes, err := templatesServiceGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service.gotmpl", size: 4349, mode: os.FileMode(420), modTime: time.Unix(1511563958, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/.DS_Store": templatesDs_store,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/dockerfile.build.gotmpl": templatesDockerfileBuildGotmpl,
	"templates/dockerfile.dist.gotmpl": templatesDockerfileDistGotmpl,
	"templates/main.gotmpl": templatesMainGotmpl,
	"templates/makefile.gotmpl": templatesMakefileGotmpl,
	"templates/migrate.gotmpl": templatesMigrateGotmpl,
	"templates/model-generate.gotmpl": templatesModelGenerateGotmpl,
	"templates/model-gorm.gotmpl": templatesModelGormGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
	"templates/restapi.gotmpl": templatesRestapiGotmpl,
	"templates/service.gotmpl": templatesServiceGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{templatesDs_store, map[string]*bintree{}},
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"dockerfile.build.gotmpl": &bintree{templatesDockerfileBuildGotmpl, map[string]*bintree{}},
		"dockerfile.dist.gotmpl": &bintree{templatesDockerfileDistGotmpl, map[string]*bintree{}},
		"main.gotmpl": &bintree{templatesMainGotmpl, map[string]*bintree{}},
		"makefile.gotmpl": &bintree{templatesMakefileGotmpl, map[string]*bintree{}},
		"migrate.gotmpl": &bintree{templatesMigrateGotmpl, map[string]*bintree{}},
		"model-generate.gotmpl": &bintree{templatesModelGenerateGotmpl, map[string]*bintree{}},
		"model-gorm.gotmpl": &bintree{templatesModelGormGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
		"restapi.gotmpl": &bintree{templatesRestapiGotmpl, map[string]*bintree{}},
		"service.gotmpl": &bintree{templatesServiceGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

