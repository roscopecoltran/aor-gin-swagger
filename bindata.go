// Code generated by go-bindata.
// sources:
// config.yaml
// templates/.DS_Store
// templates/api.gotmpl
// templates/database.gotmpl
// templates/main.gotmpl
// templates/migrate.gotmpl
// templates/model.gotmpl
// templates/parameter.gotmpl
// templates/restapi.gotmpl
// templates/service.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x4d\x8f\x13\x31\x0c\x86\xef\xfb\x2b\xac\xe1\xd2\x1e\x9a\xe1\x3c\x37\x24\x40\x02\x09\x54\x89\x3d\xae\xd4\xba\x89\x9b\x86\xcd\x97\xe2\x0c\x08\xaa\xfc\x77\x34\x1f\xdb\xd2\x59\x16\x66\x41\x15\x37\xb7\xf1\x6b\x3f\x79\xe3\xf1\x0b\x38\xe4\x1c\xb9\xa9\x6b\x6d\xf2\xa1\xdd\x09\x19\x5c\xad\xc3\x8a\xbf\xa2\xd6\x94\x7e\x0e\x77\x36\xec\x6a\x87\x9c\x29\xd5\x2a\x48\xae\x5b\xa6\x3a\x93\x8b\x16\x33\x6d\x2c\x7e\x0b\x6d\x16\x4e\xdd\x0c\x51\x73\x03\x80\x31\x5a\x23\x31\x9b\xe0\xbb\x9f\x00\x2b\xf0\xe8\xa8\x01\x19\xfc\xde\xe8\x36\x51\xff\x2f\x00\x87\x36\x49\x6a\xa0\x3a\x1e\x41\xdc\xba\xf8\xda\x24\x28\xe5\x54\x9c\xeb\x44\x9c\x31\x1a\xa1\x43\x76\xd1\x56\xa3\x2c\x63\xd2\x94\x7b\xd9\xf6\x78\x84\xcf\xc1\xf8\xb7\xc6\xd2\x1a\xf3\x01\xc4\x6d\x7f\x08\xe2\x13\xa5\x2f\x94\xd6\x28\xef\x51\x13\x94\xb2\x2d\xe5\x41\xbf\x37\x96\x36\x03\x51\x35\x20\x09\x1d\xaa\x0b\x52\x72\x3b\x52\x8a\xd4\x86\x23\xc9\x09\x2d\x32\x53\x6e\x46\x7b\xde\x73\xf0\x6f\xba\xe4\x2b\xb0\x5d\x40\x3c\x42\xe4\xbe\xc8\x5c\x27\xaf\xeb\xe2\x50\xfd\x92\xcf\xa1\xf1\x73\xe9\xba\xdc\xbf\xc0\xbb\xab\xa4\x53\x77\x15\x2c\x14\xf2\x81\x92\xf9\x4e\xb0\x88\xc8\x12\x6d\x17\x8a\x8f\xe8\x68\xb9\x84\x52\x56\x83\x57\x4f\xc0\x8f\xcd\x27\xf4\x46\x27\xcc\xb3\x07\x75\x4c\xbf\xa2\xc5\xe7\x0e\x8f\xc7\xc0\xc8\xd9\xa0\x63\xfa\x7f\x33\xfb\xdc\xbf\x3b\x75\x41\x91\xe5\xcb\x25\xa1\x68\x6f\xbc\xe9\x96\xc7\x2f\xbf\xbb\x5e\xf2\x1c\x7f\x3f\x74\x82\x3f\xda\x3b\x54\x58\xb0\xc7\xfb\x27\x6f\xb6\x2d\x65\xe4\x0e\x91\x52\xbf\xdf\x26\xec\x11\x13\x3a\xca\x94\x78\xee\x7b\x9c\x14\xbf\x7f\x11\xb3\x07\x9d\x61\x61\xc9\x77\x17\xd3\xbc\x84\x97\x50\xca\xcc\x99\x12\xaf\xd6\xef\x4e\xf1\x43\x30\xc8\xc9\x32\x3d\xa3\xd0\x44\xec\xd5\x3f\x1b\xba\x39\x5b\xd6\x7b\xfb\x23\x00\x00\xff\xff\xd0\x9c\x0a\x99\x99\x06\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1689, mode: os.FileMode(420), modTime: time.Unix(1511528512, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDs_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xd8\x31\x0a\x02\x31\x10\x85\xe1\x37\x31\x45\xc0\x26\xa5\x65\x1a\x0f\xe0\x0d\xc2\xb2\x9e\xc0\x0b\x58\x78\x05\xfb\x1c\x5d\x96\x79\x60\x60\xd5\x4e\x8c\xcb\xfb\x40\xfe\x05\x37\x2a\x16\x31\x23\x00\x9b\xee\xb7\x13\x90\x01\x24\x78\x71\xc4\x4b\x89\x8f\x95\xd0\x5d\x1b\x5f\x43\x44\x44\x44\xc6\x66\x9e\xb4\xff\xf5\x07\x11\x91\xe1\x2c\xfb\x43\x61\x2b\xdb\xbc\xc6\xe7\x03\x1b\xbb\x35\x99\x2d\x6c\x65\x9b\xd7\x78\x5f\x60\x23\x9b\xd8\xcc\x16\xb6\xb2\xcd\xcb\x4d\xcb\x38\x7c\x18\xdf\xd9\x38\xa1\x18\xa7\x10\x2b\x6c\xfd\xce\x77\x23\xf2\xef\x76\x9e\xbc\xfc\xfe\x9f\xdf\xcf\xff\x22\xb2\x61\x16\xe7\xcb\x3c\x3d\x07\x82\xf5\x0d\x00\xae\xdd\xf5\xa7\x43\x40\xf0\x3f\x0b\x0f\xdd\x5a\x1d\x04\x44\x06\xf3\x08\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func templatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_templatesDs_store,
		"templates/.DS_Store",
	)
}

func templatesDs_store() (*asset, error) {
	bytes, err := templatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1511443706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x39\x5f\x73\xdb\x36\xf2\xcf\xe4\xa7\xd8\x72\x12\x97\xf4\xc8\x54\xdb\x47\xfd\x7e\x9e\x8e\x6d\x39\xa9\x13\xc7\xf1\x58\x72\xf3\x70\x77\x93\x42\xe4\x8a\x42\x43\x01\x2c\x00\xda\x56\x38\xfc\xee\x37\x0b\x80\x14\x25\x2b\xbe\xdc\xcd\x3d\x5c\x66\x22\x93\xc0\xfe\xc3\xfe\xc7\xb2\x62\xd9\x17\x56\x20\x34\x0d\xa4\x67\xb7\x57\xb7\xfe\xb5\x6d\xc3\x90\xaf\x2b\xa9\x0c\xc4\x61\x10\x65\x52\x18\x7c\x32\x51\x18\x44\x02\xcd\x78\x65\x4c\x45\xcf\x52\xbb\xdf\xb1\xe6\x85\x60\x25\xbd\xe8\x8d\xce\x58\x69\x1f\x0d\x5f\xa3\x5d\x32\x8a\x8b\xc2\x82\x2e\xd7\x26\x0a\xc3\x20\x2a\x64\xc9\x44\x91\x4a\x55\x8c\x9f\xc6\x92\xd5\x66\xf5\x8b\x5b\xe7\x66\x55\x2f\xd2\x4c\xae\xc7\x05\x17\x27\xc4\x56\xf1\xc5\xb8\xaa\x94\x5c\x46\xcf\xf7\x0b\x29\x78\x46\x4f\x84\x5c\x70\xe1\x28\xc1\x10\xec\x2b\x2b\x99\xc8\xa5\x05\x3f\xcc\x48\x49\x9d\xc9\x0a\x33\x59\x1a\xc5\xc4\x58\x3f\xb2\xa2\x40\x75\x52\x70\x31\x66\x15\x8f\xbe\x1b\x38\x93\x62\xc9\x8b\xef\x87\xcf\x99\x61\x0b\xa6\xf1\xfb\x31\xd6\x3c\xcf\x4b\x7c\x64\x0a\xe9\x0c\xe3\x31\x7c\x65\x55\x60\x1f\x4a\x59\xa8\x5a\x87\x41\x29\x8b\x9d\xd3\x6b\xae\xea\x4a\xa3\x18\x3b\x00\x8f\x36\xc5\x25\xab\x4b\x73\x65\xed\xab\xc3\xa0\x69\x14\x13\x05\x42\xba\xbb\xd1\xb6\x4d\x53\x29\x2e\xcc\x12\xa2\xd7\x7f\x45\x90\xb6\x2d\xc1\xa2\xc8\xe9\x61\x3c\x86\x67\x04\x5e\x7d\xc1\xcd\x08\x5e\x3d\xb0\xb2\x46\x98\x9c\x42\x3a\xa0\x44\x7b\x6d\x4b\x7e\x36\xa4\xe9\x60\x87\x84\x93\x30\x1c\x8f\xe1\x4e\xd6\x06\x35\xe4\xb8\xe4\x02\x35\xb0\xb2\x04\xb3\x42\x50\x6e\x59\x2e\xed\xdb\xd9\xed\x15\x68\x54\x0f\x3c\xc3\x34\x34\x9b\x0a\x3b\x34\x6d\x54\x9d\x19\x68\xc2\xe0\xb8\xe0\x22\xbd\x14\x05\x17\x38\x38\xe7\xc7\x0a\x15\x33\x5c\x0a\x2b\x19\x54\x8c\x7c\x96\x7f\x45\x48\x6f\xd8\x9a\x9c\x7f\x40\xc1\x91\xb0\x84\xd5\x5b\x25\xeb\x2a\x0c\x82\xa6\x01\xbe\x84\xf4\xac\x36\x2b\xa9\xf8\x57\xcc\xa1\x6d\xe9\x05\x08\xf4\x37\x26\xf2\x12\xd5\x9b\x5a\x64\xa1\x3f\x54\x10\xdc\x4a\x6d\xe0\x39\xa5\xb6\x83\x08\x5b\x7b\x6c\xe7\x43\xb5\xc2\x4f\x58\x96\xef\x85\x7c\x14\x80\x82\x2d\x4a\x52\x81\xc8\xb7\xdb\x1a\xc6\xe9\x23\x96\xe5\xc9\x17\x0f\x93\x57\x92\x0b\xa3\xd3\x70\x59\x8b\x0c\x62\x05\xc7\x4e\x15\xc9\x01\x92\xf1\x0a\x59\x69\x56\x24\x20\x10\x78\x9c\xc0\x42\xca\x32\xa1\xd3\x3e\xf6\x7c\x27\xa7\xa0\x52\x2b\x66\x1c\x0d\x99\x45\x49\x18\x90\x5a\x7a\xc8\xf4\xed\xe5\x3c\x8e\xc6\x3a\x5b\xe1\x9a\x9d\xe4\x5c\x67\xf2\x01\xd5\x26\x1a\x39\xe2\x99\x79\x72\x07\xbf\x70\x39\xc4\xb2\x09\x82\x1e\x8e\x18\x0d\xb4\x1d\x04\x33\x4b\xe8\xfe\xee\x1a\xc0\x65\x0e\xf8\xe3\x4f\x2d\xc5\x24\x72\x1c\x3e\xd7\xaa\x8c\xfe\x18\x40\xce\xc9\xf0\x07\x21\xc9\x25\x3c\xe8\xfd\x95\x25\x48\xff\x76\x41\x6b\xbe\x25\xd8\xee\x09\x30\x01\x88\xba\x00\x4c\x09\x3c\x1a\xed\xf1\x9d\x40\xd4\x05\xe8\x2f\xe9\x4f\x6e\xbb\xa5\x9f\xcc\x3c\xa5\xef\x66\x1f\x6f\x62\x4a\x95\xe9\xcc\x30\x53\xeb\x8f\xef\x47\x70\xd4\x9f\x3b\x09\x83\xa0\x4d\x0e\x28\xd2\x59\x27\x1a\x81\x7b\xf0\xee\x34\x30\x5a\x92\x90\xe3\x84\x81\xea\x34\xbf\x23\xe1\x4b\x5a\x27\xa9\x66\xf6\xf8\xfb\x72\x39\xa5\xc4\x33\x47\x8a\x24\xb7\x5c\x12\xef\x97\x3b\xa2\x00\xd7\x36\xfc\xdc\x22\xfc\x36\x9f\xdf\xc2\xca\x6f\xd5\x1a\x73\x58\x4a\x65\x01\x86\x6e\xe3\x8f\x45\xc4\x6c\x10\x53\x00\x39\xd7\xce\xbd\xd3\x7e\xeb\xb8\xbb\x3e\xba\x17\x61\x74\x2c\x07\x6a\x1d\x69\x8b\x15\x06\x0a\x4d\xad\xc4\x8b\x4e\xe8\x4f\xb0\xef\x81\xbf\xb9\x65\x62\xd8\xb9\x89\x37\xca\xd0\x4d\x1c\xd4\xc4\xf3\xdc\xc4\x89\xb7\x3e\xfd\xf2\x25\xfc\xe0\xd6\x53\x4f\xcc\xe1\x1c\x72\x8b\x99\xcb\x60\xf7\x82\x3d\x30\x5e\x92\x46\x46\x70\xe4\x90\x13\x4b\x11\xb0\xd4\xf8\x02\x01\xeb\x57\x43\x04\x72\x0f\x67\x37\x4f\xbb\xb3\x18\x17\x06\xd5\x92\x65\x08\x66\xc5\x0c\xac\x6b\x6d\x60\x81\xc0\xd7\x55\x89\x6b\x14\x06\x73\xe0\x02\xa4\xca\x51\x81\x91\x50\x29\xf9\xc0\x73\x24\x42\x8b\x5a\x53\x22\xd6\x54\x69\x78\xd6\x5b\xf8\x79\x06\xee\x39\xf6\xac\x9a\xd0\xab\x6a\xe3\x8d\xf8\xef\x24\xe2\x67\x96\xf3\xa9\xf7\x96\x29\xb6\xd6\xd0\xb6\x23\xa8\xdc\xe3\x71\xd3\xa4\xbe\x7b\x69\xdb\xf4\x20\x31\x87\xd4\x34\x94\x2f\xa1\x6d\x13\x38\x66\x15\x4f\xef\x50\x57\x52\x68\x1c\xa6\x62\xeb\x90\x05\x17\xfc\x2b\xde\x32\xb3\x8a\x2b\x66\x56\x3e\x46\x92\x2e\x81\x34\xbd\x8b\xf9\x06\x27\xbd\xc3\xaa\x64\x19\xc6\xfb\xef\x84\x3d\x82\xa8\x89\x46\x10\x4d\xa2\x11\x9c\xfc\x9c\x8c\x20\x6a\xe9\xd5\xbd\xed\x67\x7f\x5f\xc6\x06\xe9\x7e\x50\xfc\x0e\xea\xde\x0a\xbc\x87\x1f\xfb\xdd\xce\x26\x23\x1f\x70\xb6\x52\x91\x21\x46\x60\xe4\x17\x14\x94\x19\xbb\xb3\xf9\xb2\x41\x87\x43\x5b\x35\x29\x38\x48\xfd\x37\xf8\x18\x27\xdd\x62\x7a\xaf\x31\xb6\xc5\x0c\x5d\x32\x8b\x93\xdd\xbd\x6d\xa7\x92\x5e\xdb\xce\xe3\x5a\x52\x5e\x21\xb0\x30\xd0\x0f\xd9\x85\x95\x94\x68\x3b\x99\x53\xb7\x10\x86\x14\x39\xfd\x3e\x35\xa4\xe9\xc5\xc7\xbb\x59\x7a\xe9\x32\x85\x0d\x82\xc3\x6c\x08\x2c\xee\x32\xe3\x0e\x91\xe9\xf9\x77\xa0\x4f\x7d\x33\xe6\xbd\x2c\xee\x9a\xb3\x74\x7a\x7e\x90\x28\x49\xf6\xee\xd3\x7c\x87\xf2\x72\x6d\xd2\x5b\xdb\xdb\xc4\xd1\xbd\xc6\x77\x9f\xe6\xbf\xc2\x6b\x03\x7f\xa7\xa4\xfc\x4d\xcc\x64\x88\x58\x8a\x38\x9a\x61\xa6\xd0\xbc\xc7\xcd\x04\x0e\xe2\xf5\xfb\x56\xac\xc0\x3b\xc5\xe4\x14\x8e\x9c\xe9\x1a\xd7\xed\x4c\xc0\x1d\x94\x24\x3f\x18\x6e\x0e\xf1\x70\xa0\x0c\x9b\x14\x38\xf5\x8e\xd7\x35\x03\xb6\x01\xb0\x51\x28\x10\xd2\x0f\x68\x56\x32\x87\xe8\xed\xe5\x3c\x82\xef\xa7\xfa\xcc\x7c\xa4\x77\x61\xa8\xa6\xea\xb8\x6f\x27\xb9\xc8\xf1\x69\x04\xaf\xcc\xa6\xb2\xed\xe4\x85\x14\xba\x5e\xa3\xfe\x80\x39\xb7\xf5\xd7\xa6\x0d\xbe\xf4\x90\x6d\x3b\xf2\x31\x1c\x35\x0d\x21\xd9\x07\xbb\x90\x24\x61\x1f\xf7\x07\xdb\xb7\xbe\x1c\xd9\xe8\x68\x5c\x93\xf7\xca\x1e\xc7\x8a\x3f\x39\x85\x78\xef\x48\x09\xdd\x92\x1c\x9c\xc6\xac\x56\xdc\x6c\xa6\xd4\xaf\x72\xab\x61\x2b\xf0\xec\xc0\x7a\x87\xe4\x6d\xd2\x81\x80\xcd\x80\xaf\x72\x5c\x12\xa6\x3d\xcf\x61\xba\x9d\x3a\xfb\x3e\x14\xff\xb2\x68\x3d\x25\xdb\x9e\xe0\xad\x92\x95\x4e\x6d\x73\x14\xf9\x8b\x8f\x43\xb2\x67\x9a\x77\x81\x3f\x39\xed\x93\x40\x68\xeb\xd6\xee\xf6\xe9\x29\x44\x91\xab\x3d\x7b\x1b\xb0\x7b\x39\xf8\xb6\x04\x1e\xc3\xf2\xee\xf9\x5b\x17\x19\xa8\xb7\x6d\xad\x39\xc0\x26\x1b\x27\xae\x5d\x88\x89\xf3\xc0\x4f\x66\x74\x37\xd2\x76\xe7\x99\x97\xd8\x7b\x93\x53\xbb\x85\x7a\xc1\x37\x2c\xe8\xc0\x3b\x6c\xe9\xf6\x6c\x2f\x7d\x33\xed\x0a\x6e\x27\xfe\x64\x57\x31\xae\xd6\xd3\x6f\xe2\xec\xe0\x5c\xeb\x85\xe3\xed\x3b\xff\x4b\x6a\xd8\xa3\xd9\xdf\x12\x82\x17\xc3\xcb\xde\x31\xfa\x68\x3d\x0c\x33\x88\xe1\x7f\x49\x2b\x6d\x1a\x1f\xde\x6d\x1b\x0f\x8a\xe1\xde\xad\x90\xd6\x48\x85\xb0\x53\x80\xcf\x7d\xc3\x70\x4d\xfd\xc2\xe1\xd2\xde\x15\xaf\x83\xbb\x54\x29\xfa\xbb\xa6\xaf\xb3\x4e\x62\x5f\x2c\xa9\xfc\x75\xd7\xc3\xc3\xad\x88\x5d\xe9\xfb\x3a\x5f\xd8\x7c\x81\x0b\x03\x57\x78\xe0\xd8\x57\x9e\x80\x70\x51\xc1\xb1\x6b\xac\xec\x4b\x18\xcc\xb9\x29\xbb\xcb\x45\x18\xfc\x8e\x4a\x73\xd9\xd5\x7b\x2f\xc7\x0d\x3e\x12\x23\x1b\x9e\xf6\x08\x1a\x18\x08\x7c\x3c\x50\x9f\x1d\x68\xac\x1f\xb2\x6d\x49\xde\x15\x23\x81\x63\x42\x6b\x6c\xb5\xf9\xc1\xd7\xc6\x29\x2e\x6a\xdb\x6e\x04\x54\x72\x67\x68\x3e\xc8\xbc\x2b\xbf\x25\x32\x8d\xf4\xee\x8b\x14\xab\xb8\xad\x05\x67\xb7\x57\x84\xe0\x0e\x3b\x79\xde\x19\x3c\x64\xa3\x9e\x3e\x79\xdc\x94\x6b\x5b\x8e\x3a\x81\xfa\xb0\xb5\xa1\xe1\xd6\x3a\x32\xb4\x62\x15\x33\x81\xa8\x69\x20\xbd\x12\x4b\x99\x3a\x4d\xb5\xad\xbd\x03\x79\x45\x0d\xf7\x3b\xdd\x39\x88\xd6\x0d\x22\x5c\xc6\x05\x3b\xde\x01\x52\xfc\xf6\x26\x4b\x8d\x68\x6e\x0f\xbe\x96\x39\x5a\x7d\x3c\x53\x87\xc5\x4b\xef\xb0\xe0\xda\xa0\x8a\x6d\x33\xe7\x9c\xda\xd5\xc0\x11\x08\x5e\x26\x3d\x37\x8d\xc6\x0f\x4a\xe8\x4f\xe1\x7a\xdc\x39\x3e\x99\x37\x52\xad\x99\x31\xa8\xe0\x91\x9b\x15\x08\x09\x99\x2c\xa5\x72\xf3\x14\x52\x78\x0f\x10\x1f\xd1\xca\x0e\x4e\xe3\x55\x77\x61\x51\x26\x60\x54\x8d\x6d\xe2\x4c\x91\x7a\xa7\x3a\x85\xa3\x81\x5b\x91\xe8\x67\x79\xae\x26\xd0\xfd\xeb\x0c\x91\xe7\x0a\xb5\x26\x0d\xfa\x2b\x8e\x07\x79\x7e\x32\xb2\x2d\xb2\x7c\xce\xd7\x28\x6b\x33\x01\xf8\xf9\x27\x38\x06\xc3\xd7\x48\x49\x58\x8a\x9c\x20\x3e\x29\x6e\xb0\x07\x39\x00\xe1\xdb\x9a\xce\x11\xfa\x09\x41\xe7\x0d\x56\xcb\x03\xe6\x07\x66\x09\xfa\x21\xf3\x57\x9c\xcd\x56\xd3\x3d\x9c\xbf\x1c\x7d\xed\xed\x1a\x0e\xc9\x0d\xef\xbb\x5f\x9f\x5d\x78\x87\x94\x49\x9f\x3e\x09\xb0\x8a\xfb\xc8\xbb\xab\x05\xa8\x5a\xec\x86\x3f\x5d\x4f\x0d\x3c\xf2\xb2\x84\x92\xdc\x42\x80\x14\x80\xdc\xac\x50\xb9\x9b\xaa\x74\x7f\x67\x90\x63\x85\x22\xa7\x4e\x5e\x0a\x22\x47\x54\x7c\x34\x56\x4c\xd3\x3d\xd6\x48\x1f\xb2\xdd\x58\x85\xd9\xf0\x4c\x88\x73\x9c\x00\x2a\x25\x15\xa9\x88\x7c\x82\x9c\x7c\x49\xdd\x9b\x7a\x20\x92\x3f\xbe\xd6\x70\x02\xaf\xf5\x8f\xc4\x9e\x39\xbb\xc2\x6b\x1d\x8d\x80\xb9\x50\xa1\x07\x1f\x13\xf4\xe8\x44\xb7\x1e\x90\x58\x9b\x30\xaf\xec\xf4\x4a\xd8\x26\x00\xad\xf0\x64\x8f\x4e\x0f\x1d\xce\xb5\x3d\xe6\x99\xc8\xad\x77\xc5\xbe\x2d\x7c\x11\x68\x7e\x3d\x8b\x7b\x06\xf3\xeb\xd9\x05\x2a\xf3\x86\x3b\xa1\xb6\xab\xef\x71\x43\x8b\xdd\xed\x64\xb6\xaa\x4d\x2e\x1f\x85\x53\x6e\xa1\x58\x86\xcb\xba\x2c\x37\xa0\xbb\x8d\x5d\x3b\xec\x2b\xad\xc3\x1f\x6a\x6e\x5f\xcc\x1e\xc6\x0f\x9c\xd3\x73\x96\x7d\x29\x94\xac\x45\x4e\xcd\x7d\x6f\xf7\x4f\xdc\xac\x66\xbc\xe8\x06\x12\x87\xbc\xc0\x86\xf2\xec\xea\xed\xfc\xf2\xee\x83\x1b\x4f\x90\x5d\x58\x6d\xe4\x9a\x19\x9e\xb1\xb2\xdc\x84\x7d\x0a\xca\x53\x98\xaf\x70\x8b\xba\xf5\x1e\xba\x6d\xb1\x9e\x8e\x9b\x73\xdb\x59\xdc\x01\x05\x74\x5e\xf4\x88\x8b\x5e\x07\xe3\x31\x5c\x99\x1f\x35\x54\x52\x6b\x4e\xc9\xce\x48\x90\x15\x75\x72\x24\x81\xf5\x34\x60\x62\x03\xa2\x5e\x2f\x50\x6d\x75\x49\xba\x73\xfd\xde\xe3\x8a\x67\x2b\x2b\x93\x95\xf7\x09\xb3\xda\x20\x48\x81\xb0\xd8\xd8\x3f\x6c\x49\xa9\xcb\x33\xf6\x47\x58\x31\x0d\x0b\x44\xb1\x25\xa8\xeb\x2c\x43\xad\xad\xc4\x07\xfc\x79\x57\xa3\x71\x8f\x96\xa6\xa9\x9f\xbf\x58\xa3\x0d\x6c\xa7\x79\x71\x61\x67\x27\x6b\xf6\x05\xe3\x6c\xc5\x04\x48\x9d\xce\xac\x86\x46\xf0\x73\x62\x21\x04\x2b\xd3\x1b\x69\xf8\x72\x13\x5b\xf8\x11\xf8\x0f\x04\xa9\x57\x29\x45\x76\x21\xbb\x19\x0f\xf9\xf7\xff\x9f\x58\x48\xca\x3c\x5b\x7f\x20\xaf\x8e\x09\x16\x95\x22\x9e\x2c\xb5\x31\x68\x43\x85\x96\x7e\x38\xa5\x5c\x6f\xf1\xb7\x2b\x36\xe7\x5e\x2a\xe5\xd2\xee\x45\x29\xb5\x4f\x69\x9d\xdf\xa1\x52\xa1\x9f\x97\x84\x01\x59\xfa\xf3\x08\x96\x6e\xf4\x69\x5b\xcb\x5e\x0b\xf6\xe2\xe8\x38\x2f\x2d\xdb\x03\x7c\x0f\x12\xf5\x6b\x82\x97\xde\x79\x7f\x3f\xbb\x9b\xc1\xf4\xf2\xfc\xfe\xad\x6d\x1e\xd8\x1a\x27\xf6\xdb\x4b\xd7\xd4\xff\x0f\x2e\xd2\xea\xc5\xfd\x6c\xfe\xf1\xc3\xe7\x37\x57\xd7\x97\x30\x9b\x9f\xdd\xcd\xe1\xa4\x6f\x6e\x0a\xe9\x07\x26\x17\x0a\x99\xc1\x8f\xea\xbe\xca\x99\xc1\x77\x8f\xc6\x36\x11\x71\xbe\x80\xe3\x42\xaa\x75\x3a\x3d\x1f\xc1\x9f\x8f\xe6\x5e\x53\x9f\x45\x65\xbd\xd4\xe9\x3b\xf7\x9e\x40\xec\x26\x12\xde\xcb\x1a\x5b\x47\xde\xa2\x01\x7c\xe2\xda\x50\xe8\x2e\x36\xa0\x70\x2d\x0d\xc2\xd5\xd4\x46\x60\x37\xde\xb8\x9a\x86\xc1\x03\x53\x5b\xc8\x5d\xd2\xd6\x47\xf2\x45\xfa\x69\x85\x0a\xe3\xa8\xd6\xa8\x3e\x0b\x3a\xda\x29\xfc\x0a\x67\x37\x53\xc0\x35\xe3\x25\xbd\x45\xbd\x78\xd4\xa1\x2b\x02\xda\xae\x5c\x12\x54\x92\xbe\xe1\x4a\x9b\xf8\xa8\xe3\x95\xd8\x11\x88\xca\x6f\xa4\x79\xe3\xb2\xd4\xd0\x57\xf2\x45\xea\x74\x12\x7b\x2a\x09\xb9\xa3\x54\xe1\xd0\x59\xe8\x8e\x25\xb8\x3b\xba\xcd\xdd\x1d\xc7\xab\x29\x9c\xf6\x87\x4a\xe9\x94\xdd\x8e\x23\x9a\x9f\x99\x21\x40\xbf\xb8\x1d\x7d\xb2\x52\xe3\x88\xa4\x98\xb1\x87\x67\x32\xb4\xa1\x6b\x93\x07\xa6\x76\x81\x32\x68\x9a\x07\x93\xd0\x7e\x2c\x16\xdb\x59\xdb\x1e\x4e\x02\xbb\x33\xbe\xe1\x74\xcc\x57\xf1\xf0\x9b\xa3\x88\x17\xe9\xfe\xa7\x63\xc1\xff\xda\x5c\x70\x70\x94\xa3\xe1\x7a\x73\x21\x73\x9c\xc0\x60\x10\x7b\x23\xcd\xd5\x76\x94\x3a\x82\x73\x99\x6f\x26\x10\xdd\x48\x03\x83\xf5\xa8\x0d\xb7\x9f\x7d\xf6\x63\xeb\xf2\x66\xba\x17\x59\xdf\x08\xbe\x35\x2f\x14\x33\x0e\x84\x9c\x3f\x0e\x03\xff\xf5\x6e\xee\xbe\x17\x9d\xc2\xdf\xfe\xd1\x0f\x61\x9b\xb6\x19\xe8\xfe\x83\x8d\x8f\xb6\x3d\xf2\x81\x72\x50\x29\x0d\xdd\x6e\xfb\x1b\x98\xfd\x2e\x37\x08\x72\xc7\x24\xe6\x7a\xae\x6a\x91\x31\x83\xdd\x40\xd1\x31\x4f\xd3\x74\xc0\xdb\xc6\x84\x4f\xaf\x16\x60\x9b\x61\x3d\xbc\xcf\xdb\x03\x72\x8d\x1f\xa3\xfb\x48\x9a\x9e\xa7\x53\x25\x2b\xcb\xf6\x6a\x79\x49\x3e\xaf\x63\x8b\xec\xdd\xf9\xff\x9e\xa5\xe3\xa0\x62\x82\x67\x31\x2a\xd5\x4d\xc5\xed\xff\xe1\x94\xee\xac\x36\xf2\x83\x53\xa4\x97\x6c\x02\xaf\xb5\x1b\xd8\xd9\x18\xd0\x56\x1b\x9e\x11\x91\x99\x9e\xa7\x03\x24\xbf\xe1\xe7\xed\xfb\xa6\xda\x35\xd2\x78\x0c\x0f\x7c\x3d\x81\xa5\x39\x2d\x64\xf8\xcf\x00\x00\x00\xff\xff\x67\xa6\x94\x23\x77\x1f\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 8055, mode: os.FileMode(420), modTime: time.Unix(1511528641, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDatabaseGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x41\x6f\xe3\x36\x13\x3d\x4b\xbf\x82\x9f\x00\x2f\xe4\x85\x23\x1d\xbe\x4b\xe1\x42\x68\xe3\x38\xdd\x4d\xb1\xd9\x0d\xe2\xec\xa9\x2d\x02\x4a\x1a\xc9\x6c\x29\x52\x19\x8e\x9c\xcd\x06\xfe\xef\x05\x49\xd9\x91\x1d\xa7\x0d\xb2\x45\x91\x1e\x0c\xdb\xc3\xe1\xcc\x9b\x37\xc3\x87\x69\x79\xf1\x07\xaf\x81\x95\x9c\x78\xce\x0d\x84\xa1\x68\x5a\x8d\xc4\xe2\x30\x88\x00\x51\xa3\x89\xc2\x20\xaa\x1a\x8a\xc2\x30\x88\x6a\x41\xcb\x2e\x4f\x0a\xdd\xa4\xbf\x0b\xf5\x75\xd9\xa5\xb5\xc6\x26\x0a\x83\x6b\xf6\xc4\x59\x5a\x0a\x2e\xa1\x20\x93\x36\x77\xe6\x46\x3e\xcf\xb5\xd5\x86\x6a\x04\xf3\x3c\x6f\x73\x23\x05\x41\xb4\x0b\xaf\x45\x30\x46\xde\xa5\xb5\xd6\x66\xff\xac\xe2\x24\x96\xa9\x21\xec\x0a\x32\x7b\x67\xa8\x4d\xa1\x5b\x28\xb4\x24\xe4\x2a\xe5\x65\x23\xd4\x91\x56\x47\x08\x86\x8e\x0c\xe0\x0a\x30\xed\xbf\x0a\xad\x2a\x51\xbf\xfc\x7e\xa3\x4b\x90\x26\x0a\xc7\x61\xb8\xe2\xc8\xe6\x33\xf6\xd6\x16\x96\xcc\x67\xde\x10\x87\xc1\x82\x38\x75\x86\xe5\x5a\xcb\x30\x98\x43\xc5\x3b\x49\x57\x3c\x97\x60\x58\xc6\x7e\xf9\x4d\x28\x02\xac\x78\x01\xf7\xeb\xfb\x30\x08\xde\xf8\x88\xc9\xc9\x52\x8b\x02\xce\x08\x9a\xfb\xf5\x64\x60\x9f\x73\xe2\x0b\xdd\xa1\xf5\x1f\xda\x4f\x15\x09\xba\xdb\xb5\xfd\x7c\x4b\x9f\x0d\xe0\xae\xf1\x02\xb0\x11\xc6\x08\xad\x76\xed\x97\x5a\xee\x85\x7c\x7c\xf7\x1d\x72\x45\x50\x1e\x77\xb4\xd4\xf8\x28\xdd\x71\xdb\xca\xc7\x08\xac\x33\x28\x12\x05\x27\xa1\xd5\x25\xdc\x74\x60\xc8\x79\xad\x2d\x6b\x55\xa7\x0a\x26\x94\xa0\x78\xcc\xee\xc3\xc0\x72\x06\xe8\x3e\x1a\xc3\xa0\xcc\x4f\x5c\x83\xd8\x34\x63\xbe\x55\x89\x37\x58\x82\x03\x51\x3d\x32\x26\xc7\x25\x6f\x09\x90\x65\x19\x8b\xfc\xb4\xda\xb0\xc1\x7c\x36\x71\x71\x33\xe6\xda\xf3\xa9\x05\x15\xf7\xe7\x13\x56\x35\x94\x2c\x5a\x14\x8a\xaa\x38\x1a\xad\xa6\xa3\xd5\x8f\x54\xb4\xb1\xfb\x35\x4e\x47\xab\x1f\x5a\x8e\x06\xae\x44\x03\xd9\x15\x76\xf0\x46\xea\x22\xfb\xa0\x0b\x6e\xef\x6e\x10\x3a\xb6\x06\x7f\x2f\xb8\x31\xb7\x1a\xcb\x81\xe9\xbd\x36\x34\xf4\xd0\x38\xfc\xfb\x91\x37\x30\x1e\x3b\xa8\x2c\x63\xf3\x59\xb2\x00\x8a\x23\x8b\x76\x4a\x76\x5a\xae\x75\x6b\x09\x34\xd1\x84\x45\x27\xef\x8f\x2f\x17\xa7\x57\x59\x47\xd5\x77\xd1\x38\x0c\xd6\x0c\xa4\x01\xf6\x77\x7c\x6c\x9f\xe4\xd3\x94\x6c\x5d\xf6\x58\xd9\xd8\xa7\x69\xea\x09\x1a\xad\x2c\x31\xc6\x48\xdb\xe9\xac\x14\xc6\x62\xfc\x26\x3e\x36\x04\x3c\xb3\x98\x5e\x31\x5c\x29\xfe\xf7\x4f\x42\xc2\x05\xa7\xa5\x1d\x96\xbd\x96\x8e\x56\x49\x99\x0f\xd1\x5d\x20\x54\xe2\x8b\xf5\xde\x47\x10\x06\x07\xe6\x0a\xf2\xae\x76\x99\x02\x1b\xf8\xa2\x8f\x3b\x9f\xb1\x85\xcb\x3c\x61\x95\x90\xd0\x72\x5a\x4e\xd9\xc8\xb0\x5f\x55\x34\x61\xbb\x98\x6c\xd8\xf5\x53\xa4\x7b\xd7\xff\x1f\xba\xd4\x93\x61\x53\xb7\x5c\x89\x22\xf6\x7a\x9e\x7c\x84\xdb\x38\x52\x9a\x98\xe9\x5a\xab\xf5\x50\x6e\xe5\x9f\x71\xcf\x52\xe4\xc8\x0c\xdd\x33\x71\x29\x33\xa6\x84\x74\xa1\x44\xf5\x50\xf4\xa0\xb6\xf9\x2c\xf9\xa0\xeb\x73\x5d\x42\x4c\xd8\xc1\x06\xf3\xd0\x7b\x21\x54\xdd\x49\x8e\x4e\xc0\xb6\xb7\x76\xac\x3b\x77\x7b\xf1\xcb\x98\x35\x1e\x2e\xc7\xa3\x5c\x87\x61\x9a\xb2\x33\x25\x48\x70\x29\xbe\x02\x7b\xf7\xe9\xf2\xdc\xea\xa9\x50\x86\xb8\x2a\xc0\x2b\xc5\x83\x43\xec\x5b\xc4\xde\xf6\xad\x5a\x00\xae\x44\x01\x1e\xe7\x78\x2b\xc3\x1b\x51\x29\xf3\x07\x65\x7e\x86\xca\xf4\xf2\xb2\xad\xfb\x09\x59\x29\xf3\xff\x8c\xac\x94\x39\xcb\x58\x99\xbf\x4c\x56\x0e\xf2\xb0\x2b\x27\x07\xa9\x78\x55\x72\x72\xb0\x88\x7f\x45\x46\xfe\x39\xfd\x38\xc8\xf2\x6b\xd1\x8f\x32\x7f\x89\x7e\xd8\x99\xfc\x76\xfd\x08\x10\xa8\x43\xc5\xca\xbc\x97\x92\x73\x51\x23\x27\x60\xa4\x99\xe4\x04\x86\xd8\x0a\xd0\xae\x3d\x5e\x48\xfa\xe3\xbf\x54\x91\xc9\x50\x35\xc6\x5e\x2d\x6c\x6e\xb7\x8f\x26\x9f\xdb\xb8\xcc\x93\xf9\x2c\x1e\x4f\x1e\x54\x23\xf1\x71\xed\x8b\x9a\x0b\x0b\xad\x87\xa5\x84\xb4\xb8\x5c\xea\x13\x04\x4e\xe0\x57\xc0\x58\x98\x2b\xec\x54\x61\x91\xda\x0d\x71\xc2\xc8\xaf\x86\x49\x92\x0c\x36\x43\xb7\x1b\x55\x1a\xd9\x75\xef\x60\x87\x13\xb9\xaa\x61\xe3\xdf\xb7\x65\x10\xce\x91\xdb\xf7\x6e\xea\x36\x8a\x39\xea\xd6\xa5\x3d\xab\x4e\xbf\x08\x43\x26\x76\x97\xc7\xc9\xa9\xad\xec\x7b\xe7\xf9\xbf\x87\x2e\xef\x72\xec\xfb\x61\x3f\xc3\x11\x3e\xee\x48\xf7\x54\xf6\xc8\xec\x04\xfb\x01\xf6\xbb\xb9\x7b\x0e\x7d\x22\xbf\xde\x24\x83\x4b\xfd\x81\x6d\xe1\xeb\x6d\xdb\x9f\x01\x00\x00\xff\xff\xc6\x6c\x86\x75\x61\x0d\x00\x00")

func templatesDatabaseGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesDatabaseGotmpl,
		"templates/database.gotmpl",
	)
}

func templatesDatabaseGotmpl() (*asset, error) {
	bytes, err := templatesDatabaseGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/database.gotmpl", size: 3425, mode: os.FileMode(420), modTime: time.Unix(1511442679, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4f\x6b\xdc\x30\x10\xc5\xcf\xd2\xa7\x98\x8a\x6c\xb0\x61\x2b\xdf\x17\x72\x48\x13\x4a\x02\xa5\x5d\xb2\x85\x5e\x7a\x99\xf5\x8e\xb5\x22\xb2\xe4\x4a\x63\x87\x62\xfc\xdd\x8b\xbc\x7f\x70\xe8\x25\x37\xdb\xef\xcd\x6f\xe6\x3d\x77\x58\xbf\xa2\x21\x68\xd1\x7a\x29\x6d\xdb\x85\xc8\x50\x48\xa1\x9a\x96\x95\x14\xca\x05\xa3\xa4\x14\xca\x58\x3e\xf6\x7b\x5d\x87\xb6\x8a\x21\xd5\xa1\xa3\x3a\x38\x8e\xe8\x2b\x63\xfd\xe7\xf4\x86\xc6\x50\xac\xea\xe0\x1b\x6b\xd4\x87\xfd\x07\x64\xdc\x63\x22\x25\x45\x55\xc1\x23\x35\xd8\x3b\x7e\x9e\x8f\x48\x52\x8c\x63\x44\x6f\x08\xf4\x7b\x61\x9a\xc6\xb1\x8b\xd6\x73\x03\x6a\xf5\x47\x81\x9e\xa6\xec\x25\x7f\xc8\x0f\x55\x05\xff\x01\x6e\x5e\xe9\xef\x1a\x6e\x06\x74\x3d\xc1\xe6\x0e\xf4\x82\x94\xb5\x69\x82\x71\x84\x25\xf3\xe4\x5d\x82\x4b\x29\x07\x8c\xb9\x1a\xec\xec\xc3\x9c\x13\x22\x25\xc6\xce\xea\xd3\x6b\xb6\x34\xbd\xaf\xe7\x2e\x8b\x12\x46\x29\x45\xd3\xb2\xde\xce\xdc\x42\x7d\xb3\x89\xc9\x5b\x6f\x20\xf8\x0d\xac\x86\xdf\x5e\xad\xe1\xd4\xd8\x99\xa0\xb7\x21\x72\xf9\x7e\xea\xf1\x5c\x11\x24\x46\xee\xd3\x06\x56\x3c\x0f\x5e\xaa\xd3\xbb\xf9\x7b\x29\xa5\xa0\x18\x73\xba\xeb\x7d\x7a\x8b\x31\x51\x51\x4a\x61\x1b\xc8\xe2\xa7\x3b\xf0\xd6\xc1\x28\x85\x70\xc1\xe8\xaf\xc8\xe8\x0a\x8a\xb1\x94\x62\x92\x52\x5c\x91\x0f\x91\x90\xe9\x27\xee\x1d\xa5\x82\x63\x4f\x8b\x75\xe7\x7f\x71\x12\xb5\xd6\xa5\x14\x69\xa8\xf3\xde\xdb\xfb\x43\x6b\xfd\x0f\xff\x42\x89\x77\x14\x07\x8a\xe3\x13\xa1\xe3\xe3\x06\x1a\x74\x89\x26\xa8\x2a\x58\x43\x0e\xb4\x0b\x7d\xac\x69\xb3\xa0\x7e\xc9\x07\x60\x67\x33\xe8\x52\xeb\x77\x7a\xbb\xdf\x3e\x17\x69\xa8\xd7\x70\x7b\x4d\x75\x49\x3a\x07\xd5\x2f\xbd\xff\x65\xf9\xb8\xb3\xe6\x09\xfd\xc1\x51\xfc\x70\xdc\xe9\x5f\x00\x00\x00\xff\xff\xf6\xf1\x7f\x2a\xfb\x02\x00\x00")

func templatesMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainGotmpl,
		"templates/main.gotmpl",
	)
}

func templatesMainGotmpl() (*asset, error) {
	bytes, err := templatesMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.gotmpl", size: 763, mode: os.FileMode(420), modTime: time.Unix(1511528585, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMigrateGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8e\xb1\x4e\xc4\x30\x0c\x86\xe7\xfa\x29\xac\x48\x20\x4e\xe2\x9a\x27\x60\x63\x61\x80\x89\x0d\x31\xf8\x52\xb7\x17\xd1\x24\xc5\x71\x6f\x20\xf2\xbb\xa3\x1e\x37\x94\xc9\x96\xec\xff\xff\xbe\x85\xc2\x17\x4d\x8c\x03\x29\x9d\xa8\x32\x40\x4c\x4b\x11\xc5\x07\xe8\xdc\x98\xd4\x01\x74\x6e\x8a\x7a\x5e\x4f\x7d\x28\xc9\x8f\xa4\xf1\xec\xab\xca\x1a\xb4\x3a\xe8\xbc\xc7\x67\x1e\x69\x9d\xf5\xe5\x9a\xab\xd0\xb5\x26\x94\x27\xc6\xfe\xff\xc1\xac\xb5\x45\x62\xd6\x11\xdd\xdd\xb7\xc3\xde\x6c\xfb\xe5\x3c\x6c\xcb\x9e\x21\xa5\x86\xb2\x70\x28\xb3\x0a\x65\x4f\x43\x8a\xf9\x58\xf2\x51\xb8\xea\xb1\xb2\x5c\x58\xfc\x6d\xa4\x32\xf0\x5c\x1d\x1c\x00\x2e\x24\x9b\xf4\x0d\xfa\x4e\xa7\x99\x2b\x3e\xe1\xc7\x67\xcc\xca\x32\x52\xe0\x66\x6d\x67\xf7\x7a\x8d\x9a\xdd\xff\x75\xf4\xad\xe1\x42\x35\xd0\x1c\x7f\x18\xfb\x37\x4a\x8c\x66\xcd\x1e\x77\x92\x06\x87\xdf\x00\x00\x00\xff\xff\xe2\x61\xe9\x87\x30\x01\x00\x00")

func templatesMigrateGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMigrateGotmpl,
		"templates/migrate.gotmpl",
	)
}

func templatesMigrateGotmpl() (*asset, error) {
	bytes, err := templatesMigrateGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/migrate.gotmpl", size: 304, mode: os.FileMode(420), modTime: time.Unix(1511528670, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x51\xcd\x4e\xf3\x40\x0c\xbc\xf7\x29\x46\xb9\x37\xb9\x7f\xb7\x7e\xa2\x48\x3d\x80\x10\xf0\x02\x56\xd6\xa4\x2b\x6d\x76\xc3\x7a\x11\x05\x2b\xef\x8e\x92\x6e\xaa\x2d\x3f\x12\xaa\xb8\xd9\x1e\x7b\xec\x19\xab\x22\x71\x3f\x38\x4a\x8c\x6a\xcf\x64\x38\x56\xa8\x31\x8e\xab\x95\x2a\xec\x13\xea\x9d\x6f\xdd\x8b\xe1\x9b\x60\xd8\x4d\x75\x40\x75\x3d\x21\xfc\x8c\xfa\x96\x7a\x46\xb5\x19\xec\x3d\xcb\x10\xbc\x70\x85\x71\x6c\x1a\x6c\xee\x76\x4b\x05\x56\x90\xf6\x8c\xb8\xe4\x29\x80\xfc\xd4\x81\x96\x9c\xab\x33\x21\x3b\xe1\x23\xfd\x69\x41\xbd\x93\xed\x61\x08\x31\xb1\xc1\x3a\x43\x40\xd3\x40\x15\x03\x49\x4b\xce\xbe\x73\xbe\x61\x1c\x71\x26\xc5\x84\x56\x52\xb4\xbe\xcb\x6a\x8e\xb3\x99\xd8\x87\x34\x91\xff\x27\xe1\xc7\xb7\x61\x5e\xdb\x34\x90\x57\xea\x3a\x8e\xff\xfa\x59\xa9\xea\x89\xb9\x18\x5e\xae\x2c\xda\x8d\x95\x36\xda\xde\x7a\x4a\x21\x96\x63\x73\x7c\x55\xa2\xd7\x96\x9d\xf9\x44\xe8\x4d\xa9\x3a\xa7\x3f\x85\x85\x40\x69\xf7\xdc\x53\xf1\xab\x48\xbe\x63\xd4\xdb\x43\x8a\xf4\x30\x83\x72\xf6\xae\xd2\xcd\x23\xd9\x37\xdf\xbd\xd4\xdc\x8b\x8d\xfd\x53\x53\xbf\xda\xf6\x5b\x03\x55\x73\xcf\x47\x00\x00\x00\xff\xff\x46\xdc\x0d\xe4\x10\x03\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 784, mode: os.FileMode(420), modTime: time.Unix(1511522185, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x73\xdb\xb6\x93\x7f\x6d\x7d\x8a\xfd\xeb\xda\x0c\x99\x93\xa9\xdc\xff\x3a\x7d\xa1\xab\x3b\xd3\x38\x4e\xe3\x6b\x9a\xe4\xe2\x26\x7d\x91\xc9\xb4\x30\x09\x49\x68\x48\x80\x06\x20\xdb\x3a\x0d\xbf\xfb\xcd\x02\xe0\x03\x28\x88\x96\x1c\xf7\xda\xeb\x35\x6f\x22\xe2\x61\xb1\xfb\xc3\x62\x9f\x00\x6f\x36\x90\xd1\x39\xe3\x14\xc6\x2a\x67\x29\x2d\x89\x24\xc5\x35\xc9\x59\x46\xb4\x90\xe3\xaa\x1a\x6d\x36\xc0\xe6\x20\x24\x24\x3f\x32\x7e\xae\x69\xa1\x20\xf9\x91\xdc\xda\x5f\xb6\x3f\x25\x05\xcd\xd9\x7f\x53\x48\x5e\x91\x82\x42\x55\x5d\xe0\xc7\xec\x04\x18\xd7\x5f\x7f\x15\xe5\x94\x47\x96\x0a\xe1\x19\x44\x5c\x68\x48\xce\xd5\x77\x52\x92\x75\xec\x3e\x5f\x10\xf5\x8c\xa9\x54\xb2\x82\x71\x5c\x38\x6e\x86\x9d\x73\x4d\xe5\x9c\xa4\xb4\x6d\xba\xd0\x92\x92\x22\xc6\x9f\xaf\x56\x79\x4e\x2e\x73\x5c\xf3\xf1\x66\x03\x94\x67\x50\x55\x9b\x0d\x24\xef\x49\xbe\xa2\x67\xb7\xa5\xa4\x4a\x31\xc1\xa1\xaa\xe2\x78\xd4\x8c\x70\x42\xb5\x12\x55\xd5\x88\xcd\x81\x4a\x89\x5c\x3b\xf1\x69\xd3\x8d\xdc\x27\x6f\x88\x5e\x42\x55\x4d\x60\xb3\x81\x52\x32\xae\xe7\x30\xfe\xf2\x6a\x0c\xc9\x4b\x91\x12\x6d\xd7\x30\x9d\x41\x34\x4c\x4f\x77\xbd\xf8\x3f\xcc\x72\xff\x38\x01\xce\x72\xd8\x8c\x00\x24\xd5\x2b\xc9\xb1\x75\x54\x05\x58\xed\x40\x1e\x62\xd5\x75\x3f\x10\xab\x0d\xbd\xc3\x19\x7d\xc7\xd9\xd5\x8a\x0e\xf1\xda\x19\x71\x18\xbb\x7f\xb4\x06\x1d\x88\xc4\x19\x5f\x15\x3b\x20\xc0\xae\xff\x53\xb2\x5b\xfd\x75\x12\x1d\x02\x44\xfb\xab\xb6\x33\x0e\x04\x26\xf8\x1b\xe4\x58\xb3\x6b\x3a\xb6\x43\xdc\x91\x7c\x49\xf9\x42\x2f\x77\x1e\x49\xdb\xed\x2c\x4a\x0d\x60\x07\xcb\xcd\x86\xe6\x8a\x56\xd5\x78\xbc\xd9\x50\x9e\xed\x09\xae\x0f\x47\xd4\xc5\xa3\x0f\x87\x59\x6d\x6b\x4a\xdc\x45\xd0\xf6\x9e\xae\x94\x16\xc5\x73\x21\x0b\xa2\x35\x95\x50\x55\xc9\x85\x96\x8c\x2f\xa2\x76\xb0\x3d\x6d\xad\xd0\x77\x62\x6b\x44\xaa\xc1\x22\xb7\x83\x60\xd5\xdd\x7f\x2d\xb0\x5a\xa1\x0f\x02\xeb\x8d\xa1\xcb\xc3\x50\xb9\xce\xbf\x0e\x50\xbf\x6e\x36\xad\xc4\xbf\x1e\xa6\x55\x8c\xb3\x62\x55\xec\x3c\x80\xd8\x69\xb9\xa1\x57\x90\x5c\xdc\x90\xc5\x82\xca\x9f\xd6\x25\x85\x31\xe3\x9a\x2e\xa8\xc4\xf3\x7c\xce\x75\xc3\xce\x43\xc3\x3a\xb4\x2e\xb3\xeb\xe6\x0a\xe1\x9b\xe7\x82\xb4\x6c\x7c\xfd\x55\x14\xc2\x78\x78\x57\xe2\xfa\x84\x5a\x4c\xcc\xd7\xd9\x6d\x9a\xaf\x14\xbb\xa6\x4d\xf3\xa1\xc7\x76\x00\x60\xdb\xf9\xff\x0e\xe0\x1a\x93\x1e\xc0\x75\xf3\x61\x00\xaf\x72\xcd\xca\x9c\xbe\x9e\xef\xc0\xb8\xe9\x7f\x38\xe0\x0c\x12\x9f\x03\x40\x87\xe7\x83\x84\x45\xa7\x3c\x1c\x65\x3c\xa4\x66\x7c\x5e\x10\x72\x08\x2c\x07\x7b\x86\x96\xf7\x7f\xb9\x1e\xd7\xb8\xec\x0d\x65\xfd\x7f\x13\xa7\x94\x52\x94\x54\xea\x75\x2f\x25\xea\x04\x78\xe7\xaa\x89\x60\x2c\xb4\x9a\x16\x65\x4e\xf4\xae\x20\x27\xb1\xa3\xfc\x28\x31\x24\x5f\x68\x33\x6d\xbf\xd1\x58\xb3\x83\x28\xf3\x78\xb3\x69\xf6\xa8\xaa\xc6\xb6\xc1\x9d\x5b\x3b\xde\xb4\x86\xd0\x6d\x20\x9c\xc0\xdc\x8c\x54\xc3\x48\x05\xf8\x36\xdb\xdf\x17\x3c\x94\x45\x76\x05\x3f\xee\x85\x85\x35\xda\x97\x8c\x67\x65\x0d\x95\x99\x3f\xde\x19\x41\xb6\x6b\xe0\x2c\x6b\x95\x46\xd7\x44\xa2\x0e\x5c\x13\xc9\x31\x97\x49\x4e\x97\x2c\xcf\x02\x91\xec\x5b\x13\xc9\x7e\x2f\x8c\x5d\xab\xaa\xd1\x5c\x48\x68\x73\x5c\x3b\xeb\x05\x51\xef\x9b\x0d\x54\x75\xeb\xa9\xe0\xd7\x54\xe2\x0e\xb9\x86\xd0\xd6\x21\xf1\x73\x9e\xd1\xdb\xf7\xc4\x7d\x3a\x4b\xf9\x8b\xaf\xab\x77\xf2\xf9\x1e\x77\x5f\x12\xbe\xa0\x7b\x0d\x3f\x35\x3b\xd6\x17\xa4\xde\x24\x44\xdd\xf4\xd6\xa2\xec\xa4\x32\x3b\x01\x75\x43\x16\xc9\x45\x99\x33\xfd\x74\x6d\x45\x8b\xf6\x62\x78\xdb\x7e\xd4\xb8\xe5\x39\x4d\x11\x4a\x4b\x0d\xc3\x1a\xcb\x4d\x48\x6d\xea\x2d\xb5\x93\xc1\x31\x7e\x6c\x61\x6c\xe4\x40\x0d\xec\xef\x4a\xd3\x79\x27\xab\x93\xfa\x74\x75\x10\x69\xc8\x58\x6f\x7a\xb7\xb8\x28\x83\x3b\xa7\x9d\x33\xd3\x3d\x35\x42\xaa\xe4\x9c\x9b\x73\x80\xda\x16\xb5\xab\xed\x4c\xfb\x6c\xb7\x67\x77\xc7\xed\xb4\x46\x6b\xc7\xfb\xe9\x10\xb2\xe8\xe1\xd7\xc2\xb6\xad\xbb\xf7\x80\xcf\x59\x8e\xe4\x0d\x91\x8a\xfe\x75\x51\xdb\x1f\x19\xa7\x53\x77\xc3\x60\xe9\x39\xd3\xe6\x96\xb2\x1f\xfd\x93\xb1\xcb\x0d\xf9\xe7\x63\x1f\xbb\x77\x02\xa4\x2c\x29\xcf\xf6\xda\xa8\xb7\xfb\x62\xd5\xb5\xd1\x25\x49\x3f\x11\x6b\xb0\x92\x37\xee\x37\x8a\x34\x9d\xc2\x4f\x4b\xa6\x60\xce\x72\x0a\x37\x44\xc1\x82\x72\x2a\x89\xa6\x19\x5c\xae\x41\x2f\xa9\xb1\x39\x0b\x2a\x41\x0b\x91\x27\x38\xfe\x2c\x63\x9a\xf1\x05\xe8\x66\x5e\xc1\x16\x4b\x0d\xa5\x14\xd7\x14\xe6\x2b\x6d\x48\x2d\x29\x87\xb5\x58\x81\xa4\xc7\x72\xc5\x3d\x4a\xf5\x12\x90\x8a\xa2\x20\x3c\x1b\x8d\x58\x51\x0a\xa9\x21\x1a\x01\x8c\x39\xd5\xd3\xa5\xd6\xe5\x18\xf1\x1e\x2f\x98\x5e\xae\x2e\x93\x54\x14\xd3\x05\xe3\xc7\x0b\xc1\x59\x8a\xbf\xc6\xfd\x4e\x71\x2c\x4a\xca\x49\xc9\xa6\x56\x51\x07\x06\xd4\x8e\x7b\x60\x88\x5c\x71\xcd\x8a\x3d\x46\x4c\x0b\x96\x65\x39\xbd\x21\x72\x68\x30\x4a\xde\xef\x96\x42\xa5\xa2\xa4\xa9\xc8\xb5\x24\xdc\x48\xe7\x00\x9a\x92\x92\x19\xe9\x95\x96\xf3\x42\xef\x24\x6a\x7a\xcd\xc0\xe9\x14\x9e\xd1\x39\x59\xe5\xfa\xdc\x20\xa9\xac\xe6\x59\x1f\x95\xf8\x5d\xd6\xf5\x79\x87\xb4\xd6\xd4\x46\xe9\xa7\x53\x08\x10\xfa\xe2\x13\x5d\x4f\xe0\x8b\x6b\x54\x35\x3c\x4e\x89\x47\x11\x7b\xf1\x9c\xf5\x88\xbb\xe1\xbd\x25\x62\xa3\x79\x4f\x57\x8a\x71\xaa\xd4\x4b\xb1\x60\x29\xce\x23\x2a\x25\x5e\xd5\x13\xe8\x2d\x4d\x57\x9a\x2a\xa3\x40\xa9\x90\x14\x72\x1c\x0c\x62\x6e\x5a\x24\xc5\xa3\x98\x21\x31\x29\x56\x9a\x22\xfd\x52\x30\xae\x93\xd1\x7c\xc5\xd3\x3d\x56\x88\xe6\x80\x23\xa3\x54\xdf\xc2\xe3\x05\xe3\xe8\x6e\x34\xbd\xd5\x4d\x70\x2e\x89\x29\x97\x4e\xa0\xb4\x3f\x1f\x07\xc9\xd8\x71\x8d\x80\x31\x3c\x26\x25\x4b\xde\x52\x55\x0a\xae\x68\x0c\x48\xf9\x05\xe1\x59\x4e\xe5\x73\x64\x6c\x33\x3a\x72\x76\xd5\xf0\xb9\xb5\x7c\x8c\x23\x8e\xfa\x4c\x4c\xa7\xed\xe1\x71\xec\xcc\xa5\x28\x40\xd2\xab\x15\x55\x7a\x74\x74\xe4\x5a\x67\x27\xf0\x68\x88\xcf\x6a\x74\x74\xe4\x3c\x85\x9d\x91\xa0\x73\x7f\x6b\xc9\x20\x33\xf1\xe8\xe8\xa8\xef\x0c\x8e\xcc\x9c\xd7\x97\xbf\xe1\x34\x2a\x65\x12\x3d\x76\x4e\xe1\x54\x14\xa5\x50\x4c\xd3\x33\xfc\xc6\xb9\x47\xa5\x14\x97\x39\x2d\x70\x28\x22\xf1\xc6\x7e\x1a\x22\x47\x3f\x31\x9d\xd3\x19\xc0\xf8\x1d\x2f\xa5\x48\xa9\x52\x26\xed\x38\xe3\x9a\xe9\x75\x32\x9e\x98\x41\x17\x9a\xe8\x95\x9a\x01\xe3\x3a\xb2\xcb\x26\xa7\x22\xa3\x51\x1c\xdb\xfe\x67\x54\x13\x96\xcf\xc0\xf5\x99\x95\x23\xdb\x87\xd2\x1d\xa5\xfa\x36\xf9\x59\x32\x4d\x65\xf2\x82\x92\x8c\xca\x28\x4e\x2e\xa8\x8e\xc6\x06\x61\xae\x8f\xd1\xf5\x60\x60\x4e\xca\x32\x67\xd6\x3f\x4d\x1d\xd7\xff\xfa\x9b\x12\x7c\x1c\xd7\x64\xfe\xf3\xe2\xf5\xab\xc8\x75\x25\x96\xaf\x09\xb8\x6f\x33\xc8\x6e\xe5\xc8\xae\xdc\x6a\x39\x76\xa8\xd2\xb8\x63\xc4\x74\x97\x4a\xb9\x0c\x07\x29\xa9\x1b\xa6\xd3\x25\xe0\x34\x23\xad\x41\x3d\x25\x8a\x02\x9a\x44\xb7\xf6\x2b\xe1\x44\x98\xd5\x0c\x7e\x77\x29\xa4\xfe\x99\xe9\xa5\x1d\x10\x35\xf3\x91\x66\x66\x8f\xff\xcc\x93\xa6\x19\x31\xb1\x8b\x3d\x15\xd9\x3a\xb6\x02\x54\x23\xeb\x17\x06\xf4\x07\x52\xc1\x35\x61\x5c\x01\xc9\x73\x73\x10\x2f\xc5\x8a\x67\x8d\x4e\x0a\x69\x1a\x37\x1b\x58\xae\x0a\xc2\xbd\x13\x8d\x3e\xd3\x80\x8d\x6b\xe8\x75\xc9\x52\x92\xe7\xc6\xd5\x28\x0a\x44\x52\x10\x97\x48\x9a\x66\x56\xb5\x89\x95\xdc\xa9\xe6\x68\x3a\xc5\x69\xce\x50\xce\xcc\x7a\x54\x53\xa9\x8c\x63\x73\x4b\x8c\x34\x06\x15\x43\xec\x2b\x2d\x57\xa9\x86\xcd\xc8\xb3\x93\xed\x31\x7b\xec\xb6\xea\x19\xc5\xb4\xb9\x74\xa1\x0b\x2e\xb1\xd5\xe2\x95\x00\x91\x4b\x26\xa9\xb3\xa2\xf5\xd7\x0c\xb4\x5c\xd1\xfe\x58\x57\x3f\xb1\x43\xdd\xc7\xac\x0e\xa0\xfb\x55\x16\xa8\xaa\x6f\xc0\xbb\x08\x68\x3b\xb6\x08\xdb\xca\x97\x23\x6c\x3f\x02\x84\x9b\x51\xdf\xf6\x08\x37\x1d\x5b\x84\x9b\x3a\x88\xa3\xed\xbe\xe1\xf5\x7c\x66\x2f\xd1\xba\x03\x02\xf2\xda\xe2\x70\x23\x31\xd8\x6f\x37\xb7\xd3\x1d\x90\xc8\x9b\xca\xb8\x3f\xb5\xd3\xdd\x9f\xea\x0a\xad\x76\xa2\xfb\x98\xb9\x28\xa8\xee\x09\x70\xda\x5c\x92\x59\x46\xcd\x67\xc3\x67\xdd\x19\x60\xb3\x3b\x8f\x71\x6f\x5e\xdb\xd9\x9f\xd7\xbb\x97\x03\xb0\x0d\x61\xb5\xe9\x84\xd2\x23\x80\x73\x27\x4c\xa7\xb5\x3f\x21\x90\xe3\x8d\x00\xda\x56\xb0\xcd\x96\x4e\x60\x70\x9f\xde\x0b\xa2\x5c\x40\x61\x29\xb9\x8f\xd9\x76\x99\xa7\x1d\xd6\x8d\x2d\x1e\x4f\x9b\x3c\xd1\x54\xa1\x2e\xd2\x25\x2d\x88\x8b\x4a\xda\x03\x7b\xfe\xcc\x05\x13\x0f\x76\xbd\xf6\x9c\xe5\xd4\x1c\xf1\x43\x6e\xdc\x5c\x8a\xd2\x2d\x17\x84\x03\x95\x3e\xa7\x56\xac\xe4\x5c\x3d\x25\x8a\x22\x09\x7f\x95\xde\xa0\x9a\x91\x81\xc5\xdb\x84\x04\x6c\x41\xac\x1a\x8d\x02\xf1\xc1\x80\xd9\x7b\x2e\x45\x71\xaa\x6f\x61\x41\xb5\x8d\xa7\x4a\xcf\x1a\x1a\x73\x8b\xcd\x0b\xc6\x8d\x81\xa7\xb7\x75\x18\x75\x37\xd1\x40\x00\x33\x14\x28\xa1\x5f\xb3\xab\x4f\xe0\x17\x74\x90\xe8\x98\xbe\x47\xef\x6c\x5b\xd1\xf7\xba\xf8\xc8\xc5\x27\xd1\x10\xb9\xb8\x5b\x05\x33\x91\x65\x1b\xcd\xc0\xa5\xd0\x4b\xc0\xf0\x46\x99\xed\xa9\xa3\x7f\x05\xa4\x8e\x9b\x26\xc0\x34\x10\xa5\x56\x85\x09\x34\x89\xc6\xcc\xa4\xcc\xe9\x2d\xe6\x38\x7c\xa1\x80\xe1\x57\x41\xb9\x06\x02\xae\xfc\x84\xbb\x18\xd9\x10\x3c\x79\x4b\x17\x4c\x69\xb9\x8e\x6d\x92\x8c\x21\x8b\x55\x3e\x64\x05\x9d\xa1\x32\x04\xc0\x84\xc2\x0a\x17\xbb\x61\x79\x0e\x2b\x45\x11\x7b\x62\xb2\xa7\x82\xea\xa5\xc8\x00\x9d\xa1\xb2\xa0\x9b\xf4\xfa\x2d\x4d\x29\xbb\xa6\xb2\x56\xb3\x41\x14\xa0\x17\xc4\xf5\x36\xc4\x32\x87\x49\xfd\x35\x91\xe8\xf6\xe1\xc3\x47\xd3\xd6\x16\x6e\x1a\x4d\x72\xf5\x03\x53\x74\xb2\x42\xbe\xa2\x37\xd6\x26\xa8\x4e\x71\x77\xd4\x4e\x7d\x41\xd4\x7f\xad\xa8\x5c\x37\x24\xae\xcc\x6c\x97\x27\xd9\x04\x55\x21\x57\xb5\x2f\x4f\xde\xbd\x7d\x99\x98\x29\x51\xbc\x8b\x22\xae\xd8\x10\x6c\x4b\xaf\x5d\x2a\xa6\xc2\x61\x3d\x0f\x91\x1a\x27\x44\xff\xfe\x4f\xf8\xe6\x1b\xf8\xe7\x93\x7e\xdd\xb4\x1b\xd2\x9a\xa8\xe2\x4c\xca\x57\x42\x37\x93\x5d\xc1\xa3\xfe\xd7\x29\xb2\xd6\x4d\x55\x53\xac\xd9\xc5\x89\x61\x60\xbb\x60\x3b\x4c\x75\x74\x54\xf9\x32\x1b\xb4\x1a\xc1\x47\x00\xf3\xec\x2e\x34\x71\x5a\xdc\x4d\xb2\xfa\x90\xf6\xa3\x1c\xdf\x0c\x7b\x45\x63\x5b\x45\x6e\xb7\x13\x77\x33\xa8\x78\x13\xb8\x5a\x7e\xda\xd1\x63\xce\xf5\x95\xc2\x63\xfd\xfa\x87\xee\x93\x8a\x4e\xa1\xc9\x15\xfa\x7a\x5a\x6e\x92\x91\x80\x3b\x88\x0e\x67\x62\x67\x05\x1d\xcc\x01\x68\x0a\x2f\x92\x2a\x53\x3b\x6b\x2b\x4c\x6d\x59\xee\x5c\x21\xe3\x35\x10\x32\x6c\xff\x67\x27\xf0\xe1\xa3\x32\x95\xfb\x0d\x6e\x8b\x19\xee\x49\x5d\xdd\x5b\xec\xf0\x92\x13\x13\x1f\x3c\x94\x88\x36\x47\xaa\x85\xbc\x1f\x9f\x5d\x75\xb4\xf4\x3e\x98\x63\x76\x4a\xb8\xe0\x18\xe7\xdb\xc6\x1f\xe8\xda\x03\xe6\xe3\xc3\x4a\xd2\xd8\x0c\xa3\xcb\xae\xad\xf6\xfd\x56\xbf\xb7\x5e\x57\x85\xdf\x5c\x59\x76\x27\xa1\xb3\x8e\x8b\x20\xd1\x1d\x7a\x7d\x37\xef\x98\x36\xbf\xa2\x37\xd1\x57\x4f\x9e\x4c\x60\x2c\x29\xc9\x18\x5f\xd8\x72\xda\x97\x57\x30\x27\x2c\xc7\xc4\xe1\xcb\xeb\xf1\x56\x4d\x35\xf2\xf9\x8c\xeb\xb2\x6f\x6c\xe0\xb0\x48\xd8\x85\x43\x7b\x17\xd6\xde\xd6\xb2\xa0\x50\x9b\x67\x44\x93\x59\x10\x92\x09\x58\x50\xc2\xbd\xb6\xaf\xea\x6d\x4b\x55\xcd\xb3\x5d\xc7\x33\x1b\x36\x1f\xf3\xec\x41\xed\xc7\x7d\xf8\xf8\x1c\xa5\xec\xd9\xe1\xbe\xa6\xfe\x6d\x71\xc3\x87\x18\xc3\xb4\xde\x41\xfe\x5b\x83\xfc\xe0\xc8\x41\xf4\x54\x64\x4e\x5f\xda\x3c\x8a\xcd\x9b\xc3\xfc\x82\x98\x11\x5d\xc3\x1c\x77\x6e\x23\xfb\xf9\x87\xab\x00\xec\x6b\x32\xba\xf6\x10\x97\xf1\x8e\x7c\x87\xcd\xad\x54\xa8\xd3\x74\x76\x5b\x0a\xa9\x4d\xc5\xe4\x52\x64\x6b\xef\xfa\xef\x47\x91\xd1\x5c\xb5\xb7\x15\xc9\x3b\x5e\x10\xa9\x96\x24\xdf\x6c\x30\x2a\x65\x65\xdd\x57\x5f\x24\x6d\x4d\xd9\xba\x11\xbf\xc8\x59\xda\xe6\xd4\x51\x5f\x84\x89\x2d\x23\x63\xcc\x8c\xd9\x80\x0c\x98\x74\x08\xd6\x7a\x9a\x61\x27\x27\xc0\x44\x72\xf6\xfa\x79\x13\xf6\x99\xd6\xda\xe4\xd7\xb3\xf6\x7e\x62\x1a\x8f\x6c\x84\xe8\xec\xb9\xe5\x7b\xa7\xda\xb4\xf8\x63\x88\x8f\x88\xf6\xee\xd4\xa1\x17\xbb\x62\xa2\x64\x0a\x82\x8f\x70\x70\x4f\x45\x0f\x16\x75\xa7\xa7\xeb\x8a\x7d\xa7\x2f\x1b\x42\xc3\xc1\xe1\xbc\x9c\x77\x69\x31\xec\x68\x4d\x70\x6e\x8b\xc4\x9f\xc9\xc3\x04\xc6\x63\xe7\x70\x77\xe0\xd3\xdb\xad\xee\x51\xee\xfb\xe7\xa0\x23\xa8\xef\x0f\xed\x67\x14\x28\x2a\x74\xcb\x1b\xde\x9b\x82\x9c\x11\x45\xb3\xce\x55\xb2\x4d\x64\x5f\x5f\xfe\x46\x53\x1d\xc7\x36\xb3\x83\x5f\xec\xa3\x61\xff\x35\xc4\x56\xae\xd9\x7d\xe5\xb0\xa7\x51\xa8\x15\xc1\x37\xae\xc3\xeb\x24\x2e\xa3\xa6\xd1\x80\xa1\x1c\x34\x96\xf6\xdf\xa5\xa4\xe4\xd3\xa8\xce\xa8\x02\xfb\xe0\xfd\x70\xae\x66\x1f\x70\x9b\x8e\x06\xdd\xa6\x65\x1b\xde\x56\x72\x3c\x50\x7b\xca\x36\x20\xd9\xb6\x2e\x19\x74\x73\xca\x71\x60\x8c\x87\xf0\x49\x43\xe7\x10\xeb\x7d\x60\xc1\xaa\xaa\x1e\x35\x4c\x5c\x5a\x63\x6f\x99\xeb\xdf\x1d\x06\x6a\xe1\x5d\x9d\xff\xdf\x31\x11\x55\x97\xa7\xad\x1b\xfd\xf6\x77\x17\xc9\x6f\x1b\x20\xfd\x17\x0f\xcd\xe5\x56\xfb\xf0\xc8\xda\x11\x49\x55\x92\x24\xb5\xb7\x76\x93\x38\xcb\x5d\x65\xee\x8b\x34\x27\x4a\x19\xc0\x67\x27\x10\xf5\x36\x21\x76\x2f\xa7\xb6\xb2\xf2\x36\x27\x37\xca\xe7\xf9\x78\xaf\x88\xe9\xfd\x05\x50\xf7\xc1\x5b\xf8\xe1\xda\x70\x4d\xa9\xc3\xac\x5f\x4e\x0a\xe6\xa3\xe4\x06\x33\x84\x26\xe1\x9d\xc0\x92\xa8\x1f\xe8\x1a\x2e\x85\xc8\x9b\x78\x07\x76\x54\xc7\x36\x5e\x10\x53\x97\x62\x9b\x14\x3b\xf6\x54\x87\xcd\xe1\x1f\x8e\x78\x68\x6f\xee\xe5\x4e\x3d\x25\x30\xa5\x30\x72\x03\x56\x92\x8e\x4a\x58\x19\x3d\xb5\x20\x37\x98\x28\xd9\x8e\x0f\xdd\x41\xc7\xff\xf6\xb1\xa5\xbb\x8f\x60\xb6\xf3\xbb\x3c\x17\x37\x67\x45\xa9\xd7\xa6\x9e\xe3\x9b\x8f\xe6\x79\x61\x3d\xc9\x3d\x0b\xdc\xff\x6f\x53\x24\xb9\x09\xc7\x9c\x9d\x02\x54\x20\xf2\x8e\xa0\xcf\x39\x58\x43\x68\x99\xae\xd9\x89\x77\xf1\x6f\x60\x3a\x81\xf1\x18\x36\x30\x9d\x02\xc5\xfe\xba\xf4\x59\x12\x65\xef\x0c\x85\x5e\x52\x09\xed\x5b\x4c\xd5\x75\x88\xde\x15\x83\x7b\x3d\xe8\x5b\x81\xaa\xaa\x07\x78\x25\xac\x5e\x9a\xdf\xc6\x3d\x6d\x5c\x24\x94\x4d\x71\xed\x9d\x6b\x63\x07\xbb\x07\xc8\x2b\xbd\x47\x75\xbd\x7d\xf8\x7a\x63\xfb\xd1\x69\xec\xdb\xec\xf0\x1f\xef\x04\xec\xf0\xdd\x57\x1c\xf6\xbc\x37\x96\x19\xb6\xef\x33\xba\xc6\x3a\x94\xa7\x3b\xd6\xfb\x41\x65\x63\xc0\xb6\xad\x7a\x73\x99\xd4\xbe\xc5\x33\x5b\xea\xbf\xd7\xeb\xbe\xd4\x43\xed\xbb\xd7\x8b\xb2\xbd\xff\xf0\xca\xeb\x6c\xb6\xda\xea\x7d\x2b\xc2\x10\xea\xbb\x1c\x9c\x11\x6d\x2b\x5d\xdf\x36\xaa\x3e\x04\x5b\x6f\xee\x3c\x06\xbd\xc7\xbf\x5d\x3e\xff\xd4\x08\xdd\xe3\xea\x6d\xe0\x9e\xad\xfe\xae\x41\xf7\x2f\xbc\x22\x03\xa7\xbd\xe9\x69\xb9\x8d\x6d\x5e\x63\x5f\xc4\xdf\x73\x3f\x25\xb9\xd9\xd2\x67\x67\x68\xba\xaf\x89\xef\xaa\x7b\xd6\x26\x39\x58\x18\x18\x4a\xf2\x03\x06\xb7\x66\xc4\x0b\x1b\xac\x98\xdd\xa4\xe0\xcf\xe7\xb8\x7b\xb1\xdd\xef\xee\xa0\x1b\xe3\x43\xaf\x02\xf7\xd3\xe3\x62\x95\x6b\x36\xb6\x76\x6e\x8f\xa7\xd8\xb3\xc6\x81\xfb\xa9\xf2\xd5\x75\x38\x4e\xde\x23\x2c\xd8\x35\x35\x1c\x2a\xc0\x31\xb8\x60\x61\xcf\xd7\xa1\xbb\x1e\x7e\xef\x58\x36\xf0\x04\x37\xf0\xc8\x7b\xeb\x28\x98\x42\xcd\xdd\xe1\x49\x0b\xc4\x5e\xac\x7b\xe9\xc9\xef\xa6\x18\x5e\x58\xb2\xe3\xa1\x42\x46\xe7\xef\xeb\x77\x8b\xe1\x57\xf4\x1d\x7f\xbe\x1f\x86\xf7\xc3\xe2\xd1\x23\x33\xa5\xe6\xa7\xab\x48\x3b\x8d\x5b\x3d\xd8\x2b\xf0\x7c\xee\x3e\x70\x96\xf7\xd3\xb6\x2e\xae\x83\x7f\x00\xd0\x8c\xda\x69\x8c\xef\x7e\xc5\xec\xdd\xf3\x9a\xb2\xdc\x1f\x6b\x8a\xb7\x6d\xb1\xff\x67\x35\x18\x75\xf5\xff\xfa\x24\xcc\xf9\x7d\x2c\xf6\x1e\xf2\xdc\x91\x4f\xed\xf1\x2e\x3d\xe8\x71\x82\x7f\x11\xee\x7e\x4d\xa7\x70\xcd\x8a\x19\xcc\xf5\xc9\x42\x8c\xfe\x27\x00\x00\xff\xff\x5d\x8a\x43\x8c\x92\x42\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17042, mode: os.FileMode(420), modTime: time.Unix(1511444053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRestapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\xcf\x6f\xdb\x20\x18\x3d\x9b\xbf\xe2\x9b\x0f\x8d\x3d\xd5\x4e\xd5\x53\x55\x29\x87\xac\x3f\xb4\xaa\x39\x44\x4b\xb6\x9d\x09\xfe\xb0\x51\x30\x58\x80\x53\x45\x6d\xfe\xf7\x09\x6c\xb7\x4e\xd2\xed\x30\x22\x45\xe2\x03\xde\x83\xf7\xde\xe7\x86\xb2\x2d\x2d\x11\x5e\x5f\x21\x9f\x2f\x9f\x96\xfd\xf4\x70\x20\x44\xd4\x8d\x36\x0e\x12\x12\xc5\xbc\x76\x31\x21\x51\x5c\xea\x66\x5b\xe6\x42\x4d\xa9\x44\xe6\x2a\x5d\x53\x3b\xdd\x0a\x55\x36\x42\xe5\xbb\xeb\x98\xa4\x84\x30\xad\x6c\x38\x54\x20\xa7\xad\x74\xf3\xa2\x30\x68\x2d\xcc\x20\xbe\xbd\xb9\xba\xb9\x0a\x9b\xa6\x53\xb8\xd3\x8a\x8b\x12\x0a\xe4\x42\xa1\x05\x57\x21\xb0\xae\xa4\x1b\x27\xb4\xb2\xc0\xb5\x09\xe5\xf9\xf2\x09\x2c\x9a\x1d\x9a\x9c\xb8\x7d\x83\xc3\x51\xeb\x4c\xcb\x1c\xbc\x92\x68\xe0\xf8\x18\xd6\x19\xa1\x4a\x12\xdd\xe3\xa6\x2d\x61\x3c\x36\x5a\x4b\x12\x3d\x29\x8b\xac\x35\xf8\x7d\xbd\x5e\x8e\xeb\xf3\xd6\x55\xf7\xc2\xd2\x8d\xc4\x62\x5c\x5f\x2f\x56\x77\x68\xdc\xa3\x90\x78\xc2\xb0\x5e\xac\x9e\x71\x3f\x5a\x78\x5f\xf9\x8d\x52\x3e\x2b\xfd\xa2\xde\x01\x7b\x2c\xbd\x45\xf5\xf3\xc7\x62\xd8\x78\x08\x7a\x2c\xa9\xb1\x08\x8d\xff\xb7\xbd\x12\xad\xa1\x5e\x09\xe0\x46\xd7\xc0\x74\x5d\x53\x55\x48\xa1\x10\xb8\xa4\xa5\xcd\x09\x6f\x15\x83\x84\xc1\xd7\x4e\x90\xb4\xc3\x48\x52\x40\x63\xb4\xf1\xc2\x0c\xde\x3c\x4a\x5a\x26\x71\xe1\xc5\x88\x2f\x21\x7e\x50\xfe\x3e\x10\xe6\x20\x75\x59\x0a\x55\x02\x55\x05\x34\x8d\xd1\x1c\x6a\x74\x46\x30\x9b\xc7\x69\xfe\x4d\x6b\xf9\x8b\x9a\xe4\x82\xe5\x41\xca\xf4\x14\x93\x76\xd2\x7b\xd4\xc1\x05\xa7\x41\x0a\xeb\x50\x81\x56\x97\x80\x79\x99\x43\x70\x1e\xb4\x81\xab\x3c\xfc\xc2\xdc\xe3\x93\x28\xba\xef\x72\x92\x1c\xe7\x25\xcd\x57\x41\x9d\x9e\x7c\xa8\x9e\xd2\x8b\xde\xc7\xac\x72\xae\xf1\x97\x58\xa1\xd9\x09\x86\xa0\x95\xdc\x83\x77\xf7\xe4\x15\x63\xe3\xcf\xd0\x9c\xb4\x19\x43\xe3\x32\x2e\x24\x7a\xb4\x25\x75\x95\x7f\xcf\x7a\xb1\x02\xef\x3f\xf8\x05\x68\x2d\x16\xf0\x52\xa1\x0a\xb1\xf4\xda\x79\xb4\x55\xff\x9e\xa3\x7b\x8f\x72\xf3\x29\xdb\x16\xf7\x9f\x92\x3d\xe3\xfe\x7f\xb8\xfa\x24\x9e\x51\x15\x5d\x02\xb3\x17\x94\x32\xdb\xfa\x4c\x7a\xc2\x3e\x97\x40\x5b\xa7\x6b\xea\x04\x83\x69\xfe\xb1\x03\x0c\x5a\xdd\x1a\x86\xb6\x27\x1b\xa9\x78\x16\xed\xbf\x32\xd2\xd6\x55\x27\x5c\x55\xe8\x6c\x2a\xe5\xbf\x18\xc6\x8d\x78\xae\x9c\xef\xa0\xac\x35\xb2\x73\xdc\xc1\x7b\x4b\x05\xb9\x9c\x86\x1d\x95\xa2\xa0\x0e\x41\x7b\xc2\x6b\x08\x27\xec\xa7\xaa\xf5\x47\x47\x24\x7d\x1b\x11\x12\x09\x0e\x5f\x8e\x33\x03\x17\x17\x90\x1c\xf9\x0a\xb3\x19\xc4\x31\xbc\xbd\xc1\xd8\x82\xae\x9a\xfa\x26\x8c\x0c\xba\xd6\x28\xe0\xb5\xcb\x1f\x7c\x67\xf2\x24\x9e\x64\xd9\x51\xd8\x26\xa1\xfd\xfa\xea\x10\x8a\x09\xd4\xad\x75\xb0\x41\xb0\x0d\x32\xc1\xc5\x10\x85\x49\x96\x1d\x05\x7f\xc6\xa9\xb4\x38\x89\x53\x12\x1d\x08\x19\xf8\x94\x90\xe4\xe0\x3f\x2d\x3b\x51\xdf\x02\x77\xb3\x52\x93\x3f\x01\x00\x00\xff\xff\x3e\x82\xd5\x89\xef\x05\x00\x00")

func templatesRestapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRestapiGotmpl,
		"templates/restapi.gotmpl",
	)
}

func templatesRestapiGotmpl() (*asset, error) {
	bytes, err := templatesRestapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/restapi.gotmpl", size: 1519, mode: os.FileMode(420), modTime: time.Unix(1511346016, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\x5d\x4f\xeb\x38\x10\x7d\x8e\x7f\xc5\x28\x62\x51\x52\x15\x67\x9f\x91\xaa\x15\x50\xd8\x85\x87\x82\x60\xd1\x7d\x44\x4e\x3c\x4d\xdd\x26\x76\xae\x3d\x69\x29\x91\xff\xfb\x95\x1b\xfa\x45\xaf\xae\x78\x89\xec\x99\x33\xc7\xe7\xcc\xc4\x6e\x44\xb1\x10\x25\x42\x2d\x94\x66\x4c\xd5\x8d\xb1\x04\x09\x8b\x62\x8d\x94\xcd\x88\x9a\x98\x45\x31\xa9\x1a\x63\xc6\xa2\x2c\x83\xb8\x54\x34\x6b\x73\x5e\x98\x3a\xb3\xc6\x15\xa6\xc1\xc2\x54\x64\x85\xce\x4a\xa5\x2f\xdc\x4a\x94\x25\xda\x4c\x0a\x12\xb9\x70\x18\xaa\xbf\x57\x21\x1a\xf5\x7d\x70\x61\xf4\x54\x95\x9f\x92\xc6\x38\x15\x6d\x45\xf7\x1b\xed\x8e\x45\x5d\x67\x85\x2e\x11\xf8\x71\xc2\xfb\xae\x6b\xac\xd2\x34\x85\xf8\xaf\x9f\x31\x70\xef\x03\x16\xb5\x0c\x8b\x2c\x83\x13\x82\xb3\x05\xae\x87\x70\xb6\x14\x55\x8b\x70\x39\x02\x7e\xc0\x14\x72\xde\x43\xd7\xc1\x21\x67\x8f\x3d\x24\x3e\xb6\x34\x57\xfa\x63\xd6\x66\xa5\xb1\xf5\x17\xb3\x8b\xbf\x17\x6d\xde\xea\xac\x69\x82\xab\xf9\x8a\xde\x2a\x95\x1f\x75\x5b\x96\x56\xcd\x45\xb5\x14\xd9\x7c\x45\x17\xa5\x89\x4f\xe6\x11\x3a\x54\x1a\xad\x8a\xd0\x1f\xb2\x2a\x0f\xc8\xf8\x8b\x84\x3d\xa8\x54\x3a\x66\x29\x63\xd3\x56\x17\x70\x63\x51\x10\x3e\xda\xd7\x46\x0a\xc2\x87\x15\xfd\x6f\x16\xa8\x13\x99\xc3\x20\xa8\xe5\xe3\xeb\x21\xcc\x57\xf4\xea\xd0\xc2\xa0\x36\x12\x2b\xc7\x1f\xfa\x7d\x0a\x49\x6e\x4c\x35\x04\xb4\xd6\xd8\x14\xba\x8d\xb0\x7f\x91\x00\xdf\x95\x23\xa5\x4b\xc8\xd7\x60\xb1\x36\x84\x70\x3f\x06\xa1\x25\x38\xb4\x4b\x55\x84\x2d\x8b\x96\xc2\xee\x91\xc7\xd4\x2c\x52\x53\x90\x39\xff\x31\x43\x8b\x49\xdc\x3a\xb4\x6f\x5a\xd4\x08\x23\xf8\x07\xae\x26\x63\xc0\x5a\xa8\x2a\xec\xe2\x9d\x3c\x1e\x3e\x01\xb4\x8f\xdc\x06\x54\xca\xef\x94\x75\x94\x9c\x6f\xcf\x4a\xf9\x33\x16\xc6\xca\x89\xa1\x3b\xd3\x6a\x99\x6c\xa4\x47\x68\x6d\x18\xb6\xcc\x79\xdf\x93\xe4\x93\x25\xe5\xb7\xc1\x1f\x8b\x22\x8b\xd4\x5a\x1d\xec\xc2\x68\x04\x5a\xf5\xd6\x59\xe4\x37\x83\xdb\x9c\x78\x3f\x86\xd1\xce\x14\x0f\x2e\xb7\x99\x9e\x54\x5e\xd1\x21\x60\x17\x64\x5b\xf2\xa9\xa8\x1c\x0e\x83\x8a\x17\xb1\x3c\xd1\xe0\x19\xa3\x75\x83\xe1\xf7\xe3\x93\xd0\x0f\xef\x5f\xd0\x2e\xd1\x82\x23\xdb\x16\x14\x8c\xfc\x87\xa2\xa2\x19\x84\xd1\x04\xfc\x66\xca\x89\x83\xc1\x49\x4d\x0a\x3d\x74\x9d\xa4\x1b\x74\x28\xfe\x54\xe1\x78\x9f\x0a\x04\xfb\x7b\xf5\xd8\xa0\x15\xa4\x8c\x76\xde\xff\x91\x37\xdc\x0e\xe1\x0a\x51\xa9\x0f\xdc\x25\x93\x82\xde\x61\x50\x2a\xcd\x6f\x8c\x26\x7c\xa7\xae\x03\x35\x05\xfe\x24\xac\xa8\x1d\x78\x3f\x04\x68\xfa\xf5\xa0\xeb\xf8\x53\xff\x40\x79\xcf\x7f\xcb\xd6\x57\x75\x1d\xa0\x96\xe0\x7d\x0a\x03\xd1\x28\xfe\x8c\xae\x31\xda\xe1\x81\x95\xf3\xc3\x78\x77\x63\x24\x5e\x42\x78\xdf\xf8\x0b\x09\x6a\xdd\xc4\x84\x77\xa2\xc2\x1a\x35\xa1\x1c\xc2\xb5\x91\xeb\x4b\x88\x27\x86\xe0\x20\x1e\x7b\xe6\xd9\xf6\x6a\xff\x0a\x00\x00\xff\xff\xce\x21\xe2\xb8\x3b\x05\x00\x00")

func templatesServiceGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceGotmpl,
		"templates/service.gotmpl",
	)
}

func templatesServiceGotmpl() (*asset, error) {
	bytes, err := templatesServiceGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service.gotmpl", size: 1339, mode: os.FileMode(420), modTime: time.Unix(1511528756, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/.DS_Store": templatesDs_store,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/database.gotmpl": templatesDatabaseGotmpl,
	"templates/main.gotmpl": templatesMainGotmpl,
	"templates/migrate.gotmpl": templatesMigrateGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
	"templates/restapi.gotmpl": templatesRestapiGotmpl,
	"templates/service.gotmpl": templatesServiceGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{templatesDs_store, map[string]*bintree{}},
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"database.gotmpl": &bintree{templatesDatabaseGotmpl, map[string]*bintree{}},
		"main.gotmpl": &bintree{templatesMainGotmpl, map[string]*bintree{}},
		"migrate.gotmpl": &bintree{templatesMigrateGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
		"restapi.gotmpl": &bintree{templatesRestapiGotmpl, map[string]*bintree{}},
		"service.gotmpl": &bintree{templatesServiceGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

