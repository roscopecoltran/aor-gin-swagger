// Code generated by go-bindata.
// sources:
// config.yaml
// templates/.DS_Store
// templates/api.gotmpl
// templates/main.gotmpl
// templates/migrate.gotmpl
// templates/model.gotmpl
// templates/parameter.gotmpl
// templates/restapi.gotmpl
// templates/service.gotmpl
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _configYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x94\x4f\x8f\xd3\x30\x10\xc5\xef\xfb\x29\x46\xe1\xd2\x1e\x9a\x70\xce\x0d\x69\x41\x02\x09\x54\x89\x3d\xae\xd4\x4e\xed\xa9\x6b\xd6\xff\xe4\x71\x40\x50\xf9\xbb\xa3\xfc\x69\x4b\xba\x14\x52\xa0\xe2\x36\xad\xe7\x3d\xff\xfc\x32\xf6\x0b\xd8\xa5\x14\xb8\xae\x2a\xa5\xd3\xae\xd9\x94\xc2\xdb\x4a\xf9\x05\x7f\x41\xa5\x28\xfe\x58\x6e\x8c\xdf\x54\x16\x39\x51\xac\xa4\x17\x5c\x35\x4c\x55\x22\x1b\x0c\x26\x5a\x19\xfc\xea\x9b\x54\x5a\x79\xd7\x57\xf5\x1d\x00\x86\x60\xb4\xc0\xa4\xbd\x6b\x7f\x02\x2c\xc0\xa1\xa5\x1a\x84\x77\x5b\xad\x9a\x48\xdd\xbf\x00\xec\x9b\x28\xa8\x86\x62\xbf\x87\xf2\xc1\x86\x7b\x1d\x21\xe7\xa3\x39\x57\x91\x38\x61\xd0\xa5\xf2\xc9\x06\x53\x0c\xb2\x84\x51\x51\xea\x64\xeb\xfd\x1e\x3e\x79\xed\xde\x68\x43\x4b\x4c\x3b\x28\x1f\xba\x45\x28\x3f\x52\xfc\x4c\x71\x89\xe2\x09\x15\x41\xce\xeb\x9c\x0f\xfa\xad\x36\xb4\xea\x89\x8a\x1e\xa9\x54\xbe\x18\x91\x92\xdd\x90\x94\x24\x57\x1c\x48\x9c\xd1\x22\x33\xa5\x7a\x88\xe7\x1d\x7b\xf7\xba\x6d\xbe\x01\xdb\x08\xe2\x19\x22\x77\x26\x53\x93\xbc\x6d\x8a\xbd\xfb\x98\xcf\xa2\x76\x53\xe9\xda\xde\x3f\xc0\x7b\x2c\x84\x95\x8f\x05\xcc\x24\xf2\x8e\xa2\xfe\x46\x30\x0b\xc8\x02\x4d\x5b\x96\x1f\xd0\xd2\x7c\x0e\x39\x2f\xfa\xac\x2e\xc0\x0f\x9b\x9f\xd1\x6b\x15\x31\x4d\x1e\xd4\xa1\xfd\x86\x11\x9f\x76\x78\x3e\x06\x5a\x4c\x06\x1d\xda\xff\x5b\xd8\xa7\xfd\xc7\xc7\x90\xfe\xc2\x35\xeb\xcc\xee\x8f\xab\xff\x32\x52\xe9\x0f\xb7\xca\x7a\x49\x86\xc7\x8f\x95\xa4\xad\x76\xba\x7d\xc4\x7e\x0a\xd6\x49\xae\x81\x7a\xdf\x0a\x7e\xcb\xd4\x3b\xcc\xd8\xe1\xd3\xc5\x84\xd7\x39\x0f\xdc\x3e\x50\xec\xde\xd9\x33\xf6\x80\x11\x2d\x25\x8a\x3c\x75\x2e\x8e\x8a\x5f\x4f\x86\xde\x82\x4a\x30\x33\xe4\xda\x83\x29\x9e\xc3\x4b\xc8\x79\xe2\x87\x28\x5f\x2d\xdf\x1e\xeb\x43\xd1\xcb\xc9\x30\x5d\x61\x74\x26\x76\xf2\xaf\x03\x5d\x9d\x22\xeb\xb2\xfd\x1e\x00\x00\xff\xff\x6f\xea\x2a\xa8\x21\x07\x00\x00")

func configYamlBytes() ([]byte, error) {
	return bindataRead(
		_configYaml,
		"config.yaml",
	)
}

func configYaml() (*asset, error) {
	bytes, err := configYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "config.yaml", size: 1825, mode: os.FileMode(420), modTime: time.Unix(1511529775, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesDs_store = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\xd8\x31\x0a\x02\x31\x10\x85\xe1\x37\x31\x45\xc0\x26\xa5\x65\x1a\x0f\xe0\x0d\xc2\xb2\x9e\xc0\x0b\x58\x78\x05\xfb\x1c\x5d\x96\x79\x60\x60\xd5\x4e\x8c\xcb\xfb\x40\xfe\x05\x37\x2a\x16\x31\x23\x00\x9b\xee\xb7\x13\x90\x01\x24\x78\x71\xc4\x4b\x89\x8f\x95\xd0\x5d\x1b\x5f\x43\x44\x44\x44\xc6\x66\x9e\xb4\xff\xf5\x07\x11\x91\xe1\x2c\xfb\x43\x61\x2b\xdb\xbc\xc6\xe7\x03\x1b\xbb\x35\x99\x2d\x6c\x65\x9b\xd7\x78\x5f\x60\x23\x9b\xd8\xcc\x16\xb6\xb2\xcd\xcb\x4d\xcb\x38\x7c\x18\xdf\xd9\x38\xa1\x18\xa7\x10\x2b\x6c\xfd\xce\x77\x23\xf2\xef\x76\x9e\xbc\xfc\xfe\x9f\xdf\xcf\xff\x22\xb2\x61\x16\xe7\xcb\x3c\x3d\x07\x82\xf5\x0d\x00\xae\xdd\xf5\xa7\x43\x40\xf0\x3f\x0b\x0f\xdd\x5a\x1d\x04\x44\x06\xf3\x08\x00\x00\xff\xff\x6a\x00\x88\x6d\x04\x18\x00\x00")

func templatesDs_storeBytes() ([]byte, error) {
	return bindataRead(
		_templatesDs_store,
		"templates/.DS_Store",
	)
}

func templatesDs_store() (*asset, error) {
	bytes, err := templatesDs_storeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/.DS_Store", size: 6148, mode: os.FileMode(420), modTime: time.Unix(1511443706, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesApiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x39\x5d\x73\xdb\x36\xb6\xcf\xe4\xaf\x38\xe5\x24\x2e\xe9\x91\xa9\xb6\x8f\xba\xd7\xd3\xb1\x2d\x27\x55\xe2\x38\x1e\x4b\x6e\x1e\xee\xdd\x49\x21\xf2\x48\x42\x43\x01\x2c\x00\x5a\x56\x38\xfc\xef\x3b\x07\x00\x29\x4a\x56\xbc\xcd\xce\x3e\x6c\x66\x22\x93\xc0\xf9\xc2\xf9\xc6\x61\xc9\xb2\x2f\x6c\x89\x50\xd7\x90\x5e\xdc\x4d\xee\xfc\x6b\xd3\x84\x21\x5f\x97\x52\x19\x88\xc3\x20\xca\xa4\x30\xf8\x64\xa2\x30\x88\x04\x9a\xe1\xca\x98\x92\x9e\xa5\x76\xbf\x43\xcd\x97\x82\x15\xf4\xa2\xb7\x3a\x63\x85\x7d\x34\x7c\x8d\x76\xc9\x28\x2e\x96\x16\x74\xb1\x36\x51\x18\x06\xd1\x52\x16\x4c\x2c\x53\xa9\x96\xc3\xa7\xa1\x64\x95\x59\xfd\xe2\xd6\xb9\x59\x55\xf3\x34\x93\xeb\xe1\x92\x8b\x33\x62\xab\xf8\x7c\x58\x96\x4a\x2e\xa2\xe7\xfb\x4b\x29\x78\x46\x4f\x84\xbc\xe4\xc2\x51\x82\x3e\xd8\x57\x56\x30\x91\x4b\x0b\x7e\x9c\x91\x92\x3a\x93\x25\x66\xb2\x30\x8a\x89\x21\x93\xea\x8c\x80\xf5\x86\x2d\x97\xa8\x86\xac\xe4\xd1\x77\x21\x64\x52\x2c\xf8\xf2\xfb\x70\x72\x66\xd8\x9c\x69\xfc\x3e\xac\x35\xcf\xf3\x02\x37\x4c\x21\x9d\x69\x38\x84\xaf\xac\x0c\xec\x43\x21\x97\xaa\xd2\x61\x50\xc8\xe5\x9e\x36\x34\x57\x55\xa9\x51\x0c\x1d\x80\x47\x1b\xe3\x82\x55\x85\x99\x58\x7b\xeb\x30\xa8\x6b\xc5\xc4\x12\x21\xdd\xdf\x68\x9a\xba\x2e\x15\x17\x66\x01\xd1\xeb\xbf\x22\x48\x9b\x86\x60\x51\xe4\xf4\x30\x1c\xc2\x33\x02\xaf\xbe\xe0\x76\x00\xaf\x1e\x59\x51\x21\x8c\xce\x21\xed\x51\xa2\xbd\xa6\x21\xbf\xeb\xd3\x74\xb0\x7d\xc2\x49\x18\x0e\x87\x70\x2f\x2b\x83\x1a\x72\x5c\x70\x81\x1a\x58\x51\x80\x59\x21\x28\xb7\x2c\x17\xf6\xed\xe2\x6e\x02\x1a\xd5\x23\xcf\x30\x0d\xcd\xb6\xc4\x16\x4d\x1b\x55\x65\x06\xea\x30\x38\x5d\x72\x91\x5e\x8b\x25\x17\xd8\x3b\xe7\xc7\x12\x15\x33\x5c\x0a\x2b\x19\x94\x8c\x7c\x98\x7f\x45\x48\x6f\xd9\x9a\x82\xa1\x47\xc1\x91\xb0\x84\xd5\x5b\x25\xab\x32\x0c\x82\xba\x06\xbe\x80\xf4\xa2\x32\x2b\xa9\xf8\x57\xcc\xa1\x69\xe8\x05\x08\xf4\x37\x26\xf2\x02\xd5\x9b\x4a\x64\xa1\x3f\x54\x10\xdc\x49\x6d\xe0\x39\xa5\xa6\x85\x08\x1b\x7b\x6c\xe7\x4b\x95\xc2\x4f\x58\x14\xef\x85\xdc\x08\x40\xc1\xe6\x05\xa9\x40\xe4\xbb\x6d\x0d\xc3\x74\x83\x45\x71\xf6\xc5\xc3\xe4\xa5\xe4\xc2\xe8\x34\x5c\x54\x22\x83\x58\xc1\xa9\x53\x45\x72\x84\x64\xbc\x42\x56\x98\x15\x09\x08\x04\x1e\x27\x30\x97\xb2\x48\xe8\xb4\x9b\x8e\xef\xe8\x1c\x54\x6a\xc5\x8c\xa3\x3e\xb3\x28\x09\x03\x52\x4b\x07\x99\xbe\xbd\x9e\xc5\xd1\x50\x67\x2b\x5c\xb3\xb3\x9c\xeb\x4c\x3e\xa2\xda\x46\x03\x47\x3c\x33\x4f\xee\xe0\x57\x2e\xa7\x58\x36\x41\xd0\xc1\x11\xa3\x9e\xb6\x83\x60\x6a\x09\x3d\xdc\xdf\x00\xb8\x4c\x02\x7f\xfc\xa9\xa5\x18\x45\x8e\xc3\xe7\x4a\x15\xd1\x1f\x3d\xc8\x19\x19\xfe\x28\x24\xb9\x84\x07\x7d\x98\x58\x82\xf4\x6f\x1f\xb4\xe2\x3b\x82\xcd\x81\x00\x23\x80\x68\xe8\x83\x2f\x25\xf0\x68\x70\xc0\x77\x04\x91\xdf\x3f\xfb\x25\xfd\xc9\x6d\x37\xf4\x93\x99\xa7\xf4\xdd\xf4\xe3\x6d\x4c\xa9\x33\x9d\x1a\x66\x2a\xfd\xf1\xfd\x00\x4e\xba\x73\x27\x61\x10\x34\xc9\x11\x45\x3a\xeb\x44\x03\x70\x0f\xde\x9d\x7a\x46\x4b\x12\x72\x9c\x30\x50\xad\xe6\xf7\x24\x7c\x49\xeb\x24\xd5\xd4\x1e\xff\x50\x2e\xa7\x94\x78\xea\x48\x91\xe4\x96\x4b\xe2\xfd\x72\x4f\x14\xe0\xda\x86\x9f\x5b\x84\xdf\x66\xb3\x3b\x58\xf9\xad\x4a\x63\x0e\x0b\xa9\x2c\x40\xdf\x6d\xfc\xb1\x88\x98\x0d\x62\x0a\x20\xe7\xda\xb9\x77\xda\x6f\x1d\x77\xdf\x47\x0f\x22\x8c\x8e\xe5\x40\xad\x23\xed\xb0\xc2\x40\xa1\xa9\x94\x78\xd1\x09\xfd\x09\x0e\x3d\xf0\x37\xb7\x4c\x0c\x5b\x37\xf1\x46\xe9\xbb\x89\x83\x1a\x79\x9e\xdb\x38\xf1\xd6\xa7\x5f\xbe\x80\x1f\xdc\x7a\xea\x89\x39\x9c\x63\x6e\x31\x75\x19\xec\x41\xb0\x47\xc6\x0b\xd2\xc8\x00\x4e\x1c\x72\x62\x29\x02\x16\x1a\x5f\x20\x60\xfd\xaa\x8f\x40\xee\xe1\xec\xe6\x69\xb7\x16\xe3\xc2\xa0\x5a\xb0\x0c\xc1\xac\x98\x81\x75\xa5\x0d\xcc\x11\xf8\xba\x2c\x70\x8d\xc2\x60\x0e\x5c\x80\x54\x39\x2a\x30\x12\x4a\x25\x1f\x79\x8e\x44\x68\x5e\x69\x4a\xc4\x9a\x2a\x0d\xcf\x3a\x0b\x3f\xcf\xc0\x1d\xc7\x8e\x55\x1d\x7a\x55\x6d\xbd\x11\xbf\x27\x11\x3f\xb3\x9c\x4f\xbd\x77\x4c\xb1\xb5\x86\xa6\x19\x40\xe9\x1e\x4f\xeb\x3a\xf5\xdd\x4c\xd3\xa4\x47\x89\x39\xa4\xba\xa6\x7c\x09\x4d\x93\xc0\x29\x2b\x79\x7a\x8f\xba\x94\x42\x63\x3f\x15\x5b\x87\x5c\x72\xc1\xbf\xe2\x1d\x33\xab\xb8\x64\x66\xe5\x63\x24\x69\x13\x48\xdd\xb9\x98\x6f\x78\xd2\x7b\x2c\x0b\x96\x61\x7c\xf8\x4e\xd8\x03\x88\xea\x68\x00\xd1\x28\x1a\xc0\xd9\xcf\xc9\x00\xa2\x86\x5e\xdd\xdb\x61\xf6\xf7\x65\xac\x97\xee\x7b\xc5\xef\xa8\xee\xad\xc0\x07\xf8\xb1\xdf\x6d\x6d\x32\xf0\x01\x67\x2b\x15\x19\x62\x00\x46\x7e\x41\x41\x99\xb1\x3d\x9b\x2f\x1b\x74\x38\xb4\x55\x93\x82\x83\xd4\x7f\x8b\x9b\x38\x69\x17\xd3\x07\x8d\xb1\x2d\x66\xe8\x92\x59\x9c\xec\xef\xed\x3a\x95\xf4\xc6\x76\x1e\x37\x92\xf2\x0a\x81\x85\x81\x7e\xcc\xae\xac\xa4\x44\xdb\xc9\x9c\xba\x85\x30\xa4\xc8\xe9\xf6\xa9\x41\x4d\xaf\x3e\xde\x4f\xd3\x6b\x97\x29\x6c\x10\x1c\x67\x43\x60\x71\x9b\x19\xf7\x88\x8c\x2f\xff\x06\xfa\xd8\x37\x64\xde\xcb\xe2\xb6\x41\x4b\xc7\x97\x47\x89\x92\x64\xef\x3e\xcd\xf6\x28\x2f\xd6\x26\xbd\xb3\xbd\x4d\x1c\x3d\x68\x7c\xf7\x69\xf6\x2b\xbc\x36\xf0\xff\x94\x94\xbf\x89\x99\xf4\x11\x0b\x11\x47\x53\xcc\x14\x9a\xf7\xb8\x1d\xc1\x51\xbc\x6e\xdf\x8a\x15\x78\xa7\x18\x9d\xc3\x89\x33\x5d\xed\xba\x9d\x11\xb8\x83\x92\xe4\x47\xc3\xcd\x21\x1e\x0f\x94\x7e\x93\x02\xe7\xde\xf1\xda\x66\xc0\x36\x00\x36\x0a\x05\x42\xfa\x01\xcd\x4a\xe6\x10\xbd\xbd\x9e\x45\xf0\xf7\xa9\x3e\x33\x1f\xe9\x5d\x18\xaa\xa9\x3a\xee\xda\x49\x2e\x72\x7c\x1a\xc0\x2b\xb3\x2d\x6d\x3b\x79\x25\x85\xae\xd6\xa8\x3f\x60\xce\x6d\xfd\xb5\x69\x83\x2f\x3c\x64\xd3\x0c\x7c\x0c\x47\x75\x4d\x48\xf6\xc1\x2e\x24\x49\xd8\xc5\xfd\xd1\xf6\xad\x2b\x47\x36\x3a\x6a\xd7\xe4\xbd\xb2\xc7\xb1\xe2\x8f\xce\x21\x3e\x38\x52\x42\xb7\x26\x07\xa7\x31\xab\x14\x37\xdb\x31\xf5\xab\xdc\x6a\xd8\x0a\x3c\x3d\xb2\xde\x22\x79\x9b\xb4\x20\x60\x33\xe0\xab\x1c\x17\x84\x69\xcf\x73\x9c\x6e\xab\xce\xae\x0f\xc5\xbf\x2c\x5a\x47\xc9\xb6\x27\x78\xa7\x64\xa9\x53\xdb\x1c\x45\xfe\x22\xe4\x90\xec\x99\x66\x6d\xe0\x8f\xce\xbb\x24\x10\xda\xba\xb5\xbf\x7d\x7e\x0e\x51\xe4\x6a\xcf\xc1\x06\xec\x5f\x0e\xbe\x2d\x81\xc7\xb0\xbc\x3b\xfe\xd6\x45\x7a\xea\x6d\x1a\x6b\x0e\xb0\xc9\xc6\x89\x6b\x17\x62\xe2\xdc\xf3\x93\x29\xdd\x8f\xb4\xdd\x79\xe6\x25\xf6\xee\xe4\xd4\x6e\xa1\x5e\xf0\x0d\x0b\xda\xf3\x0e\x5b\xba\x3d\xdb\x6b\xdf\x4c\xbb\x82\xdb\x8a\x3f\xda\x57\x8c\xab\xf5\xf4\x9b\x38\x3b\x38\xd7\x7a\xe1\x78\x87\xce\xff\x92\x1a\x0e\x68\x76\xb7\x84\xe0\xc5\xf0\xb2\x77\x8c\x2e\x5a\x8f\xc3\xf4\x62\xf8\x5f\xd2\x4a\xeb\xda\x87\x77\xd3\xc4\xbd\x62\x78\x70\x2b\xa4\x35\x52\x21\xec\x15\xe0\x4b\xdf\x30\xdc\x50\xbf\x70\xbc\xb4\xb7\xc5\xeb\xe8\x2e\x55\x8a\xee\xae\xe9\xeb\xac\x93\xd8\x17\x4b\x2a\x7f\xed\xf5\xf0\x78\x2b\x62\x57\xba\xbe\xce\x17\x36\x5f\xe0\xc2\xc0\x15\x1e\x38\xf5\x95\x27\x20\x5c\x54\x70\xea\x1a\x2b\xfb\x12\x06\x33\x6e\x8a\xf6\x72\x11\x06\xbf\xa3\xd2\x5c\xb6\xf5\xde\xcb\x71\x8b\x1b\x62\x64\xc3\xd3\x1e\x41\x03\x03\x81\x9b\x23\xf5\xd9\x81\xc6\xfa\x31\xdb\x95\xe4\x7d\x31\x12\x38\x25\xb4\xda\x56\x9b\x1f\x7c\x6d\x1c\xe3\xbc\xb2\xed\x46\x40\x25\x77\x8a\xe6\x83\xcc\xdb\xf2\x5b\x20\xd3\x48\xef\xbe\x48\xb1\x92\xdb\x5a\x70\x71\x37\x21\x04\x77\xd8\xd1\xf3\xce\xe0\x31\x1b\x74\xf4\xc9\xe3\xc6\x5c\xdb\x72\xd4\x0a\xd4\x85\xad\x0d\x0d\xb7\xd6\x92\xa1\x15\xab\x98\x11\x44\x75\x0d\xe9\x44\x2c\x64\xea\x34\xd5\x34\xf6\x0e\xe4\x15\xd5\xdf\x6f\x75\xe7\x20\x1a\x37\x88\x70\x19\x17\xec\xb8\x07\x48\xf1\xbb\x9b\x2c\x35\xa2\xb9\x3d\xf8\x5a\xe6\x68\xf5\xf1\x4c\x1d\x16\x2f\xbd\xc7\x25\xd7\x06\x55\x6c\x9b\x39\xe7\xd4\xae\x06\x0e\x40\xf0\x22\xe9\xb8\x69\x34\x7e\x50\x42\x7f\x96\xae\xc7\x9d\xe1\x93\x79\x23\xd5\x9a\x19\x83\x0a\x36\xdc\xac\x40\x48\xc8\x64\x21\x95\x9b\xa7\x90\xc2\x3b\x80\xf8\x84\x56\xf6\x70\x6a\xaf\xba\x2b\x8b\x32\x02\xa3\x2a\x6c\x12\x67\x8a\xd4\x3b\xd5\x39\x9c\xf4\xdc\x8a\x44\xbf\xc8\x73\x35\x82\xf6\x5f\x6b\x88\x3c\x57\xa8\x35\x69\xd0\x5f\x71\x3c\xc8\xf3\x93\x91\x6d\x91\xe5\x33\xbe\x46\x59\x99\x11\xc0\xcf\x3f\xc1\x29\x18\xbe\x46\x4a\xc2\x52\xe4\x04\xf1\x49\x71\x83\x1d\xc8\x11\x08\xdf\xd6\xb4\x8e\xd0\x4d\x08\x5a\x6f\xb0\x5a\xee\x31\x3f\x32\x4b\xd0\x8f\x99\xbf\xe2\x6c\x77\x9a\xee\xe0\xfc\xe5\xe8\x6b\x67\xd7\xb0\x4f\xae\x7f\xdf\xfd\xfa\xec\xc2\xdb\xa7\x4c\xfa\xf4\x49\x80\x95\xdc\x47\xde\x7d\x25\x40\x55\x62\x3f\xfc\xe9\x7a\x6a\x60\xc3\x8b\x02\x0a\x72\x0b\x01\x52\x00\x72\xb3\x42\xe5\x6e\xaa\xd2\xfd\x9d\x42\x8e\x25\x8a\x9c\x3a\x79\x29\x88\x1c\x51\xf1\xd1\x58\x32\x4d\xf7\x58\x23\x7d\xc8\xb6\x63\x15\x66\xc3\x33\x21\xce\x71\x02\xa8\x94\x54\xa4\x22\xf2\x09\x72\xf2\x05\x75\x6f\xea\x91\x48\xfe\xf8\x5a\xc3\x19\xbc\xd6\x3f\x12\x7b\xe6\xec\x0a\xaf\x75\x34\x00\xe6\x42\x85\x1e\x7c\x4c\xd0\xa3\x13\xdd\x7a\x40\x62\x6d\xc2\xbc\xb2\xd3\x89\xb0\x4d\x00\x5a\xe1\xc9\x1e\xad\x1e\x5a\x9c\x1b\x7b\xcc\x0b\x91\x5b\xef\x8a\x7d\x5b\xf8\x22\xd0\xec\x66\x1a\x77\x0c\x66\x37\xd3\x2b\x54\xe6\x0d\x77\x42\xed\x56\xdf\xe3\x96\x16\xdb\xdb\xc9\x74\x55\x99\x5c\x6e\x84\x53\xee\x52\xb1\x0c\x17\x55\x51\x6c\x41\xb7\x1b\xfb\x76\x38\x54\x5a\x8b\xdf\xd7\xdc\xa1\x98\x1d\x8c\x1f\x40\xa7\x97\x2c\xfb\xb2\x54\xb2\x12\x39\x35\xf7\x9d\xdd\x3f\x71\xb3\x9a\xf2\x65\x3b\x90\x38\xe6\x05\x36\x94\xa7\x93\xb7\xb3\xeb\xfb\x0f\x6e\x3c\x41\x76\x61\x95\x91\x6b\x66\x78\xc6\x8a\x62\x1b\x76\x29\x28\x4f\x61\xb6\xc2\x1d\xea\xce\x7b\xe8\xb6\xc5\x3a\x3a\x6e\xee\x6d\x67\x71\x47\x14\xd0\x7a\xd1\x06\xe7\x9d\x0e\x86\x43\x98\x98\x1f\x35\x94\x52\x6b\x4e\xc9\xce\x48\x90\x25\x75\x72\x24\x81\xf5\x34\x60\x62\x0b\xa2\x5a\xcf\x51\xed\x74\x49\xba\x73\xfd\xde\x66\xc5\xb3\x95\x95\xc9\xca\xfb\x84\x59\x65\x10\xa4\x40\x98\x6f\xed\x1f\xb6\xa0\xd4\xe5\x19\xfb\x23\xac\x98\x86\x39\xa2\xd8\x11\xd4\x55\x96\xa1\xd6\x56\xe2\x23\xfe\xbc\xaf\xd1\xb8\x43\x4b\xd3\xd4\xcf\x5f\xac\xd1\x7a\xb6\xd3\x7c\x79\x65\x67\x27\x6b\xf6\x05\xe3\x6c\xc5\x04\x48\x9d\x4e\xad\x86\x06\xf0\x73\x62\x21\x04\x2b\xd2\x5b\x69\xf8\x62\x1b\x5b\xf8\x01\xf8\x0f\x06\xa9\x57\x29\x45\xf6\x52\xb6\x33\x1e\xf2\xef\xff\x3d\xb3\x90\x94\x79\x76\xfe\x40\x5e\x1d\x13\x2c\x2a\x45\x3c\x59\x6a\x63\xd0\x86\x0a\x2d\xfd\x70\x4e\xb9\xde\xe2\xef\x56\x6c\xce\xbd\x56\xca\xa5\xdd\xab\x42\x6a\x9f\xd2\x5a\xbf\x43\xa5\x42\x3f\x2f\x09\x03\xb2\xf4\xe7\x01\x2c\xdc\xe8\xd3\xb6\x96\x9d\x16\xec\xc5\xd1\x71\x5e\x58\xb6\x47\xf8\x1e\x25\xea\xd7\x04\x2f\xbc\xf3\xfe\x7e\x71\x3f\x85\xf1\xf5\xe5\xc3\x5b\xdb\x3c\xb0\x35\x8e\xec\xb7\x98\xb6\xa9\xff\x2f\x5c\xa4\xd5\xab\x87\xe9\xec\xe3\x87\xcf\x6f\x26\x37\xd7\x30\x9d\x5d\xdc\xcf\xe0\xac\x6b\x6e\x96\xd2\x0f\x4c\xae\x14\x32\x83\x1f\xd5\x43\x99\x33\x83\xef\x36\xc6\x36\x11\x71\x3e\x87\xd3\xa5\x54\xeb\x74\x7c\x39\x80\x3f\x37\xe6\x41\x53\x9f\x45\x65\xbd\xd0\xe9\x3b\xf7\x9e\x40\xec\x26\x12\xde\xcb\x6a\x5b\x47\xde\xa2\x01\x7c\xe2\xda\x50\xe8\xce\xb7\xa0\x70\x2d\x0d\xc2\x64\x6c\x23\xb0\x1d\x6f\x4c\xc6\x61\xf0\xc8\xd4\x0e\x72\x9f\xb4\xf5\x91\x7c\x9e\x7e\x5a\xa1\xc2\x38\xaa\x34\xaa\xcf\x82\x8e\x76\x0e\xbf\xc2\xc5\xed\x18\x70\xcd\x78\x41\x6f\x51\x27\x1e\x75\xe8\x8a\x80\x76\x2b\xd7\x04\x95\xa4\x6f\xb8\xd2\x26\x3e\x69\x79\x25\x76\x04\xa2\xf2\x5b\x69\xde\xb8\x2c\xd5\xf7\x95\x7c\x9e\x3a\x9d\xc4\x9e\x4a\x42\xee\x28\x55\xd8\x77\x16\xba\x63\x09\xee\x8e\x6e\x73\x77\xcb\x71\x32\x86\xf3\xee\x50\x29\x9d\xb2\xdd\x71\x44\xf3\x0b\xd3\x07\xe8\x16\x77\xa3\x4f\x56\x68\x1c\x90\x14\x53\xf6\xf8\x4c\x86\x26\x74\x6d\x72\xcf\xd4\x2e\x50\x7a\x4d\x73\x6f\x12\xda\x8d\xc5\x62\x3b\x6b\x3b\xc0\x49\x60\x7f\xc6\xd7\x9f\x8e\xf9\x2a\x1e\x7e\x73\x14\xf1\x22\xdd\x7f\x77\x2c\xf8\x1f\x9b\x0b\xf6\x8e\x72\xd2\x5f\xaf\xaf\x64\x8e\x23\xe8\x0d\x62\x6f\xa5\x99\xec\x46\xa9\x03\xb8\x94\xf9\x76\x04\xd1\xad\x34\xd0\x5b\x8f\x9a\x70\xf7\xd9\xe7\x30\xb6\xae\x6f\xc7\x07\x91\xf5\x8d\xe0\x5b\xf3\xa5\x62\xc6\x81\x90\xf3\xc7\x61\xe0\xbf\xde\xcd\xdc\xf7\xa2\x73\xf8\xbf\x7f\x74\x43\xd8\xba\xa9\x7b\xba\xff\x60\xe3\xa3\x69\x4e\x7c\xa0\x1c\x55\x4a\x4d\xb7\xdb\xee\x06\x66\xbf\xcb\xf5\x82\xdc\x31\x89\xb9\x9e\xa9\x4a\x64\xcc\x60\x3b\x50\x74\xcc\xd3\x34\xed\xf1\xb6\x31\xe1\xd3\xab\x05\xd8\x65\x58\x0f\xef\xf3\x76\x8f\x5c\xed\xc7\xe8\x3e\x92\xc6\x97\xe9\x58\xc9\xd2\xb2\x9d\x2c\xae\xc9\xe7\x75\x6c\x91\xbd\x3b\xff\xcf\xb3\x74\x1c\x94\x4c\xf0\x2c\x46\xa5\xda\xa9\xb8\xfd\xdf\x9f\xd2\x5d\x54\x46\x7e\x70\x8a\xf4\x92\x8d\xe0\xb5\x76\x03\x3b\x1b\x03\xda\x6a\xc3\x33\x22\x32\xe3\xcb\xb4\x87\xe4\x37\xfc\xbc\xfd\xd0\x54\xfb\x46\x1a\x0e\xe1\x91\xaf\x47\xb0\x30\xe7\x4b\x19\xfe\x33\x00\x00\xff\xff\xc6\x9d\x48\x8d\x87\x1f\x00\x00")

func templatesApiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesApiGotmpl,
		"templates/api.gotmpl",
	)
}

func templatesApiGotmpl() (*asset, error) {
	bytes, err := templatesApiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/api.gotmpl", size: 8071, mode: os.FileMode(420), modTime: time.Unix(1511531377, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMainGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x51\x4f\x6b\x1b\x3f\x10\x3d\x4b\x9f\x62\x7e\x22\x0e\xbb\xe0\xc8\x77\x43\x0e\x3f\x62\x4a\x02\x25\x98\xba\xd0\x4b\x2f\xe3\xf5\xac\x2c\xa2\x95\xb6\x23\xed\x86\x22\xf4\xdd\xcb\xee\x3a\xc6\xe4\xd4\xde\x24\xcd\x7b\xf3\xfe\xa8\xc7\xe6\x0d\x0d\x41\x87\xd6\x4b\x69\xbb\x3e\x70\x82\x4a\x0a\xd5\x76\x49\x49\xa1\x5c\x30\x4a\x4a\xa1\x8c\x4d\xe7\xe1\xa8\x9b\xd0\x6d\x38\xc4\x26\xf4\xd4\x04\x97\x18\xfd\x06\x03\x3f\x18\xeb\x1f\xe2\x3b\x1a\x43\xbc\x69\x82\x6f\xad\x51\xff\xc4\x39\x61\xc2\x23\x46\x52\x52\xe4\xcc\xe8\x0d\x81\xde\x51\x8b\x83\x4b\x2f\xb3\xa5\x58\x4a\xce\x3d\x5b\x9f\x5a\x50\xab\x5f\x0a\x74\x29\x13\x96\xfc\x69\x39\x2c\xa4\xbb\x37\xfa\xbd\x86\xbb\x11\xdd\x40\xb0\x7d\x04\x7d\xc3\x9e\x66\xa5\x40\xce\x70\xbb\x67\xc1\xde\x2e\xab\xa5\x1c\x91\xa7\x0e\xb0\xb7\x4f\x73\x18\x60\x8a\x09\x7b\xab\x97\xeb\x04\x69\x07\xdf\xcc\xa5\x55\x35\x64\x29\x85\x6d\x61\x09\x7e\xc1\xe8\x1d\x1d\x07\x03\x59\x0a\xd1\x76\x49\xef\x67\xc9\x4a\x7d\xb5\x31\x91\xb7\xde\x40\xf0\x5b\x58\x8d\x3f\xbd\x5a\x7f\x22\xee\x03\xa7\xfa\x13\x6d\x77\xe9\x07\x62\xc2\x34\xc4\x2d\xac\xd2\xcc\xfc\xe8\x4d\x1f\xe6\xf7\x5a\x8a\x22\xa5\x20\xe6\x29\xfc\xd5\xbe\xde\x23\x47\xaa\xea\xd9\xe5\x34\xfc\xef\x11\xbc\x75\xb3\x39\x17\x8c\xfe\x82\x09\x5d\x45\xcc\x17\xfe\x75\xeb\x13\x13\x26\xfa\x8e\x47\x47\xb1\x4a\x3c\xd0\x8d\xe2\xe5\x7b\x96\xa1\xd6\xba\x96\x22\x8e\xcd\xa4\x7b\x9f\x33\xe8\x57\xec\x08\x4a\x39\x10\x8f\xc4\xf9\x99\xd0\xa5\xf3\x16\x5a\x74\x91\x26\x09\xec\xed\x04\xfd\xe8\xf5\x95\xde\xff\xdf\xbf\x54\x71\x6c\xd6\x70\x7f\xf5\x5d\x5f\xb2\xcc\x51\xf4\xb7\xc1\xff\xb0\xe9\x7c\xb0\xe6\x19\xfd\xc9\x11\xff\x75\xa0\xf2\x27\x00\x00\xff\xff\x03\x4a\xb0\xf2\xe5\x02\x00\x00")

func templatesMainGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMainGotmpl,
		"templates/main.gotmpl",
	)
}

func templatesMainGotmpl() (*asset, error) {
	bytes, err := templatesMainGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/main.gotmpl", size: 741, mode: os.FileMode(420), modTime: time.Unix(1511531369, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesMigrateGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x4e\xbd\x8a\xc2\x40\x10\xae\x33\x4f\x31\x04\xee\xb8\xc0\xb1\x6f\x60\x11\xb0\x49\xa1\x04\xb1\x13\x8b\x31\x99\x84\xc5\xcd\x66\xdd\x5d\x2d\x1c\xe6\xdd\x25\x41\xd0\xee\xfb\xf8\x7e\x03\x75\x57\x1a\x19\x45\xd0\xd4\x6d\xd3\xbe\xa9\x2a\x80\x9d\xc2\x1c\x33\xfe\x41\x21\x12\xc9\x8f\x8c\x66\xcb\x03\xdd\x5d\x6e\x56\x25\xa9\x8a\x84\x68\x7d\x1e\xb0\xfc\xb9\x95\x68\x54\x17\x2f\xfb\x5e\x15\x2a\x80\x07\xc5\x25\x7d\xe0\x94\xeb\x60\x8f\x74\x71\x9c\x70\x83\xa7\xb3\xf5\x99\xe3\x40\x1d\x8b\xca\x57\xfb\x6e\xee\xd9\x25\xd5\xdf\x69\x05\x46\x04\x03\xa5\x8e\x9c\x7d\x32\x9a\x3d\x4d\xcb\x2f\xd1\xff\xcf\x48\xa1\x50\xbd\x02\x00\x00\xff\xff\x04\x70\x4f\xa3\xc2\x00\x00\x00")

func templatesMigrateGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesMigrateGotmpl,
		"templates/migrate.gotmpl",
	)
}

func templatesMigrateGotmpl() (*asset, error) {
	bytes, err := templatesMigrateGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/migrate.gotmpl", size: 194, mode: os.FileMode(420), modTime: time.Unix(1511530662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesModelGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x51\xcd\x4e\xf3\x40\x0c\xbc\xf7\x29\x46\xb9\x37\xb9\x7f\xb7\x7e\xa2\x48\x3d\x80\x10\xf0\x02\x56\xd6\xa4\x2b\x6d\x76\xc3\x7a\x11\x05\x2b\xef\x8e\x92\x6e\xaa\x2d\x3f\x12\xaa\xb8\xd9\x1e\x7b\xec\x19\xab\x22\x71\x3f\x38\x4a\x8c\x6a\xcf\x64\x38\x56\xa8\x31\x8e\xab\x95\x2a\xec\x13\xea\x9d\x6f\xdd\x8b\xe1\x9b\x60\xd8\x4d\x75\x40\x75\x3d\x21\xfc\x8c\xfa\x96\x7a\x46\xb5\x19\xec\x3d\xcb\x10\xbc\x70\x85\x71\x6c\x1a\x6c\xee\x76\x4b\x05\x56\x90\xf6\x8c\xb8\xe4\x29\x80\xfc\xd4\x81\x96\x9c\xab\x33\x21\x3b\xe1\x23\xfd\x69\x41\xbd\x93\xed\x61\x08\x31\xb1\xc1\x3a\x43\x40\xd3\x40\x15\x03\x49\x4b\xce\xbe\x73\xbe\x61\x1c\x71\x26\xc5\x84\x56\x52\xb4\xbe\xcb\x6a\x8e\xb3\x99\xd8\x87\x34\x91\xff\x27\xe1\xc7\xb7\x61\x5e\xdb\x34\x90\x57\xea\x3a\x8e\xff\xfa\x59\xa9\xea\x89\xb9\x18\x5e\xae\x2c\xda\x8d\x95\x36\xda\xde\x7a\x4a\x21\x96\x63\x73\x7c\x55\xa2\xd7\x96\x9d\xf9\x44\xe8\x4d\xa9\x3a\xa7\x3f\x85\x85\x40\x69\xf7\xdc\x53\xf1\xab\x48\xbe\x63\xd4\xdb\x43\x8a\xf4\x30\x83\x72\xf6\xae\xd2\xcd\x23\xd9\x37\xdf\xbd\xd4\xdc\x8b\x8d\xfd\x53\x53\xbf\xda\xf6\x5b\x03\x55\x73\xcf\x47\x00\x00\x00\xff\xff\x46\xdc\x0d\xe4\x10\x03\x00\x00")

func templatesModelGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesModelGotmpl,
		"templates/model.gotmpl",
	)
}

func templatesModelGotmpl() (*asset, error) {
	bytes, err := templatesModelGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/model.gotmpl", size: 784, mode: os.FileMode(420), modTime: time.Unix(1511522185, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesParameterGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5b\x6d\x73\xdb\xb6\x93\x7f\x6d\x7d\x8a\xfd\xeb\xda\x0c\x99\x93\xa9\xdc\xff\x3a\x7d\xa1\xab\x3b\xd3\x38\x4e\xe3\x6b\x9a\xe4\xe2\x26\x7d\x91\xc9\xb4\x30\x09\x49\x68\x48\x80\x06\x20\xdb\x3a\x0d\xbf\xfb\xcd\x02\xe0\x03\x28\x88\x96\x1c\xf7\xda\xeb\x35\x6f\x22\xe2\x61\xb1\xfb\xc3\x62\x9f\x00\x6f\x36\x90\xd1\x39\xe3\x14\xc6\x2a\x67\x29\x2d\x89\x24\xc5\x35\xc9\x59\x46\xb4\x90\xe3\xaa\x1a\x6d\x36\xc0\xe6\x20\x24\x24\x3f\x32\x7e\xae\x69\xa1\x20\xf9\x91\xdc\xda\x5f\xb6\x3f\x25\x05\xcd\xd9\x7f\x53\x48\x5e\x91\x82\x42\x55\x5d\xe0\xc7\xec\x04\x18\xd7\x5f\x7f\x15\xe5\x94\x47\x96\x0a\xe1\x19\x44\x5c\x68\x48\xce\xd5\x77\x52\x92\x75\xec\x3e\x5f\x10\xf5\x8c\xa9\x54\xb2\x82\x71\x5c\x38\x6e\x86\x9d\x73\x4d\xe5\x9c\xa4\xb4\x6d\xba\xd0\x92\x92\x22\xc6\x9f\xaf\x56\x79\x4e\x2e\x73\x5c\xf3\xf1\x66\x03\x94\x67\x50\x55\x9b\x0d\x24\xef\x49\xbe\xa2\x67\xb7\xa5\xa4\x4a\x31\xc1\xa1\xaa\xe2\x78\xd4\x8c\x70\x42\xb5\x12\x55\xd5\x88\xcd\x81\x4a\x89\x5c\x3b\xf1\x69\xd3\x8d\xdc\x27\x6f\x88\x5e\x42\x55\x4d\x60\xb3\x81\x52\x32\xae\xe7\x30\xfe\xf2\x6a\x0c\xc9\x4b\x91\x12\x6d\xd7\x30\x9d\x41\x34\x4c\x4f\x77\xbd\xf8\x3f\xcc\x72\xff\x38\x01\xce\x72\xd8\x8c\x00\x24\xd5\x2b\xc9\xb1\x75\x54\x05\x58\xed\x40\x1e\x62\xd5\x75\x3f\x10\xab\x0d\xbd\xc3\x19\x7d\xc7\xd9\xd5\x8a\x0e\xf1\xda\x19\x71\x18\xbb\x7f\xb4\x06\x1d\x88\xc4\x19\x5f\x15\x3b\x20\xc0\xae\xff\x53\xb2\x5b\xfd\x75\x12\x1d\x02\x44\xfb\xab\xb6\x33\x0e\x04\x26\xf8\x1b\xe4\x58\xb3\x6b\x3a\xb6\x43\xdc\x91\x7c\x49\xf9\x42\x2f\x77\x1e\x49\xdb\xed\x2c\x4a\x0d\x60\x07\xcb\xcd\x86\xe6\x8a\x56\xd5\x78\xbc\xd9\x50\x9e\xed\x09\xae\x0f\x47\xd4\xc5\xa3\x0f\x87\x59\x6d\x6b\x4a\xdc\x45\xd0\xf6\x9e\xae\x94\x16\xc5\x73\x21\x0b\xa2\x35\x95\x50\x55\xc9\x85\x96\x8c\x2f\xa2\x76\xb0\x3d\x6d\xad\xd0\x77\x62\x6b\x44\xaa\xc1\x22\xb7\x83\x60\xd5\xdd\x7f\x2d\xb0\x5a\xa1\x0f\x02\xeb\x8d\xa1\xcb\xc3\x50\xb9\xce\xbf\x0e\x50\xbf\x6e\x36\xad\xc4\xbf\x1e\xa6\x55\x8c\xb3\x62\x55\xec\x3c\x80\xd8\x69\xb9\xa1\x57\x90\x5c\xdc\x90\xc5\x82\xca\x9f\xd6\x25\x85\x31\xe3\x9a\x2e\xa8\xc4\xf3\x7c\xce\x75\xc3\xce\x43\xc3\x3a\xb4\x2e\xb3\xeb\xe6\x0a\xe1\x9b\xe7\x82\xb4\x6c\x7c\xfd\x55\x14\xc2\x78\x78\x57\xe2\xfa\x84\x5a\x4c\xcc\xd7\xd9\x6d\x9a\xaf\x14\xbb\xa6\x4d\xf3\xa1\xc7\x76\x00\x60\xdb\xf9\xff\x0e\xe0\x1a\x93\x1e\xc0\x75\xf3\x61\x00\xaf\x72\xcd\xca\x9c\xbe\x9e\xef\xc0\xb8\xe9\x7f\x38\xe0\x0c\x12\x9f\x03\x40\x87\xe7\x83\x84\x45\xa7\x3c\x1c\x65\x3c\xa4\x66\x7c\x5e\x10\x72\x08\x2c\x07\x7b\x86\x96\xf7\x7f\xb9\x1e\xd7\xb8\xec\x0d\x65\xfd\x7f\x13\xa7\x94\x52\x94\x54\xea\x75\x2f\x25\xea\x04\x78\xe7\xaa\x89\x60\x2c\xb4\x9a\x16\x65\x4e\xf4\xae\x20\x27\xb1\xa3\xfc\x28\x31\x24\x5f\x68\x33\x6d\xbf\xd1\x58\xb3\x83\x28\xf3\x78\xb3\x69\xf6\xa8\xaa\xc6\xb6\xc1\x9d\x5b\x3b\xde\xb4\x86\xd0\x6d\x20\x9c\xc0\xdc\x8c\x54\xc3\x48\x05\xf8\x36\xdb\xdf\x17\x3c\x94\x45\x76\x05\x3f\xee\x85\x85\x35\xda\x97\x8c\x67\x65\x0d\x95\x99\x3f\xde\x19\x41\xb6\x6b\xe0\x2c\x6b\x95\x46\xd7\x44\xa2\x0e\x5c\x13\xc9\x31\x97\x49\x4e\x97\x2c\xcf\x02\x91\xec\x5b\x13\xc9\x7e\x2f\x8c\x5d\xab\xaa\xd1\x5c\x48\x68\x73\x5c\x3b\xeb\x05\x51\xef\x9b\x0d\x54\x75\xeb\xa9\xe0\xd7\x54\xe2\x0e\xb9\x86\xd0\xd6\x21\xf1\x73\x9e\xd1\xdb\xf7\xc4\x7d\x3a\x4b\xf9\x8b\xaf\xab\x77\xf2\xf9\x1e\x77\x5f\x12\xbe\xa0\x7b\x0d\x3f\x35\x3b\xd6\x17\xa4\xde\x24\x44\xdd\xf4\xd6\xa2\xec\xa4\x32\x3b\x01\x75\x43\x16\xc9\x45\x99\x33\xfd\x74\x6d\x45\x8b\xf6\x62\x78\xdb\x7e\xd4\xb8\xe5\x39\x4d\x11\x4a\x4b\x0d\xc3\x1a\xcb\x4d\x48\x6d\xea\x2d\xb5\x93\xc1\x31\x7e\x6c\x61\x6c\xe4\x40\x0d\xec\xef\x4a\xd3\x79\x27\xab\x93\xfa\x74\x75\x10\x69\xc8\x58\x6f\x7a\xb7\xb8\x28\x83\x3b\xa7\x9d\x33\xd3\x3d\x35\x42\xaa\xe4\x9c\x9b\x73\x80\xda\x16\xb5\xab\xed\x4c\xfb\x6c\xb7\x67\x77\xc7\xed\xb4\x46\x6b\xc7\xfb\xe9\x10\xb2\xe8\xe1\xd7\xc2\xb6\xad\xbb\xf7\x80\xcf\x59\x8e\xe4\x0d\x91\x8a\xfe\x75\x51\xdb\x1f\x19\xa7\x53\x77\xc3\x60\xe9\x39\xd3\xe6\x96\xb2\x1f\xfd\x93\xb1\xcb\x0d\xf9\xe7\x63\x1f\xbb\x77\x02\xa4\x2c\x29\xcf\xf6\xda\xa8\xb7\xfb\x62\xd5\xb5\xd1\x25\x49\x3f\x11\x6b\xb0\x92\x37\xee\x37\x8a\x34\x9d\xc2\x4f\x4b\xa6\x60\xce\x72\x0a\x37\x44\xc1\x82\x72\x2a\x89\xa6\x19\x5c\xae\x41\x2f\xa9\xb1\x39\x0b\x2a\x41\x0b\x91\x27\x38\xfe\x2c\x63\x9a\xf1\x05\xe8\x66\x5e\xc1\x16\x4b\x0d\xa5\x14\xd7\x14\xe6\x2b\x6d\x48\x2d\x29\x87\xb5\x58\x81\xa4\xc7\x72\xc5\x3d\x4a\xf5\x12\x90\x8a\xa2\x20\x3c\x1b\x8d\x58\x51\x0a\xa9\x21\x1a\x01\x8c\x39\xd5\xd3\xa5\xd6\xe5\x18\xf1\x1e\x2f\x98\x5e\xae\x2e\x93\x54\x14\xd3\x05\xe3\xc7\x0b\xc1\x59\x8a\xbf\xc6\xfd\x4e\x71\x2c\x4a\xca\x49\xc9\xa6\x56\x51\x07\x06\xd4\x8e\x7b\x60\x88\x5c\x71\xcd\x8a\x3d\x46\x4c\x0b\x96\x65\x39\xbd\x21\x72\x68\x30\x4a\xde\xef\x96\x42\xa5\xa2\xa4\xa9\xc8\xb5\x24\xdc\x48\xe7\x00\x9a\x92\x92\x19\xe9\x95\x96\xf3\x42\xef\x24\x6a\x7a\xcd\xc0\xe9\x14\x9e\xd1\x39\x59\xe5\xfa\xdc\x20\xa9\xac\xe6\x59\x1f\x95\xf8\x5d\xd6\xf5\x79\x87\xb4\xd6\xd4\x46\xe9\xa7\x53\x08\x10\xfa\xe2\x13\x5d\x4f\xe0\x8b\x6b\x54\x35\x3c\x4e\x89\x47\x11\x7b\xf1\x9c\xf5\x88\xbb\xe1\xbd\x25\x62\xa3\x79\x4f\x57\x8a\x71\xaa\xd4\x4b\xb1\x60\x29\xce\x23\x2a\x25\x5e\xd5\x13\xe8\x2d\x4d\x57\x9a\x2a\xa3\x40\xa9\x90\x14\x72\x1c\x0c\x62\x6e\x5a\x24\xc5\xa3\x98\x21\x31\x29\x56\x9a\x22\xfd\x52\x30\xae\x93\xd1\x7c\xc5\xd3\x3d\x56\x88\xe6\x80\x23\xa3\x54\xdf\xc2\xe3\x05\xe3\xe8\x6e\x34\xbd\xd5\x4d\x70\x2e\x89\x29\x97\x4e\xa0\xb4\x3f\x1f\x07\xc9\xd8\x71\x8d\x80\x31\x3c\x26\x25\x4b\xde\x52\x55\x0a\xae\x68\x0c\x48\xf9\x05\xe1\x59\x4e\xe5\x73\x64\x6c\x33\x3a\x72\x76\xd5\xf0\xb9\xb5\x7c\x8c\x23\x8e\xfa\x4c\x4c\xa7\xed\xe1\x71\xec\xcc\xa5\x28\x40\xd2\xab\x15\x55\x7a\x74\x74\xe4\x5a\x67\x27\xf0\x68\x88\xcf\x6a\x74\x74\xe4\x3c\x85\x9d\x91\xa0\x73\x7f\x6b\xc9\x20\x33\xf1\xe8\xe8\xa8\xef\x0c\x8e\xcc\x9c\xd7\x97\xbf\xe1\x34\x2a\x65\x12\x3d\x76\x4e\xe1\x54\x14\xa5\x50\x4c\xd3\x33\xfc\xc6\xb9\x47\xa5\x14\x97\x39\x2d\x70\x28\x22\xf1\xc6\x7e\x1a\x22\x47\x3f\x31\x9d\xd3\x19\xc0\xf8\x1d\x2f\xa5\x48\xa9\x52\x26\xed\x38\xe3\x9a\xe9\x75\x32\x9e\x98\x41\x17\x9a\xe8\x95\x9a\x01\xe3\x3a\xb2\xcb\x26\xa7\x22\xa3\x51\x1c\xdb\xfe\x67\x54\x13\x96\xcf\xc0\xf5\x99\x95\x23\xdb\x87\xd2\x1d\xa5\xfa\x36\xf9\x59\x32\x4d\x65\xf2\x82\x92\x8c\xca\x28\x4e\x2e\xa8\x8e\xc6\x06\x61\xae\x8f\xd1\xf5\x60\x60\x4e\xca\x32\x67\xd6\x3f\x4d\x1d\xd7\xff\xfa\x9b\x12\x7c\x1c\xd7\x64\xfe\xf3\xe2\xf5\xab\xc8\x75\x25\x96\xaf\x09\xb8\x6f\x33\xc8\x6e\xe5\xc8\xae\xdc\x6a\x39\x76\xa8\xd2\xb8\x63\xc4\x74\x97\x4a\xb9\x0c\x07\x29\xa9\x1b\xa6\xd3\x25\xe0\x34\x23\xad\x41\x3d\x25\x8a\x02\x9a\x44\xb7\xf6\x2b\xe1\x44\x98\xd5\x0c\x7e\x77\x29\xa4\xfe\x99\xe9\xa5\x1d\x10\x35\xf3\x91\x66\x66\x8f\xff\xcc\x93\xa6\x19\x31\xb1\x8b\x3d\x15\xd9\x3a\xb6\x02\x54\x23\xeb\x17\x06\xf4\x07\x52\xc1\x35\x61\x5c\x01\xc9\x73\x73\x10\x2f\xc5\x8a\x67\x8d\x4e\x0a\x69\x1a\x37\x1b\x58\xae\x0a\xc2\xbd\x13\x8d\x3e\xd3\x80\x8d\x6b\xe8\x75\xc9\x52\x92\xe7\xc6\xd5\x28\x0a\x44\x52\x10\x97\x48\x9a\x66\x56\xb5\x89\x95\xdc\xa9\xe6\x68\x3a\xc5\x69\xce\x50\xce\xcc\x7a\x54\x53\xa9\x8c\x63\x73\x4b\x8c\x34\x06\x15\x43\xec\x2b\x2d\x57\xa9\x86\xcd\xc8\xb3\x93\xed\x31\x7b\xec\xb6\xea\x19\xc5\xb4\xb9\x74\xa1\x0b\x2e\xb1\xd5\xe2\x95\x00\x91\x4b\x26\xa9\xb3\xa2\xf5\xd7\x0c\xb4\x5c\xd1\xfe\x58\x57\x3f\xb1\x43\xdd\xc7\xac\x0e\xa0\xfb\x55\x16\xa8\xaa\x6f\xc0\xbb\x08\x68\x3b\xb6\x08\xdb\xca\x97\x23\x6c\x3f\x02\x84\x9b\x51\xdf\xf6\x08\x37\x1d\x5b\x84\x9b\x3a\x88\xa3\xed\xbe\xe1\xf5\x7c\x66\x2f\xd1\xba\x03\x02\xf2\xda\xe2\x70\x23\x31\xd8\x6f\x37\xb7\xd3\x1d\x90\xc8\x9b\xca\xb8\x3f\xb5\xd3\xdd\x9f\xea\x0a\xad\x76\xa2\xfb\x98\xb9\x28\xa8\xee\x09\x70\xda\x5c\x92\x59\x46\xcd\x67\xc3\x67\xdd\x19\x60\xb3\x3b\x8f\x71\x6f\x5e\xdb\xd9\x9f\xd7\xbb\x97\x03\xb0\x0d\x61\xb5\xe9\x84\xd2\x23\x80\x73\x27\x4c\xa7\xb5\x3f\x21\x90\xe3\x8d\x00\xda\x56\xb0\xcd\x96\x4e\x60\x70\x9f\xde\x0b\xa2\x5c\x40\x61\x29\xb9\x8f\xd9\x76\x99\xa7\x1d\xd6\x8d\x2d\x1e\x4f\x9b\x3c\xd1\x54\xa1\x2e\xd2\x25\x2d\x88\x8b\x4a\xda\x03\x7b\xfe\xcc\x05\x13\x0f\x76\xbd\xf6\x9c\xe5\xd4\x1c\xf1\x43\x6e\xdc\x5c\x8a\xd2\x2d\x17\x84\x03\x95\x3e\xa7\x56\xac\xe4\x5c\x3d\x25\x8a\x22\x09\x7f\x95\xde\xa0\x9a\x91\x81\xc5\xdb\x84\x04\x6c\x41\xac\x1a\x8d\x02\xf1\xc1\x80\xd9\x7b\x2e\x45\x71\xaa\x6f\x61\x41\xb5\x8d\xa7\x4a\xcf\x1a\x1a\x73\x8b\xcd\x0b\xc6\x8d\x81\xa7\xb7\x75\x18\x75\x37\xd1\x40\x00\x33\x14\x28\xa1\x5f\xb3\xab\x4f\xe0\x17\x74\x90\xe8\x98\xbe\x47\xef\x6c\x5b\xd1\xf7\xba\xf8\xc8\xc5\x27\xd1\x10\xb9\xb8\x5b\x05\x33\x91\x65\x1b\xcd\xc0\xa5\xd0\x4b\xc0\xf0\x46\x99\xed\xa9\xa3\x7f\x05\xa4\x8e\x9b\x26\xc0\x34\x10\xa5\x56\x85\x09\x34\x89\xc6\xcc\xa4\xcc\xe9\x2d\xe6\x38\x7c\xa1\x80\xe1\x57\x41\xb9\x06\x02\xae\xfc\x84\xbb\x18\xd9\x10\x3c\x79\x4b\x17\x4c\x69\xb9\x8e\x6d\x92\x8c\x21\x8b\x55\x3e\x64\x05\x9d\xa1\x32\x04\xc0\x84\xc2\x0a\x17\xbb\x61\x79\x0e\x2b\x45\x11\x7b\x62\xb2\xa7\x82\xea\xa5\xc8\x00\x9d\xa1\xb2\xa0\x9b\xf4\xfa\x2d\x4d\x29\xbb\xa6\xb2\x56\xb3\x41\x14\xa0\x17\xc4\xf5\x36\xc4\x32\x87\x49\xfd\x35\x91\xe8\xf6\xe1\xc3\x47\xd3\xd6\x16\x6e\x1a\x4d\x72\xf5\x03\x53\x74\xb2\x42\xbe\xa2\x37\xd6\x26\xa8\x4e\x71\x77\xd4\x4e\x7d\x41\xd4\x7f\xad\xa8\x5c\x37\x24\xae\xcc\x6c\x97\x27\xd9\x04\x55\x21\x57\xb5\x2f\x4f\xde\xbd\x7d\x99\x98\x29\x51\xbc\x8b\x22\xae\xd8\x10\x6c\x4b\xaf\x5d\x2a\xa6\xc2\x61\x3d\x0f\x91\x1a\x27\x44\xff\xfe\x4f\xf8\xe6\x1b\xf8\xe7\x93\x7e\xdd\xb4\x1b\xd2\x9a\xa8\xe2\x4c\xca\x57\x42\x37\x93\x5d\xc1\xa3\xfe\xd7\x29\xb2\xd6\x4d\x55\x53\xac\xd9\xc5\x89\x61\x60\xbb\x60\x3b\x4c\x75\x74\x54\xf9\x32\x1b\xb4\x1a\xc1\x47\x00\xf3\xec\x2e\x34\x71\x5a\xdc\x4d\xb2\xfa\x90\xf6\xa3\x1c\xdf\x0c\x7b\x45\x63\x5b\x45\x6e\xb7\x13\x77\x33\xa8\x78\x13\xb8\x5a\x7e\xda\xd1\x63\xce\xf5\x95\xc2\x63\xfd\xfa\x87\xee\x93\x8a\x4e\xa1\xc9\x15\xfa\x7a\x5a\x6e\x92\x91\x80\x3b\x88\x0e\x67\x62\x67\x05\x1d\xcc\x01\x68\x0a\x2f\x92\x2a\x53\x3b\x6b\x2b\x4c\x6d\x59\xee\x5c\x21\xe3\x35\x10\x32\x6c\xff\x67\x27\xf0\xe1\xa3\x32\x95\xfb\x0d\x6e\x8b\x19\xee\x49\x5d\xdd\x5b\xec\xf0\x92\x13\x13\x1f\x3c\x94\x88\x36\x47\xaa\x85\xbc\x1f\x9f\x5d\x75\xb4\xf4\x3e\x98\x63\x76\x4a\xb8\xe0\x18\xe7\xdb\xc6\x1f\xe8\xda\x03\xe6\xe3\xc3\x4a\xd2\xd8\x0c\xa3\xcb\xae\xad\xf6\xfd\x56\xbf\xb7\x5e\x57\x85\xdf\x5c\x59\x76\x27\xa1\xb3\x8e\x8b\x20\xd1\x1d\x7a\x7d\x37\xef\x98\x36\xbf\xa2\x37\xd1\x57\x4f\x9e\x4c\x60\x2c\x29\xc9\x18\x5f\xd8\x72\xda\x97\x57\x30\x27\x2c\xc7\xc4\xe1\xcb\xeb\xf1\x56\x4d\x35\xf2\xf9\x8c\xeb\xb2\x6f\x6c\xe0\xb0\x48\xd8\x85\x43\x7b\x17\xd6\xde\xd6\xb2\xa0\x50\x9b\x67\x44\x93\x59\x10\x92\x09\x58\x50\xc2\xbd\xb6\xaf\xea\x6d\x4b\x55\xcd\xb3\x5d\xc7\x33\x1b\x36\x1f\xf3\xec\x41\xed\xc7\x7d\xf8\xf8\x1c\xa5\xec\xd9\xe1\xbe\xa6\xfe\x6d\x71\xc3\x87\x18\xc3\xb4\xde\x41\xfe\x5b\x83\xfc\xe0\xc8\x41\xf4\x54\x64\x4e\x5f\xda\x3c\x8a\xcd\x9b\xc3\xfc\x82\x98\x11\x5d\xc3\x1c\x77\x6e\x23\xfb\xf9\x87\xab\x00\xec\x6b\x32\xba\xf6\x10\x97\xf1\x8e\x7c\x87\xcd\xad\x54\xa8\xd3\x74\x76\x5b\x0a\xa9\x4d\xc5\xe4\x52\x64\x6b\xef\xfa\xef\x47\x91\xd1\x5c\xb5\xb7\x15\xc9\x3b\x5e\x10\xa9\x96\x24\xdf\x6c\x30\x2a\x65\x65\xdd\x57\x5f\x24\x6d\x4d\xd9\xba\x11\xbf\xc8\x59\xda\xe6\xd4\x51\x5f\x84\x89\x2d\x23\x63\xcc\x8c\xd9\x80\x0c\x98\x74\x08\xd6\x7a\x9a\x61\x27\x27\xc0\x44\x72\xf6\xfa\x79\x13\xf6\x99\xd6\xda\xe4\xd7\xb3\xf6\x7e\x62\x1a\x8f\x6c\x84\xe8\xec\xb9\xe5\x7b\xa7\xda\xb4\xf8\x63\x88\x8f\x88\xf6\xee\xd4\xa1\x17\xbb\x62\xa2\x64\x0a\x82\x8f\x70\x70\x4f\x45\x0f\x16\x75\xa7\xa7\xeb\x8a\x7d\xa7\x2f\x1b\x42\xc3\xc1\xe1\xbc\x9c\x77\x69\x31\xec\x68\x4d\x70\x6e\x8b\xc4\x9f\xc9\xc3\x04\xc6\x63\xe7\x70\x77\xe0\xd3\xdb\xad\xee\x51\xee\xfb\xe7\xa0\x23\xa8\xef\x0f\xed\x67\x14\x28\x2a\x74\xcb\x1b\xde\x9b\x82\x9c\x11\x45\xb3\xce\x55\xb2\x4d\x64\x5f\x5f\xfe\x46\x53\x1d\xc7\x36\xb3\x83\x5f\xec\xa3\x61\xff\x35\xc4\x56\xae\xd9\x7d\xe5\xb0\xa7\x51\xa8\x15\xc1\x37\xae\xc3\xeb\x24\x2e\xa3\xa6\xd1\x80\xa1\x1c\x34\x96\xf6\xdf\xa5\xa4\xe4\xd3\xa8\xce\xa8\x02\xfb\xe0\xfd\x70\xae\x66\x1f\x70\x9b\x8e\x06\xdd\xa6\x65\x1b\xde\x56\x72\x3c\x50\x7b\xca\x36\x20\xd9\xb6\x2e\x19\x74\x73\xca\x71\x60\x8c\x87\xf0\x49\x43\xe7\x10\xeb\x7d\x60\xc1\xaa\xaa\x1e\x35\x4c\x5c\x5a\x63\x6f\x99\xeb\xdf\x1d\x06\x6a\xe1\x5d\x9d\xff\xdf\x31\x11\x55\x97\xa7\xad\x1b\xfd\xf6\x77\x17\xc9\x6f\x1b\x20\xfd\x17\x0f\xcd\xe5\x56\xfb\xf0\xc8\xda\x11\x49\x55\x92\x24\xb5\xb7\x76\x93\x38\xcb\x5d\x65\xee\x8b\x34\x27\x4a\x19\xc0\x67\x27\x10\xf5\x36\x21\x76\x2f\xa7\xb6\xb2\xf2\x36\x27\x37\xca\xe7\xf9\x78\xaf\x88\xe9\xfd\x05\x50\xf7\xc1\x5b\xf8\xe1\xda\x70\x4d\xa9\xc3\xac\x5f\x4e\x0a\xe6\xa3\xe4\x06\x33\x84\x26\xe1\x9d\xc0\x92\xa8\x1f\xe8\x1a\x2e\x85\xc8\x9b\x78\x07\x76\x54\xc7\x36\x5e\x10\x53\x97\x62\x9b\x14\x3b\xf6\x54\x87\xcd\xe1\x1f\x8e\x78\x68\x6f\xee\xe5\x4e\x3d\x25\x30\xa5\x30\x72\x03\x56\x92\x8e\x4a\x58\x19\x3d\xb5\x20\x37\x98\x28\xd9\x8e\x0f\xdd\x41\xc7\xff\xf6\xb1\xa5\xbb\x8f\x60\xb6\xf3\xbb\x3c\x17\x37\x67\x45\xa9\xd7\xa6\x9e\xe3\x9b\x8f\xe6\x79\x61\x3d\xc9\x3d\x0b\xdc\xff\x6f\x53\x24\xb9\x09\xc7\x9c\x9d\x02\x54\x20\xf2\x8e\xa0\xcf\x39\x58\x43\x68\x99\xae\xd9\x89\x77\xf1\x6f\x60\x3a\x81\xf1\x18\x36\x30\x9d\x02\xc5\xfe\xba\xf4\x59\x12\x65\xef\x0c\x85\x5e\x52\x09\xed\x5b\x4c\xd5\x75\x88\xde\x15\x83\x7b\x3d\xe8\x5b\x81\xaa\xaa\x07\x78\x25\xac\x5e\x9a\xdf\xc6\x3d\x6d\x5c\x24\x94\x4d\x71\xed\x9d\x6b\x63\x07\xbb\x07\xc8\x2b\xbd\x47\x75\xbd\x7d\xf8\x7a\x63\xfb\xd1\x69\xec\xdb\xec\xf0\x1f\xef\x04\xec\xf0\xdd\x57\x1c\xf6\xbc\x37\x96\x19\xb6\xef\x33\xba\xc6\x3a\x94\xa7\x3b\xd6\xfb\x41\x65\x63\xc0\xb6\xad\x7a\x73\x99\xd4\xbe\xc5\x33\x5b\xea\xbf\xd7\xeb\xbe\xd4\x43\xed\xbb\xd7\x8b\xb2\xbd\xff\xf0\xca\xeb\x6c\xb6\xda\xea\x7d\x2b\xc2\x10\xea\xbb\x1c\x9c\x11\x6d\x2b\x5d\xdf\x36\xaa\x3e\x04\x5b\x6f\xee\x3c\x06\xbd\xc7\xbf\x5d\x3e\xff\xd4\x08\xdd\xe3\xea\x6d\xe0\x9e\xad\xfe\xae\x41\xf7\x2f\xbc\x22\x03\xa7\xbd\xe9\x69\xb9\x8d\x6d\x5e\x63\x5f\xc4\xdf\x73\x3f\x25\xb9\xd9\xd2\x67\x67\x68\xba\xaf\x89\xef\xaa\x7b\xd6\x26\x39\x58\x18\x18\x4a\xf2\x03\x06\xb7\x66\xc4\x0b\x1b\xac\x98\xdd\xa4\xe0\xcf\xe7\xb8\x7b\xb1\xdd\xef\xee\xa0\x1b\xe3\x43\xaf\x02\xf7\xd3\xe3\x62\x95\x6b\x36\xb6\x76\x6e\x8f\xa7\xd8\xb3\xc6\x81\xfb\xa9\xf2\xd5\x75\x38\x4e\xde\x23\x2c\xd8\x35\x35\x1c\x2a\xc0\x31\xb8\x60\x61\xcf\xd7\xa1\xbb\x1e\x7e\xef\x58\x36\xf0\x04\x37\xf0\xc8\x7b\xeb\x28\x98\x42\xcd\xdd\xe1\x49\x0b\xc4\x5e\xac\x7b\xe9\xc9\xef\xa6\x18\x5e\x58\xb2\xe3\xa1\x42\x46\xe7\xef\xeb\x77\x8b\xe1\x57\xf4\x1d\x7f\xbe\x1f\x86\xf7\xc3\xe2\xd1\x23\x33\xa5\xe6\xa7\xab\x48\x3b\x8d\x5b\x3d\xd8\x2b\xf0\x7c\xee\x3e\x70\x96\xf7\xd3\xb6\x2e\xae\x83\x7f\x00\xd0\x8c\xda\x69\x8c\xef\x7e\xc5\xec\xdd\xf3\x9a\xb2\xdc\x1f\x6b\x8a\xb7\x6d\xb1\xff\x67\x35\x18\x75\xf5\xff\xfa\x24\xcc\xf9\x7d\x2c\xf6\x1e\xf2\xdc\x91\x4f\xed\xf1\x2e\x3d\xe8\x71\x82\x7f\x11\xee\x7e\x4d\xa7\x70\xcd\x8a\x19\xcc\xf5\xc9\x42\x8c\xfe\x27\x00\x00\xff\xff\x5d\x8a\x43\x8c\x92\x42\x00\x00")

func templatesParameterGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesParameterGotmpl,
		"templates/parameter.gotmpl",
	)
}

func templatesParameterGotmpl() (*asset, error) {
	bytes, err := templatesParameterGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/parameter.gotmpl", size: 17042, mode: os.FileMode(420), modTime: time.Unix(1511444053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesRestapiGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4f\x6f\xe3\x2e\x14\x3c\x9b\x4f\xf1\x7e\x3e\x34\xf6\x4f\xb5\x13\xf5\xb2\x52\xa5\x1c\xb2\xfd\xa3\xad\x9a\x43\xb4\xc9\xee\x9e\x09\x7e\xd8\x28\x18\x2c\xc0\xa9\xa2\x36\xdf\x7d\x05\xb6\x5b\x27\xe9\xee\x61\x89\x14\x89\x07\xcc\xc0\xcc\x3c\x37\x94\xed\x68\x89\xf0\xfa\x0a\xf9\x62\xf5\xb4\xea\xa7\xc7\x23\x21\xa2\x6e\xb4\x71\x90\x90\x28\xe6\xb5\x8b\x09\x89\xe2\x52\x37\xbb\x32\x17\x6a\x4a\x25\x32\x57\xe9\x9a\xda\xe9\x4e\xa8\xb2\x11\x2a\xdf\xdf\xc4\x24\x25\x84\x69\x65\xc3\xa1\x02\x39\x6d\xa5\x5b\x14\x85\x41\x6b\x61\x0e\xf1\xed\x97\xd9\x6c\x16\x36\x4d\xa7\x70\xa7\x15\x17\x25\x14\xc8\x85\x42\x0b\xae\x42\x60\x5d\x49\x37\x4e\x68\x65\x81\x6b\x13\xca\x8b\xd5\x13\x58\x34\x7b\x34\x39\x71\x87\x06\x87\xa3\xd6\x99\x96\x39\x78\x25\xd1\xc0\xf1\x31\xac\x33\x42\x95\x24\xba\xc7\x6d\x5b\xc2\x78\x6c\xb5\x96\x24\x7a\x52\x16\x59\x6b\xf0\xdb\x66\xb3\x1a\xd7\x17\xad\xab\xee\x85\xa5\x5b\x89\xc5\xb8\xbe\x59\xae\xef\xd0\xb8\x47\x21\xf1\x8c\x61\xb3\x5c\x3f\xe3\x61\xb4\xf0\xbe\xf2\x0b\xa5\x7c\x56\xfa\x45\xbd\x03\xf6\x58\x7a\x87\xea\xc7\xf7\xe5\xb0\xf1\x18\xf4\x58\x51\x63\x11\x1a\xff\x6f\x7b\x25\x5a\x43\xbd\x12\xc0\x8d\xae\x81\xe9\xba\xa6\xaa\x90\x42\x21\x70\x49\x4b\x9b\x13\xde\x2a\x06\x09\x83\xff\x3b\x41\xd2\x0e\x23\x49\x01\x8d\xd1\xc6\x0b\x33\x78\xf3\x28\x69\x99\xc4\x85\x17\x23\xbe\x86\xf8\x41\xf9\xfb\x40\x98\x83\xd4\x65\x29\x54\x09\x54\x15\xd0\x34\x46\x73\xa8\xd1\x19\xc1\x6c\x1e\xa7\xf9\x57\xad\xe5\x4f\x6a\x92\x2b\x96\x07\x29\xd3\x73\x4c\xda\x49\xef\x51\x07\x17\x9c\x06\x29\xac\x43\x05\x5a\x5d\x03\xe6\x65\x0e\xc1\x79\xd0\x06\x66\x79\xf8\x85\xb9\xc7\x27\x51\x74\xdf\xe5\x24\x39\xcd\x4b\x9a\xaf\x83\x3a\x3d\xf9\x50\x3d\xa7\x17\xbd\x8f\x59\xe5\x5c\xe3\x2f\xb1\x46\xb3\x17\x0c\x41\x2b\x79\x00\xef\xee\xd9\x2b\xc6\xc6\x5f\xa0\x39\x69\x33\x86\xc6\x65\x5c\x48\xf4\x68\x2b\xea\x2a\xff\x9e\xcd\x72\x0d\xde\x7f\xf0\x0b\xd0\x5a\x2c\xe0\xa5\x42\x15\x62\xe9\xb5\xf3\x68\xeb\xfe\x3d\x27\xf7\x1e\xe5\xe6\x53\xb6\x1d\x1e\x3e\x25\x7b\xc6\xc3\xbf\x70\xf5\x49\xbc\xa0\x2a\xba\x04\x66\x2f\x28\x65\xb6\xf3\x99\xf4\x84\x7d\x2e\x81\xb6\x4e\xd7\xd4\x09\x06\xd3\xfc\x63\x07\x18\xb4\xba\x35\x0c\x6d\x4f\x36\x52\xf1\x22\xda\x7f\x64\xa4\xad\xab\xce\xb8\xaa\xd0\xd9\x54\xca\xbf\x31\x8c\x1b\xf1\x52\x39\xdf\x41\x59\x6b\x64\xe7\xb8\x83\xf7\x96\x0a\x72\x39\x0d\x7b\x2a\x45\x41\x1d\x82\xf6\x84\x37\x10\x4e\xd8\x4f\x55\xeb\x8f\x8e\x48\xfa\x36\x22\x24\x12\x1c\xfe\x3b\xcd\x0c\x5c\x5d\x41\x72\xe2\x2b\xcc\xe7\x10\xc7\xf0\xf6\x06\x63\x0b\xba\x6a\xea\x9b\x30\x32\xe8\x5a\xa3\x80\xd7\x2e\x7f\xf0\x9d\xc9\x93\x78\x92\x65\x27\x61\x9b\x84\xf6\xeb\xab\x43\x28\x26\x50\xb7\xd6\xc1\x16\xc1\x36\xc8\x04\x17\x43\x14\x26\x59\x76\x12\xfc\x39\xa7\xd2\xe2\x24\x4e\x49\x74\x24\x64\xe0\x53\x42\x92\xa3\xff\xb4\xec\x45\x7d\x0b\xdc\xcd\x4b\x4d\x7e\x07\x00\x00\xff\xff\x04\x82\x5f\xc7\xef\x05\x00\x00")

func templatesRestapiGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesRestapiGotmpl,
		"templates/restapi.gotmpl",
	)
}

func templatesRestapiGotmpl() (*asset, error) {
	bytes, err := templatesRestapiGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/restapi.gotmpl", size: 1519, mode: os.FileMode(420), modTime: time.Unix(1511531403, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesServiceGotmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x6e\xe3\x36\x10\x3d\x8b\x5f\x31\x10\xd2\x85\x64\x38\x54\xcf\x01\x8c\x62\x37\xde\xb4\xc9\xc1\x09\x92\x06\x3d\x06\x94\x34\x96\x69\x4b\xa4\x3a\x1c\xd9\x71\x04\xfe\x7b\x41\x2b\x76\xe4\xa4\x97\xbd\x08\xe4\xf0\xbd\x37\xef\x69\x44\xb5\xaa\xd8\xa8\x0a\xa1\x51\xda\x08\xa1\x9b\xd6\x12\x43\x22\xa2\xd8\x20\x67\x2b\xe6\x36\x16\x51\xcc\xba\xc1\x58\x88\x28\xae\x34\xaf\xba\x5c\x16\xb6\xc9\xc8\xba\xc2\xb6\x58\xd8\x9a\x49\x99\x4c\x59\xba\xac\xb4\xb9\x74\x3b\x55\x55\x48\x99\x6a\x75\xfc\x4b\x84\xc2\x9a\xa5\xae\x42\x97\xbe\x27\x65\x2a\x04\x39\xc7\xa5\xea\x6a\xbe\x3d\x98\x72\xde\xf7\x7d\x4b\xda\xf0\x12\xe2\xdf\xfe\x8d\x41\x7a\x1f\xb0\x68\xca\x61\x31\x90\x2e\x36\xb8\x9f\xc2\xc5\x56\xd5\x1d\xc2\xd5\x0c\xe4\x88\x1d\xce\xbc\x87\xbe\x87\xb1\xce\x80\x1d\x8b\x9d\xfb\x0e\x26\x2b\x6b\x74\x11\x56\xb1\x88\xd6\x3b\x7e\xa9\x75\x0e\x63\x4c\x59\x91\x5e\xab\x7a\xab\xb2\xf5\x8e\x2f\x2b\xfb\x29\xfa\x5a\x9b\xb7\x55\x97\x55\x96\x9a\x58\x44\x59\x76\xc6\xdd\xfc\xbe\xe9\xf2\xce\x64\x6d\x1b\x8b\x54\x88\x65\x67\x0a\xb8\x26\x54\x8c\xf7\xf4\xdc\x96\x8a\xf1\x6e\xc7\x7f\xdb\x0d\x9a\xa4\xcc\x61\x12\x44\xe4\xfc\xc7\x14\xd6\x3b\x7e\x76\x48\x30\x69\x6c\x89\xb5\x93\x77\xc3\x3e\x85\x24\xb7\xb6\x9e\x02\x12\x59\x4a\xa1\x3f\x34\xfc\x13\x19\xf0\x55\x3b\xd6\xa6\x82\x7c\x0f\x84\x8d\x65\x84\xdb\x39\x28\x53\x82\x43\xda\xea\x22\x6c\x45\xb4\x55\xf4\x81\x3c\x97\x16\x91\x5e\x42\x99\xcb\x7f\x56\x48\x98\xc4\x9d\x43\x7a\x31\xaa\x41\x98\xc1\x1f\xf0\x7d\x31\x07\x6c\x94\xae\xc3\x2e\x3e\xd9\x93\xe1\x11\x40\x1f\x95\x9f\x01\x95\xca\x1b\x4d\x8e\x93\x6f\xc7\x5e\xa9\x7c\xc4\xc2\x52\xb9\xb0\x7c\x63\x3b\x53\x26\x07\xeb\x11\x12\x85\x31\x96\xb9\x1c\xde\x49\xf2\xae\x92\xca\x9f\x21\x9f\x88\x22\x42\xee\xc8\x84\xb8\x30\x9b\x81\xd1\x43\x74\x11\xf9\xc3\xa8\x0e\x1d\x6f\xe7\x30\x3b\x85\x92\x21\xe5\xf1\x64\x10\x2d\xbf\xf3\x18\x70\x2a\x8a\xa3\xf8\x52\xd5\x0e\xa7\xc1\xc5\x93\xda\x7e\xf1\xe0\x85\xe0\x7d\x8b\xe1\xc3\x92\x8b\xf0\x3e\xbc\x7f\x42\xda\x22\x81\x63\xea\x0a\x0e\x41\xfe\x42\x55\xf3\x0a\xc2\x68\x02\xfe\x30\xe5\xc4\xc1\xe4\x0b\x27\x85\x01\xba\x4f\xd2\x03\x3a\x90\xdf\x5d\x38\x39\x1c\x05\x81\x8f\x5b\x72\xdf\x22\x29\xd6\xd6\x38\xef\xcf\x74\x2f\x3e\x0b\x87\x0f\x5f\xb9\x42\xd5\xfa\x0d\x4f\x5d\x93\x82\x5f\x61\x52\x69\x23\xaf\xad\x61\x7c\xe5\xbe\x07\xbd\x04\xf9\xa0\x48\x35\x0e\xbc\x9f\x02\xb4\xc3\x7a\xd2\xf7\xf2\x61\xf8\x5f\x78\x2f\xff\x57\x6d\x60\xf5\x3d\xa0\x29\xc1\xfb\x14\x26\xaa\xd5\xf2\x11\x5d\x6b\x8d\xc3\x51\x96\x6f\xe3\x7a\x7f\x6d\x4b\xbc\x82\xf0\xbb\x91\x4f\xac\xb8\x73\x0b\x1b\xae\x7d\x8d\x0d\x1a\xc6\x72\x0a\x3f\x6c\xb9\xbf\x82\x78\x61\x19\x46\xf5\xd8\x0b\x2f\x8e\xb7\xf6\xbf\x00\x00\x00\xff\xff\xd0\x22\x82\x74\xca\x04\x00\x00")

func templatesServiceGotmplBytes() ([]byte, error) {
	return bindataRead(
		_templatesServiceGotmpl,
		"templates/service.gotmpl",
	)
}

func templatesServiceGotmpl() (*asset, error) {
	bytes, err := templatesServiceGotmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/service.gotmpl", size: 1226, mode: os.FileMode(420), modTime: time.Unix(1511531390, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"config.yaml": configYaml,
	"templates/.DS_Store": templatesDs_store,
	"templates/api.gotmpl": templatesApiGotmpl,
	"templates/main.gotmpl": templatesMainGotmpl,
	"templates/migrate.gotmpl": templatesMigrateGotmpl,
	"templates/model.gotmpl": templatesModelGotmpl,
	"templates/parameter.gotmpl": templatesParameterGotmpl,
	"templates/restapi.gotmpl": templatesRestapiGotmpl,
	"templates/service.gotmpl": templatesServiceGotmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"config.yaml": &bintree{configYaml, map[string]*bintree{}},
	"templates": &bintree{nil, map[string]*bintree{
		".DS_Store": &bintree{templatesDs_store, map[string]*bintree{}},
		"api.gotmpl": &bintree{templatesApiGotmpl, map[string]*bintree{}},
		"main.gotmpl": &bintree{templatesMainGotmpl, map[string]*bintree{}},
		"migrate.gotmpl": &bintree{templatesMigrateGotmpl, map[string]*bintree{}},
		"model.gotmpl": &bintree{templatesModelGotmpl, map[string]*bintree{}},
		"parameter.gotmpl": &bintree{templatesParameterGotmpl, map[string]*bintree{}},
		"restapi.gotmpl": &bintree{templatesRestapiGotmpl, map[string]*bintree{}},
		"service.gotmpl": &bintree{templatesServiceGotmpl, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

