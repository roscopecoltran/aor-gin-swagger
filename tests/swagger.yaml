swagger: '2.0'
info:
  version: '1.0'
  title: admin-on-rest entity APIs
  description: |
     An extensible database abstraction browser
  contact:
    name: "Rosco Pecoltran"
    email: "rosco_pecoltran@msn.com"
host: 'localhost:7000'
basePath: /
schemes:
  - http
  - https
tags:
  - name: data-controller
    description: Data Controller
  - name: authentication-rest-controller
    description: Authentication Rest Controller
  - name: user-controller
    description: User Controller
  - name: apply-controller
    description: Apply Controller
  - name: role-controller
    description: Role Controller
  - name: schema-controller
    description: Schema Controller
  - name: data-source-controller
    description: Data Source Controller
  - name: permission-controller
    description: Permission Controller
securityDefinitions:
  OAuth2:
    type: oauth2
    flow: password
    tokenUrl: https://info.services.auth.localhost/oauth2/tokeninfo
    scopes:
      uid: Unique identifier of the user accessing the service.
  BearerAuth:
    description: |
      Bearer: xxxxxx.yyyyyyy.zzzzzz
    type: apiKey
    in: header
    name: Authorization
  jwt:
    type: apiKey
    name: Authorization
    description: JWT bearer token
    in: header
security:
  - key: []
  - OAuth2: [uid]
  - BearerAuth: []
paths:
  '/api/{entity}':
    get:
      tags:
        - data-controller
      summary: dataQuery
      operationId: getDataMutationUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: entity
          in: path
          description: entity
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - data-controller
      summary: dataMutation
      operationId: dataMutationUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: entity
          in: path
          description: entity
          required: true
          type: string
        - in: body
          name: allRequestParams
          description: allRequestParams
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - data-controller
      summary: dataMutation
      operationId: dataMutationUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: entity
          in: path
          description: entity
          required: true
          type: string
        - in: body
          name: allRequestParams
          description: allRequestParams
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/api/{entity}/{id}':
    get:
      tags:
        - data-controller
      summary: findOne
      operationId: dataMutationUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: entity
          in: path
          description: entity
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - data-controller
      summary: dataMutation
      operationId: dataMutationUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: entity
          in: path
          description: entity
          required: true
          type: string
        - in: body
          name: allRequestParams
          description: allRequestParams
          required: true
          schema:
            type: object
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - data-controller
      summary: dataMutation
      operationId: dataMutationUsingDELETE
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - name: entity
          in: path
          description: entity
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /apply:
    options:
      tags:
        - apply-controller
      summary: apply
      operationId: addApplyUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: apply
          description: apply
          required: true
          schema:
            $ref: '#/definitions/Apply'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - apply-controller
      summary: apply
      operationId: addApplyUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: apply
          description: apply
          required: true
          schema:
            $ref: '#/definitions/Apply'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /auth:
    options:
      tags:
        - authentication-rest-controller
      summary: createAuthenticationToken
      operationId: createAuthenticationTokenUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: authenticationRequest
          description: authenticationRequest
          required: true
          schema:
            $ref: '#/definitions/JwtAuthenticationRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - authentication-rest-controller
      summary: createAuthenticationToken
      operationId: createAuthenticationTokenUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: authenticationRequest
          description: authenticationRequest
          required: true
          schema:
            $ref: '#/definitions/JwtAuthenticationRequest'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /datasource/_datasource:
    get:
      tags:
        - data-source-controller
      summary: list
      operationId: listDataSourceUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - data-source-controller
      summary: addDataSource
      operationId: addDataSourceUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dataSource
          description: dataSource
          required: true
          schema:
            $ref: '#/definitions/DataSource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - data-source-controller
      summary: addDataSource
      operationId: addDataSourceUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dataSource
          description: dataSource
          required: true
          schema:
            $ref: '#/definitions/DataSource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/datasource/_datasource/{datasourceId}':
    get:
      tags:
        - data-source-controller
      summary: findDataSource
      operationId: findDataSourceUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: datasourceId
          in: path
          description: datasourceId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSource'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/datasource/_datasource/put/{id}':
    put:
      tags:
        - data-source-controller
      summary: editDataSource
      operationId: editDataSourceUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: dataSource
          description: dataSource
          required: true
          schema:
            $ref: '#/definitions/DataSource'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DataSource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /permission/_permission:
    get:
      tags:
        - permission-controller
      summary: list
      operationId: listPermissionUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: roleId
          in: query
          description: roleId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - permission-controller
      summary: addPermission
      operationId: addPermissionUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: permission
          description: permission
          required: true
          schema:
            $ref: '#/definitions/Permission'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Permission'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - permission-controller
      summary: addPermission
      operationId: addPermissionUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: permission
          description: permission
          required: true
          schema:
            $ref: '#/definitions/Permission'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Permission'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/permission/_permission/{id}':
    get:
      tags:
        - permission-controller
      summary: findUser
      operationId: findPermissionUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Permission'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - permission-controller
      summary: editPermission
      operationId: editPermissionUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: permission
          description: permission
          required: true
          schema:
            $ref: '#/definitions/Permission'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Permission'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /refresh:
    get:
      tags:
        - authentication-rest-controller
      summary: refreshAndGetAuthenticationToken
      operationId: refreshAndGetAuthenticationTokenUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /role/_roles:
    get:
      tags:
        - role-controller
      summary: list
      operationId: getRoles
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - role-controller
      summary: addRole
      operationId: addRoleUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: role
          description: role
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Role'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - role-controller
      summary: addRole
      operationId: addRoleUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: role
          description: role
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Role'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/role/_roles/put/{id}':
    put:
      tags:
        - role-controller
      summary: editRole
      operationId: editRoleUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: role
          description: role
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Role'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/role/_roles/{roleId}':
    get:
      tags:
        - role-controller
      summary: findRole
      operationId: findRoleUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: roleId
          in: path
          description: roleId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Role'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /schemas/_entitys:
    get:
      tags:
        - schema-controller
      summary: getSchemas
      operationId: getSchemasUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Entity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - schema-controller
      summary: addEntity
      operationId: addEntityUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Entity'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Entity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - schema-controller
      summary: addEntity
      operationId: addEntityUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Entity'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Entity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/schemas/_entitys/{eid}':
    get:
      tags:
        - schema-controller
      summary: findOne
      operationId: findSchemaEntityGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: eid
          in: path
          description: eid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Entity'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/schemas/_entitys/put/{id}':
    put:
      tags:
        - schema-controller
      summary: editEntity
      operationId: editEntityUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: entity
          description: entity
          required: true
          schema:
            $ref: '#/definitions/Entity'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Entity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /schemas/_fields:
    get:
      tags:
        - schema-controller
      summary: findAllFields
      operationId: findFieldsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: eid
          in: query
          description: eid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Field'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - schema-controller
      summary: addField
      operationId: addFieldUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: field
          description: field
          required: true
          schema:
            $ref: '#/definitions/Field'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Field'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - schema-controller
      summary: addField
      operationId: addFieldUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: field
          description: field
          required: true
          schema:
            $ref: '#/definitions/Field'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Field'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/schemas/_fields/{fid}':
    get:
      tags:
        - schema-controller
      summary: findOneField
      operationId: findFieldUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: fid
          in: path
          description: fid
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Field'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/schemas/_fields/put/{id}':
    put:
      tags:
        - schema-controller
      summary: editField
      operationId: editSchemaFieldUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: field
          description: field
          required: true
          schema:
            $ref: '#/definitions/Field'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Field'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /schemas/fields:
    get:
      tags:
        - schema-controller
      summary: findEntityFields
      operationId: findEntityFieldsUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: entityName
          in: query
          description: entityName
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Field'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/schemas/resetCurrentDs/{dataSourceId}':
    put:
      tags:
        - schema-controller
      summary: resetCurrentDs
      operationId: resetCurrentDsUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: dataSourceId
          in: path
          description: dataSourceId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/schemas/sync/{dataSourceId}':
    put:
      tags:
        - schema-controller
      summary: syncSchemas
      operationId: syncSchemasUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: dataSourceId
          in: path
          description: dataSourceId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ResponseEntity'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/_users:
    get:
      tags:
        - user-controller
      summary: list
      operationId: listUsersGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - user-controller
      summary: addUser
      operationId: addUserUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    post:
      tags:
        - user-controller
      summary: addUser
      operationId: addUserUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/_users/put/{id}':
    put:
      tags:
        - user-controller
      summary: editField
      operationId: editUserFieldUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: string
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  '/user/_users/{userId}':
    get:
      tags:
        - user-controller
      summary: findUser
      operationId: findUserUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: userId
          in: path
          description: userId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /user/me:
    get:
      tags:
        - user-controller
      summary: getAuthenticatedUser
      operationId: getAuthenticatedUserUsingGET
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/JwtUser'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Apply:
    type: object
    properties:
      username:
        type: string
        x-go-custom-tag: "gorm:\"username\" yaml:\"username\" toml:\"username\""
      email:
        type: string
        format: email
        x-go-custom-tag: "gorm:\"email\" yaml:\"email\" toml:\"email\""
      password:
        type: string
        format: password
        x-go-custom-tag: "gorm:\"password\" yaml:\"password\" toml:\"password\""
      mobile:
        type: string
        x-go-custom-tag: "gorm:\"mobile\" yaml:\"mobile\" toml:\"mobile\""
  ChoiceItem:
    type: object
    properties:
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      name:
        type: string
        x-go-custom-tag: "gorm:\"name\" yaml:\"name\" toml:\"name\""
  DataSource:
    type: object
    properties:
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      type:
        type: string
        x-go-custom-tag: "gorm:\"type\" yaml:\"type\" toml:\"type\""
        enum:
          - mongo
          - mysql
          - cds
          - es
          - postgres
          - boltdb
          - bleve
          - dgraph
          - neo4j
          - arrangodb
          - tidedb
          - rocksdb
          - leveldb
          - sqlite3
      dbName:
        type: string
        x-go-custom-tag: "gorm:\"db_name\" yaml:\"db_name\" toml:\"db_name\""
      host:
        type: string
        x-go-custom-tag: "gorm:\"host\" yaml:\"host\" toml:\"host\""
      port:
        type: string
        x-go-custom-tag: "gorm:\"port\" yaml:\"port\" toml:\"port\""
      password:
        type: string
        format: password
        x-go-custom-tag: "gorm:\"password\" yaml:\"password\" toml:\"password\""
      username:
        type: string
        x-go-custom-tag: "gorm:\"username\" yaml:\"username\" toml:\"username\""
      sslMode:
        type: string
        x-go-custom-tag: "gorm:\"ssl_mode\" yaml:\"ssl_mode\" toml:\"ssl_mode\""
      prefixPath:
        type: string
        x-go-custom-tag: "gorm:\"prefix_path\" yaml:\"prefix_path\" toml:\"prefix_path\""
      jdbcUrl:
        type: string
        x-go-custom-tag: "gorm:\"jdbc_url\" yaml:\"jdbc_url\" toml:\"jdbc_url\""
      mySqlDbName:
        type: string
        x-go-custom-tag: "gorm:\"mysql_db_name\" yaml:\"mysql_db_name\" toml:\"mysql_db_name\""
      clusterName:
        type: string
        x-go-custom-tag: "gorm:\"cluster_name\" yaml:\"cluster_name\" toml:\"cluster_name\""
      current:
        type: boolean
        x-go-custom-tag: "gorm:\"current\" yaml:\"current\" toml:\"current\""
      indexName:
        type: string
        x-go-custom-tag: "gorm:\"index_name\" yaml:\"index_name\" toml:\"index_name\""
  Entity:
    type: object
    properties:
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      allow_create:
        type: boolean
        x-go-custom-tag: "gorm:\"allow_create\" yaml:\"allow_create\" toml:\"allow_create\""
      allow_read:
        type: boolean
        x-go-custom-tag: "gorm:\"allow_read\" yaml:\"allow_read\" toml:\"allow_read\""
      allow_update:
        type: boolean
        x-go-custom-tag: "gorm:\"allow_update\" yaml:\"allow_update\" toml:\"allow_update\""
      allow_delete:
        type: boolean
        x-go-custom-tag: "gorm:\"allow_delete\" yaml:\"allow_delete\" toml:\"allow_delete\""
      fields:
        type: array
        items:
          $ref: '#/definitions/Field'
      label:
        type: string
        x-go-custom-tag: "gorm:\"label\" yaml:\"label\" toml:\"label\""
      name:
        type: string
        x-go-custom-tag: "gorm:\"name\" yaml:\"name\" toml:\"name\""
      redirect:
        type: string
        enum:
          - edit
          - show
          - list
        x-go-custom-tag: "gorm:\"redirect\" yaml:\"redirect\" toml:\"redirect\""
      showInMenu:
        type: boolean
        x-go-custom-tag: "gorm:\"show_in_menu\" yaml:\"show_in_menu\" toml:\"show_in_menu\""
  Field:
    type: object
    properties:
      choices:
        type: array
        items:
          $ref: '#/definitions/IChoiceItem'
      component:
        type: string
        enum:
          - Autocomplete
          - Boolean
          - NullableBoolean
          - CheckboxGroup
          - Date
          - Disabled
          - File
          - Image
          - LongText
          - Number
          - RadioButtonGroup
          - ReferenceArray
          - Reference
          - RichText
          - SelectArray
          - Select
          - Text
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      eid:
        type: string
        x-go-custom-tag: "gorm:\"eid\" yaml:\"eid\" toml:\"eid\""
      dataSourceId:
        type: string
        x-go-custom-tag: "gorm:\"data_source_id\" yaml:\"data_source_id\" toml:\"data_source_id\""
      defaultValue:
        type: string
        x-go-custom-tag: "gorm:\"default_value\" yaml:\"default_value\" toml:\"default_value\""
      inputType:
        type: string
        enum:
          - text
          - email
          - password
          - url
        x-go-custom-tag: "gorm:\"input_type\" yaml:\"input_type\" toml:\"input_type\""
      isAutoIncremented:
        type: boolean
        x-go-custom-tag: "gorm:\"is_auto_incremented\" yaml:\"is_auto_incremented\" toml:\"is_auto_incremented\""
      isPartOfPrimaryKey:
        type: boolean
        x-go-custom-tag: "gorm:\"is_part_of_primary_key\" yaml:\"is_part_of_primary_key\" toml:\"is_part_of_primary_key\""
      label:
        type: string
        x-go-custom-tag: "gorm:\"label\" yaml:\"label\" toml:\"label\""
      maxLength:
        type: integer
        format: int32
        x-go-custom-tag: "gorm:\"max_length\" yaml:\"max_length\" toml:\"max_length\""
      maxValue:
        type: string
        x-go-custom-tag: "gorm:\"max_value\" yaml:\"max_value\" toml:\"max_value\""
      minValue:
        type: string
        x-go-custom-tag: "gorm:\"min_value\" yaml:\"min_value\" toml:\"min_value\""
      name:
        type: string
        x-go-custom-tag: "gorm:\"name\" yaml:\"name\" toml:\"name\""
      reference:
        type: string
        x-go-custom-tag: "gorm:\"reference\" yaml:\"reference\" toml:\"reference\""
      referenceOptionText:
        type: string
        x-go-custom-tag: "gorm:\"reference_option_text\" yaml:\"reference_option_text\" toml:\"reference_option_text\""
      required:
        type: boolean
        x-go-custom-tag: "gorm:\"required\" yaml:\"required\" toml:\"required\""
      showInCreate:
        type: boolean
        x-go-custom-tag: "gorm:\"show_in_create\" yaml:\"show_in_create\" toml:\"show_in_create\""
      showInEdit:
        type: boolean
        x-go-custom-tag: "gorm:\"show_in_edit\" yaml:\"show_in_edit\" toml:\"show_in_edit\""
      showInFilter:
        type: boolean
        x-go-custom-tag: "gorm:\"show_in_filter\" yaml:\"show_in_filter\" toml:\"show_in_filter\""
      showInList:
        type: boolean
        x-go-custom-tag: "gorm:\"show_in_list\" yaml:\"show_in_list\" toml:\"show_in_list\""
      showInShow:
        type: boolean
        x-go-custom-tag: "gorm:\"show_in_show\" yaml:\"show_in_show\" toml:\"show_in_show\""
  GrantedAuthority:
    type: object
    properties:
      authority:
        type: string
  IChoiceItem:
    type: object
  JwtAuthenticationRequest:
    type: object
    properties:
      username:
        type: string
        x-go-custom-tag: "gorm:\"username\" yaml:\"username\" toml:\"username\""
      password:
        type: string
        format: password
        x-go-custom-tag: "gorm:\"password\" yaml:\"password\" toml:\"password\""
  JwtUser:
    type: object
    properties:
      authorities:
        type: array
        items:
          $ref: '#/definitions/GrantedAuthority'
      enabled:
        type: boolean
        x-go-custom-tag: "gorm:\"enabled\" yaml:\"enabled\" toml:\"enabled\""
      email:
        type: string
        format: email
        x-go-custom-tag: "gorm:\"email\" yaml:\"email\" toml:\"email\""
      username:
        type: string
        x-go-custom-tag: "gorm:\"username\" yaml:\"username\" toml:\"username\""
  Permission:
    type: object
    properties:
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      eid:
        type: string
        x-go-custom-tag: "gorm:\"eid\" yaml:\"name\" toml:\"name\""
      roleId:
        type: string
        x-go-custom-tag: "gorm:\"role_id\" yaml:\"role_id\" toml:\"role_id\""
      c:
        type: boolean
        x-go-custom-tag: "gorm:\"c\" yaml:\"c\" toml:\"c\""
      u:
        type: boolean
        x-go-custom-tag: "gorm:\"u\" yaml:\"u\" toml:\"u\""
      r:
        type: boolean
        x-go-custom-tag: "gorm:\"r\" yaml:\"r\" toml:\"r\""
      d:
        type: boolean
        x-go-custom-tag: "gorm:\"d\" yaml:\"d\" toml:\"d\""
  ResponseEntity:
    type: object
    properties:
      body:
        type: object
      statusCode:
        type: string
        enum:
          - '100'
          - '101'
          - '102'
          - '103'
          - '200'
          - '201'
          - '202'
          - '203'
          - '204'
          - '205'
          - '206'
          - '207'
          - '208'
          - '226'
          - '300'
          - '301'
          - '302'
          - '303'
          - '304'
          - '305'
          - '307'
          - '308'
          - '400'
          - '401'
          - '402'
          - '403'
          - '404'
          - '405'
          - '406'
          - '407'
          - '408'
          - '409'
          - '410'
          - '411'
          - '412'
          - '413'
          - '414'
          - '415'
          - '416'
          - '417'
          - '418'
          - '419'
          - '420'
          - '421'
          - '422'
          - '423'
          - '424'
          - '426'
          - '428'
          - '429'
          - '431'
          - '451'
          - '500'
          - '501'
          - '502'
          - '503'
          - '504'
          - '505'
          - '506'
          - '507'
          - '508'
          - '509'
          - '510'
          - '511'
      statusCodeValue:
        type: integer
        format: int32
  Role:
    type: object
    properties:
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      name:
        type: string
        x-go-custom-tag: "gorm:\"name\" yaml:\"name\" toml:\"name\""
      users:
        type: array
        items:
          $ref: '#/definitions/User'
  User:
    type: object
    properties:
      id:
        type: string
        x-go-custom-tag: "gorm:\"primary_key\" yaml:\"-\" toml:\"-\""
      email:
        type: string
        format: email
        x-go-custom-tag: "gorm:\"email\" yaml:\"email\" toml:\"email\""
      enabled:
        type: boolean
        x-go-custom-tag: "gorm:\"enabled\" yaml:\"enabled\" toml:\"enabled\""
      lastPasswordResetDate:
        type: string
        format: date-time
        x-go-custom-tag: "gorm:\"last_password_reset_date\" yaml:\"-\" toml:\"-\""
      password:
        type: string
        format: password
        x-go-custom-tag: "gorm:\"password\" yaml:\"password\" toml:\"password\""
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
      username:
        type: string
        x-go-custom-tag: "gorm:\"username\" yaml:\"username\" toml:\"username\""