// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// Permission permission
// swagger:model Permission
type Permission struct {

	// c
	C bool `json:"c,omitempty" gorm:"c" yaml:"c" toml:"c"`

	// d
	D bool `json:"d,omitempty" gorm:"d" yaml:"d" toml:"d"`

	// eid
	Eid string `json:"eid,omitempty" gorm:"eid" yaml:"name" toml:"name"`

	// id
	ID string `json:"id,omitempty" gorm:"primary_key" yaml:"-" toml:"-"`

	// r
	R bool `json:"r,omitempty" gorm:"r" yaml:"r" toml:"r"`

	// role Id
	RoleID string `json:"roleId,omitempty" gorm:"role_id" yaml:"role_id" toml:"role_id"`

	// u
	U bool `json:"u,omitempty" gorm:"u" yaml:"u" toml:"u"`
}

// Validate validates this permission
func (m *Permission) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *Permission) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Permission) UnmarshalBinary(b []byte) error {
	var res Permission
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
